{
 "paragraphs": [
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "import org.apache.spark.sql.functions._\n//Leitura de dados Facilities\nval csvFacilities = \"/data/tp/Facilities.csv\"\n\n// Leitura csv\nval df = spark.read.format(\"csv\")\n  .option(\"header\", \"true\") // set this to true if your CSV file has header\n  .option(\"inferSchema\", \"true\") // set this to true if you want Spark to infer the schema\n  .option(\"delimiter\", \";\") // ; is the separator\n  .load(csvFacilities)\n\nval atributos = df.columns\nprintln(\"Atributos:\")\natributos.foreach(println)\n//val summary_facilities = df.describe()\n//summary_facilities.show()\n/*    summary_facilities.coalesce(1).write\n .format(\"csv\")\n    .option(\"header\", \"true\")\n    .option(\"delimiter\", \",\")\n    .mode(\"overwrite\")\n    .save(\"/data/tp/summary_facilities.csv\")\n*/\n//df.printSchema()\n//df.show()\n",
   "id": "",
   "dateCreated": "2023-04-23 23:44:45.859",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-04-29 15:20:46.037",
   "dateUpdated": "2023-04-29 15:20:46.347",
   "dateFinished": "2023-04-29 15:20:46.346"
  },
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala",
    "tableHide": false
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "FINISHED",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "import org.apache.spark.sql.functions._\n//Leitura de dados Hotel\nval csvHotel = \"/data/tp/Hotel.csv\"\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .load(csvHotel)\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"Localização\", \"localizacao\")\n        .withColumnRenamed(\"Estrelas\", \"estrelas\")\n        .withColumnRenamed(\"Idade Máxima de Crianças (Anos)\", \"idade_max_criancas\")\n        .withColumnRenamed(\"Idade Máxima de Bebés (Meses)\", \"idade_max_bebes\")\n        .withColumnRenamed(\"Hora máxima de check-in\", \"hora_max_checkin\")\n        .withColumnRenamed(\"Quantidade de quartos\", \"qtd_quartos\")\n\n//val colums = df.columns\n//println(\"colums:\")\n//colums.foreach(println)\ndf.createOrReplaceTempView(\"Hotel\")\ndf.cache();\n//df.describe().show()\n//df.show()\n\n",
   "dateStarted": "2023-04-29 15:20:46.347",
   "dateUpdated": "2023-04-29 15:20:46.985",
   "dateFinished": "2023-04-29 15:20:46.985"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Leitura de dados Tipologias\nval csvTipologias = \"/data/tp/Tipologias.csv\"\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .load(csvTipologias)\n        .withColumnRenamed(\"Room ID\", \"room_ID\")\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"Tipo de quarto\", \"tipo_quarto\")\n        .withColumnRenamed(\"Quantidade\", \"quantidade\")\n        .withColumnRenamed(\"Capacidade máxima\", \"capacidade_maxima\")\n        .withColumnRenamed(\"Capacidade máxima de adultos\", \"capacidade_max_adultos\")\n        .withColumnRenamed(\"Capacidade máxima de crianças\", \"capacidade_max_criancas\")\n        .withColumnRenamed(\"Capacidade máxima de bebés\", \"capacidade_max_bebes\")\n\ndf.select(\n    col(\"tipo_quarto\"),\n    col(\"quantidade\"),\n    col(\"capacidade_maxima\"),\n    col(\"capacidade_max_adultos\"),\n    col(\"capacidade_max_criancas\"),\n    col(\"capacidade_max_bebes\")\n  ).describe().show()\ndf.createOrReplaceTempView(\"Tipologias\")\ndf.cache();\n//df.show()\n",
   "id": "",
   "dateCreated": "2023-04-24 21:16:30.526",
   "config": {},
   "dateStarted": "2023-04-29 15:20:46.985",
   "dateUpdated": "2023-04-29 15:20:47.454",
   "dateFinished": "2023-04-29 15:20:47.454"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Leitura de dados Quartos Reservados\nval csvQ_Reservados= \"/data/tp/Quartos_Reservados.csv\"\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .load(csvQ_Reservados)\n        .withColumnRenamed(\"Room ID\", \"room_ID\")\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"País\", \"pais\")\n        .withColumnRenamed(\"Estado da reserva\", \"estado_reserva\")\n        .withColumnRenamed(\"RatePlan\", \"rate_plan\")\n        .withColumnRenamed(\"Data da reserva\", \"data_reserva\")\n        .withColumnRenamed(\"Data chegada\", \"data_chegada\")\n        .withColumnRenamed(\"Data de partida\", \"data_partida\")\n        .withColumnRenamed(\"Número de noites\", \"num_noites\")\n        .withColumnRenamed(\"Ocupação\", \"ocupacao\")\n        .withColumnRenamed(\"Adultos\", \"adultos\")\n        .withColumnRenamed(\"Crianças\", \"criancas\")\n        .withColumnRenamed(\"Preço (€)\", \"preco_euros\")\n\ndf.createOrReplaceTempView(\"Quartos_Reservados\")\ndf.cache()\n\ndf.select(\"pais\", \"estado_reserva\", \"rate_plan\", \"data_reserva\", \"data_chegada\", \"data_partida\", \"num_noites\", \"ocupacao\", \"adultos\", \"criancas\", \"preco_euros\").describe().show()\n//df.show()",
   "id": "",
   "dateCreated": "2023-04-24 21:18:31.653",
   "config": {},
   "dateStarted": "2023-04-29 15:20:47.455",
   "dateUpdated": "2023-04-29 15:20:49.016",
   "dateFinished": "2023-04-29 15:20:49.015"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Leitura de dados externos Feriados\nval csvFeriados= \"/data/tp/Feriados.csv\"\n\nval df = spark.read.format(\"csv\")\n  .option(\"header\", \"true\") // set this to true if your CSV file has header\n  .option(\"inferSchema\", \"true\") // set this to true if you want Spark to infer the schema\n  .option(\"delimiter\", \";\") // ; is the separator\n  .load(csvFeriados)\n\ndf.show()",
   "id": "",
   "dateCreated": "2023-04-24 22:00:30.321",
   "config": {},
   "dateStarted": "2023-04-29 15:20:49.016",
   "dateUpdated": "2023-04-29 15:20:49.372",
   "dateFinished": "2023-04-29 15:20:49.372"
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}