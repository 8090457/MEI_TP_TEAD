{
 "paragraphs": [
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala",
    "tableHide": false
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "FINISHED",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "val sqlQuery =\n    \"\"\"\n      |SELECT qr.pais, qr.estado_reserva, qr.rate_plan, qr.data_reserva, qr.data_partida,\n      |     qr.num_noites, qr.ocupacao, qr.adultos, qr.criancas, qr.preco_euros, qr.data_chegada,    \n      |     t.tipo_quarto, t.quantidade, t.capacidade_maxima, t.capacidade_max_adultos, \n      |     t.capacidade_max_criancas, t.capacidade_max_bebes, \n      |     h.localizacao, h.estrelas, h.idade_max_criancas, h.idade_max_bebes, h.qtd_quartos \n      |FROM Quartos_Reservados qr \n      |INNER JOIN Tipologias t \n      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n      |INNER JOIN Hotel h \n      |     ON h.hotel_ID = qr.hotel_ID\n      |\"\"\".stripMargin\n\nval result = spark.sql(sqlQuery)\nresult.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")\n//Hotel h \n// // ,\" +\nresult.limit(1000).show()",
   "dateStarted": "2023-04-30 20:28:49.740",
   "dateUpdated": "2023-04-30 20:28:50.876",
   "dateFinished": "2023-04-30 20:28:50.876"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "collapsed": true
      }
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "ERROR",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM Quartos_Reservados qr\n      |INNER JOIN Hotel h \n      |ON h.hotel_ID = qr.hotel_ID\n      |\"\"\".stripMargin\n//      |INNER JOIN Feriados F \n//      |INNER JOIN Tipologias t \n//      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")\n//result.limit(1000).show()\n//result.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")",
   "id": "",
   "dateCreated": "2023-04-29 10:57:44.597",
   "config": {
    "tableHide": true
   },
   "dateStarted": "2023-04-30 20:29:07.453",
   "dateUpdated": "2023-04-30 20:29:07.790",
   "dateFinished": "2023-04-30 20:29:07.790"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM Quartos_Reservados qr\n      |inner JOIN Tipologias t \n      |ON t.room_ID = qr.room_ID \n      |\"\"\".stripMargin\n\n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()",
   "id": "",
   "dateCreated": "2023-04-29 18:36:17.797",
   "config": {},
   "dateStarted": "2023-04-30 20:29:19.953",
   "dateUpdated": "2023-04-30 20:29:20.271",
   "dateFinished": "2023-04-30 20:29:20.271"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”: //verificação dos campos em falta\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM Quartos_Reservados qr\n      |left JOIN Tipologias t \n      |ON t.room_ID = qr.room_ID \n      |WHERE NOT EXISTS (\n      |   SELECT * \n      |   FROM Tipologias \n      |   WHERE qr.room_ID = room_ID \n      |)\n      |\"\"\".stripMargin\n\n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\n//resultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-29 17:59:57.758",
   "config": {},
   "dateStarted": "2023-04-30 20:29:22.433",
   "dateUpdated": "2023-04-30 20:29:22.823",
   "dateFinished": "2023-04-30 20:29:22.822"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Feriados: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT Distinct qr.*\n      |FROM Quartos_Reservados qr\n      | inner JOIN Feriados F \n      | ON F.Date >= qr.data_partida AND F.Date <= qr.data_chegada\n      | where f.is_holiday = 1 \n      |\"\"\".stripMargin\n//      |INNER JOIN Feriados F \n//      |INNER JOIN Tipologias t \n//and qr.Reserve_ID = 1418228\n//      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n//data_chegada 25103\n//data_partida 25102\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-29 18:55:55.232",
   "config": {},
   "dateStarted": "2023-04-30 20:29:58.376",
   "dateUpdated": "2023-04-30 20:29:59.565",
   "dateFinished": "2023-04-30 20:29:59.565"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//existe 28 feriados\nvar sqlQuery2F =\n    \"\"\"\n      |select date from Feriados WHERE is_holiday = 1 \n      |\"\"\".stripMargin\n      val result = spark.sql(sqlQuery2F)\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()\n\n\n",
   "id": "",
   "dateCreated": "2023-04-30 00:11:10.892",
   "config": {},
   "dateStarted": "2023-04-30 20:30:05.910",
   "dateUpdated": "2023-04-30 20:30:06.136",
   "dateFinished": "2023-04-30 20:30:06.136"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Número de feriados que faz join com as reservas de quartos com a data de chegada e a data de partidoa\n//Existem 3271 reservas em que existe um feriado\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT distinct qr.*\n      |FROM Quartos_Reservados qr\n      |inner JOIN Feriados f ON TO_DATE(f.date, 'dd/MM/yyyy') >= TO_DATE(qr.data_chegada, 'dd/MM/yyyy') \n      |AND TO_DATE(f.date, 'dd/MM/yyyy') <= TO_DATE(qr.data_partida, 'dd/MM/yyyy')\n      |WHERE f.is_holiday = 1\n      |\"\"\".stripMargin\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()\n",
   "id": "",
   "dateCreated": "2023-04-30 15:33:50.938",
   "config": {},
   "dateStarted": "2023-04-30 20:30:08.153",
   "dateUpdated": "2023-04-30 20:30:09.681",
   "dateFinished": "2023-04-30 20:30:09.681"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var sqlQuery2 =\n    \"\"\"\n      |SELECT distinct qr.*, f.*\n      |FROM Quartos_Reservados qr\n      |left JOIN Feriados f ON TO_DATE(f.Date, 'dd/MM/yyyy') >= TO_DATE(qr.data_chegada, 'dd/MM/yyyy') \n      |AND TO_DATE(f.Date, 'dd/MM/yyyy') <= TO_DATE(qr.data_partida, 'dd/MM/yyyy') and f.is_holiday = 1\n      |\n      |\"\"\".stripMargin\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-30 16:48:55.163",
   "config": {},
   "dateStarted": "2023-04-30 20:30:11.586",
   "dateUpdated": "2023-04-30 20:30:13.279",
   "dateFinished": "2023-04-30 20:30:13.279"
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}