{
 "paragraphs": [
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala",
    "tableHide": false
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "ABORT",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "val sqlQuery =\n    \"\"\"\n      |SELECT qr.pais, qr.estado_reserva, qr.rate_plan, qr.data_reserva, qr.data_partida,\n      |     qr.num_noites, qr.ocupacao, qr.adultos, qr.criancas, qr.preco_euros, qr.data_chegada,    \n      |     t.tipo_quarto, t.quantidade, t.capacidade_maxima, t.capacidade_max_adultos, \n      |     t.capacidade_max_criancas, t.capacidade_max_bebes, \n      |     h.localizacao, h.estrelas, h.idade_max_criancas, h.idade_max_bebes, h.qtd_quartos \n      |FROM Quartos_Reservados qr \n      |INNER JOIN Tipologias t \n      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n      |INNER JOIN Hotel h \n      |     ON h.hotel_ID = qr.hotel_ID\n      |\"\"\".stripMargin\n\nval result = spark.sql(sqlQuery)\nresult.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")\n//Hotel h \n// // ,\" +\nresult.limit(1000).show()",
   "dateStarted": "2023-04-30 16:13:32.774",
   "dateUpdated": "2023-04-30 16:13:32.774",
   "dateFinished": "2023-04-30 15:32:12.098"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "collapsed": true
      }
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "ERROR",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM QuartosReservados qr\n      |INNER JOIN Hotel h \n      |ON h.hotel_ID = qr.hotel_ID\n      |\"\"\".stripMargin\n//      |INNER JOIN Feriados F \n//      |INNER JOIN Tipologias t \n//      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")\n//result.limit(1000).show()\n//result.coalesce(1).write.format(\"csv\").option(\"header\", \"true\").mode(\"overwrite\").save(\"/data/tp/arquivo\")",
   "id": "",
   "dateCreated": "2023-04-29 10:57:44.597",
   "config": {
    "tableHide": true
   },
   "dateStarted": "2023-05-01 09:54:36.448",
   "dateUpdated": "2023-05-01 09:54:37.740",
   "dateFinished": "2023-05-01 09:54:37.740",
   "results": {
    "code": "ERROR",
    "msg": [
     {
      "type": "TEXT",
      "data": "+---------------+\n|max(num_linhas)|\n+---------------+\n|          25105|\n+---------------+\n\norg.apache.spark.sql.AnalysisException: Found duplicate column(s) when inserting into file:/data/tp/arquivo: `hotel_id`;\n  at org.apache.spark.sql.util.SchemaUtils$.checkColumnNameDuplication(SchemaUtils.scala:85)\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:65)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:104)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:102)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:122)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:83)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:81)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\n  at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\n  at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:285)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:271)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:229)\n  ... 59 elided\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_linhas",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM QuartosReservados qr\n      |inner JOIN Tipologias t \n      |ON t.room_ID = qr.room_ID \n      |\"\"\".stripMargin\n\n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()",
   "id": "",
   "dateCreated": "2023-04-29 18:36:17.797",
   "config": {},
   "dateStarted": "2023-05-01 09:55:14.414",
   "dateUpdated": "2023-05-01 09:55:14.857",
   "dateFinished": "2023-05-01 09:55:14.857",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+---------------+\n|max(num_linhas)|\n+---------------+\n|          25097|\n+---------------+\n\n\u001b[1m\u001b[34msqlQuery2\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m =\n\"\nSELECT *\nFROM QuartosReservados qr\ninner JOIN Tipologias t\nON t.room_ID = qr.room_ID\n\"\n\u001b[1m\u001b[34mresult\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 28 more fields]\n\u001b[1m\u001b[34mresultCount\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 29 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Tipologia: “Hotel ID”: //verificação dos campos em falta\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT * \n      |FROM Quartos_Reservados qr\n      |left JOIN Tipologias t \n      |ON t.room_ID = qr.room_ID \n      |WHERE NOT EXISTS (\n      |   SELECT * \n      |   FROM Tipologias \n      |   WHERE qr.room_ID = room_ID \n      |)\n      |\"\"\".stripMargin\n\n\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\n//resultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-29 17:59:57.758",
   "config": {},
   "dateStarted": "2023-04-29 18:46:26.482",
   "dateUpdated": "2023-04-29 18:46:27.521",
   "dateFinished": "2023-04-29 18:46:27.520"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1 Quartos_Reservados: “Hotel ID” com Feriados: “Hotel ID”:\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT Distinct qr.*\n      |FROM Quartos_Reservados qr\n      | inner JOIN Feriados F \n      | ON F.Date >= qr.data_partida AND F.Date <= qr.data_chegada\n      | where f.is_holiday = 1 \n      |\"\"\".stripMargin\n//      |INNER JOIN Feriados F \n//      |INNER JOIN Tipologias t \n//and qr.Reserve_ID = 1418228\n//      |     ON t.hotel_ID = qr.hotel_ID AND t.room_ID = qr.room_ID \n//data_chegada 25103\n//data_partida 25102\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-29 18:55:55.232",
   "config": {},
   "dateStarted": "2023-04-30 15:25:33.136",
   "dateUpdated": "2023-04-30 15:25:41.310",
   "dateFinished": "2023-04-30 15:25:41.310"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//existe 28 feriados\nvar sqlQuery2F =\n    \"\"\"\n      |select Date from Feriados WHERE is_holiday = 1 \n      |\"\"\".stripMargin\n      val result = spark.sql(sqlQuery2F)\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()\n\n\n",
   "id": "",
   "dateCreated": "2023-04-30 00:11:10.892",
   "config": {},
   "dateStarted": "2023-04-30 15:26:22.074",
   "dateUpdated": "2023-04-30 15:26:22.562",
   "dateFinished": "2023-04-30 15:26:22.562"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Número de feriados que faz join com as reservas de quartos com a data de chegada e a data de partidoa\n//Existem 3271 reservas em que existe um feriado\nvar sqlQuery2 =\n    \"\"\"\n      |SELECT distinct qr.*\n      |FROM Quartos_Reservados qr\n      |inner JOIN Feriados f ON TO_DATE(f.Date, 'dd/MM/yyyy') >= TO_DATE(qr.data_chegada, 'dd/MM/yyyy') \n      |AND TO_DATE(f.Date, 'dd/MM/yyyy') <= TO_DATE(qr.data_partida, 'dd/MM/yyyy')\n      |WHERE f.is_holiday = 1\n      |\"\"\".stripMargin\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()\n",
   "id": "",
   "dateCreated": "2023-04-30 15:33:50.938",
   "config": {},
   "dateStarted": "2023-04-30 21:02:50.130",
   "dateUpdated": "2023-04-30 21:02:52.790",
   "dateFinished": "2023-04-30 21:02:52.790"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var sqlQuery2 =\n    \"\"\"\n      |SELECT distinct qr.*, f.*\n      |FROM Quartos_Reservados qr\n      |left JOIN Feriados f ON TO_DATE(f.Date, 'dd/MM/yyyy') >= TO_DATE(qr.data_chegada, 'dd/MM/yyyy') \n      |AND TO_DATE(f.Date, 'dd/MM/yyyy') <= TO_DATE(qr.data_partida, 'dd/MM/yyyy') and f.is_holiday = 1\n      |\n      |\"\"\".stripMargin\nval result = spark.sql(sqlQuery2)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(1000000).show()",
   "id": "",
   "dateCreated": "2023-04-30 16:48:55.163",
   "config": {},
   "dateStarted": "2023-04-30 21:22:13.574",
   "dateUpdated": "2023-04-30 21:22:15.549",
   "dateFinished": "2023-04-30 21:22:15.549"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_linhas",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//1889 reservas \nvar sqlQueryEventos =\n    \"\"\"\n      SELECT DISTINCT qr.*\n      FROM QuartosReservados qr\n      INNER JOIN Eventos e ON e.start_Date >= qr.data_chegada AND e.end_date <= qr.data_partida\n      WHERE qr.data_chegada <= e.end_date AND qr.data_partida >= e.start_Date \n      \n    \"\"\".stripMargin\nval result = spark.sql(sqlQueryEventos)\n// adiciona uma coluna com o número de linhas\nval resultCount = result.withColumn(\"num_linhas\", count(\"*\").over())\n// exibe o valor da coluna \"num_linhas\"\nresultCount.agg(max(\"num_linhas\")).show()\nresult.limit(10000).show()",
   "id": "",
   "dateCreated": "2023-04-30 21:20:57.402",
   "config": {},
   "dateStarted": "2023-05-01 10:05:20.604",
   "dateUpdated": "2023-05-01 10:05:22.423",
   "dateFinished": "2023-05-01 10:05:22.422",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+---------------+\n|max(num_linhas)|\n+---------------+\n|           1889|\n+---------------+\n\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+----------+--------+-------+--------+-----+---------------+------------+------------+\n|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|         tipo_quarto|           rate_plan|        data_reserva|num_noites|ocupacao|adultos|criancas|bebes|    preco_euros|data_chegada|data_partida|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+----------+--------+-------+--------+-----+---------------+------------+------------+\n|     514|   1485226|   Reino Unido|     Cancelado|   2492|         Garden Room|   Non-Refundable >5|2022-04-30 22:29:...|         7|       1|      1|       0|    1|          924.0|  2022-08-10|  2022-08-17|\n|     445|   1505070|Estados Unidos|     Registado|   2139|       Terrace Room |      Bar (2 noites)|2022-05-25 20:49:...|         3|       2|      2|       0|    2|          720.0|  2022-09-23|  2022-09-26|\n|     560|   1505532|   Reino Unido|     Registado|   2868|         Estudio 2+2|                  7N|2022-05-26 15:05:...|        11|       1|      1|       0|    1|        891.225|  2022-09-19|  2022-09-30|\n|     482|   1517444|       Espanha|     Registado|   2285|      Apartamento T1|(WEB) Best Availa...|2022-06-10 16:17:...|        13|       3|      3|       0|    3|         2156.5|  2022-07-18|  2022-07-31|\n|     482|   1531132|      Portugal|     Registado|   2285|      Apartamento T1|(WEB) Best Availa...|2022-06-28 21:24:...|         5|       4|      4|       0|    4|         745.75|  2022-07-14|  2022-07-19|\n|     482|   1531682|      Portugal|     Registado|   2285|      Apartamento T1|(WEB) Non-refunda...|2022-06-29 16:43:...|         6|       4|      4|       0|    4|1263.3999999999|  2022-08-09|  2022-08-15|\n|     314|   1555450|      Portugal|     Cancelado|   1380|               Duplo|            Standard|2022-07-27 18:00:...|         3|       2|      2|       0|    2|          270.0|  2022-08-21|  2022-08-24|\n|     514|   1590749|        França|     Registado|   2494|           Pool Room|   Non-Refundable >5|2022-09-17 09:27:...|         5|       1|      1|       0|    1|          780.0|  2022-09-23|  2022-09-28|\n|     445|   1675987|        Brasil|     Registado|   2080|             Estúdio|      Bar (2 noites)|2023-02-10 23:09:...|         5|       2|      2|       0|    2|         1350.0|  2023-06-06|  2023-06-11|\n|     443|   1687305|       Bélgica|     Registado|   2061|   Clássico Standard|              Normal|2023-02-28 08:30:...|         5|       2|      2|       0|    2|          760.0|  2023-03-16|  2023-03-21|\n|     328|   1696269|   Reino Unido|     Registado|   1452|         Single Room|             WebSite|2023-03-13 00:34:...|         5|       1|      1|       0|    1|          256.8|  2023-03-19|  2023-03-24|\n|     392|   1700280|      Portugal|     Cancelado|   1801|QUARTO DUPLO OU T...|       Epoca Normal |2023-03-18 16:00:...|         1|       1|      1|       0|    1|           64.4|  2023-03-18|  2023-03-19|\n|     399|   1702477|        França|     Registado|   1860|     Studio Sea View| Best Available Rate|2023-03-21 16:52:...|         5|       2|      2|       0|    2|          545.0|  2023-07-04|  2023-07-09|\n|     413|   1716187|      Portugal|     Registado|   1913|Quarto Twin / Dup...|                 BAR|2023-04-09 11:19:...|         3|       2|      2|       0|    2|          450.0|  2023-06-08|  2023-06-11|\n|     328|   1719113|      Portugal|     Registado|   1450|6 Bed Mixed Dormi...|             WebSite|2023-04-12 20:48:...|         1|       1|      1|       0|    1|          27.03|  2023-04-15|  2023-04-16|\n|     311|   1482753|      Portugal|     Registado|   1407|DB - Quarto Duplo...|            Duplo BB|2022-04-27 09:26:...|         1|       2|      2|       0|    2|           89.1|  2022-08-12|  2022-08-13|\n|     311|   1524423|Estados Unidos|     Registado|   2159|SUT - Quarto Premium|   PREMIUM Room Only|2022-06-19 19:37:...|         2|       2|      2|       0|    2|          205.2|  2022-07-15|  2022-07-17|\n|     378|   1539789|        França|     Registado|   1730|Duplo Vista Mosteiro|Tarifa Não Reembo...|2022-07-10 19:39:...|         4|       2|      2|       0|    2|          479.2|  2022-08-04|  2022-08-08|\n|     539|   1545260|      Portugal|     Registado|   2545|            Villa T1|                 Bar|2022-07-18 12:53:...|         6|       1|      1|       0|    1|          570.0|  2022-07-18|  2022-07-24|\n|     310|   1561880|      Portugal|  NãoRegistado|   1424|Quarto Twin Standard|                  NR|2022-08-05 10:10:...|         3|       2|      2|       0|    2|         185.25|  2022-08-21|  2022-08-24|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+----------+--------+-------+--------+-----+---------------+------------+------------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34msqlQueryEventos\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m =\n\"\n      SELECT DISTINCT qr.*\n      FROM QuartosReservados qr\n      INNER JOIN Eventos e ON e.start_Date >= qr.data_chegada AND e.end_date <= qr.data_partida\n      WHERE qr.data_chegada <= e.end_date AND qr.data_partida >= e.start_Date\n\n    \"\n\u001b[1m\u001b[34mresult\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 14 more fields]\n\u001b[1m\u001b[34mresultCount\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 15 more fields]\n"
     }
    ]
   }
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}