{
 "paragraphs": [
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "import org.apache.spark.sql.DataFrame\n\nval joinFolder = \"/data/joins\"\nval saveJoins = true\n\ndef saveDataFrame(df: DataFrame, name: String): Unit = {\n    df.coalesce(1) // Print into a single file\n            .write\n            .option(\"delimiter\", \";\")\n            .option(\"header\", true) // Maintain Headers\n            .csv(s\"$joinFolder/$name\") // Write to csv\n}",
   "id": "",
   "dateCreated": "2023-04-30 19:59:44.804",
   "config": {},
   "dateStarted": "2023-04-30 21:42:47.050",
   "dateUpdated": "2023-04-30 21:42:47.343",
   "dateFinished": "2023-04-30 21:42:47.343"
  },
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala"
   },
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "FINISHED",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "val joinTipologia = spark.sql(\n    \"\"\"\n      | SELECT DISTINCT \n      |     Q.hotel_ID, \n      |     Q.Reserve_ID,\n      |     Q.pais,\n      |     Q.estado_reserva,\n      |     Q.room_ID,\n      |     Q.tipo_quarto AS Q_tipo_quarto,\n      |     Q.rate_plan,\n      |     Q.data_reserva,\n      |     Q.data_chegada,\n      |     Q.data_partida,\n      |     Q.num_noites,\n      |     Q.ocupacao,\n      |     Q.adultos,\n      |     Q.criancas,\n      |     Q.bebes,\n      |     Q.preco_euros,\n      |     T.tipo_quarto as T_tipo_quarto, \n      |     T.quantidade,\n      |     T.capacidade_maxima,\n      |     T.capacidade_minima,\n      |     T.capacidade_max_adultos,\n      |     T.capacidade_min_adultos,\n      |     T.capacidade_max_criancas,\n      |     T.capacidade_min_criancas,\n      |     T.capacidade_max_bebes,\n      |     T.capacidade_max_camas_extra,\n      |     T.capacidade_max_camas_extra_criancas,\n      |     T.capacidade_max_bercos_extra\n      | FROM QuartosReservados as Q\n      | INNER JOIN Tipologias as T\n      |     ON Q.hotel_ID = T.hotel_ID AND T.room_ID = Q.room_ID\n      |\"\"\".stripMargin)\n\njoinTipologia.createOrReplaceTempView(\"JoinTipologia\")\njoinTipologia.cache()\n\nif (saveJoins)\n    saveDataFrame(joinTipologia, \"joinTipologia\")\n\nprintln(joinTipologia.count())\njoinTipologia.printSchema()",
   "dateStarted": "2023-04-30 21:42:47.234",
   "dateUpdated": "2023-04-30 21:42:51.015",
   "dateFinished": "2023-04-30 21:42:51.015"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinTipologiaAndHotel = spark.sql(\n    \"\"\"\n      | SELECT \n      |     J.*,\n      |     H.localizacao,\n      |     H.estrelas,\n      |     H.idade_max_criancas,\n      |     H.idade_max_bebes,\n      |     H.hora_max_checkin,\n      |     H.qtd_quartos\n      | FROM joinTipologia as J\n      | INNER JOIN Hotel as H\n      |     ON J.hotel_ID = H.hotel_ID\n      |\"\"\".stripMargin)\n\njoinTipologiaAndHotel.createOrReplaceTempView(\"JoinTipologiaAndHotel\")\n\nprintln(joinTipologiaAndHotel.count())\njoinTipologiaAndHotel.printSchema()\nif (saveJoins)\n    saveDataFrame(joinTipologiaAndHotel, \"joinTipologiaAndHotel\")",
   "id": "",
   "dateCreated": "2023-04-30 20:01:48.781",
   "config": {},
   "dateStarted": "2023-04-30 21:42:51.027",
   "dateUpdated": "2023-04-30 21:42:52.886",
   "dateFinished": "2023-04-30 21:42:52.885"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinTipologiaAndHotelAndFeriados = spark.sql(\n    \"\"\"\n      | SELECT *\n      | FROM JoinTipologiaAndHotel AS J\n      | LEFT JOIN (SELECT * FROM Feriados WHERE is_holiday=1) AS F\n      | ON F.date <= J.data_partida AND f.date >= data_chegada\n      |\"\"\".stripMargin\n)\n\njoinTipologiaAndHotelAndFeriados.createOrReplaceTempView(\"JoinTipologiaAndHotelAndFeriados\")\nif (saveJoins)\n    saveDataFrame(joinTipologiaAndHotelAndFeriados, \"JoinTipologiaAndHotelAndFeriados\")\n\njoinTipologiaAndHotelAndFeriados.count()",
   "id": "",
   "dateCreated": "2023-04-30 20:12:14.191",
   "config": {},
   "dateStarted": "2023-04-30 21:42:52.897",
   "dateUpdated": "2023-04-30 21:42:58.041",
   "dateFinished": "2023-04-30 21:42:58.041"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "",
   "id": "",
   "dateCreated": "2023-04-30 20:16:51.675",
   "config": {},
   "dateStarted": "2023-04-30 21:43:27.275",
   "dateUpdated": "2023-04-30 21:43:27.470",
   "dateFinished": "2023-04-30 21:43:27.470"
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}