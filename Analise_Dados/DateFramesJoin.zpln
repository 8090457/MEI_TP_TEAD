{
 "paragraphs": [
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "import org.apache.spark.sql.DataFrame\n\nval joinFolder = \"/data/joins\"\nval saveJoins = false\n\ndef saveDataFrame(df: DataFrame, name: String): Unit = {\n    df.coalesce(1) // Print into a single file\n            .write\n            .option(\"header\", true) // Maintain Headers\n            .csv(s\"$joinFolder/$name\") // Write to csv\n}\nval initialCount = spark.sql(\n    \"\"\"\n      SELECT DISTINCT * FROM QuartosReservados\n      \"\"\")\nprintln(initialCount.count())",
   "id": "",
   "dateCreated": "2023-04-30 19:59:44.804",
   "config": {
    "editorHide": false
   },
   "dateStarted": "2023-05-01 15:25:59.193",
   "dateUpdated": "2023-05-01 15:25:59.847",
   "dateFinished": "2023-05-01 15:25:59.847"
  },
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala"
   },
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "FINISHED",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "val joinTipologia = spark.sql(\n    \"\"\"\n       SELECT DISTINCT \n           Q.hotel_ID, \n           Q.Reserve_ID,\n           Q.pais,\n           Q.estado_reserva,\n           Q.room_ID,\n           Q.tipo_quarto AS Q_tipo_quarto,\n           Q.rate_plan,\n           Q.data_reserva,\n           Q.data_chegada,\n           Q.data_partida,\n           Q.num_noites,\n           Q.ocupacao,\n           Q.adultos,\n           Q.criancas,\n           Q.bebes,\n           Q.preco_euros,\n           T.tipo_quarto as T_tipo_quarto, \n           T.quantidade,\n           T.capacidade_maxima,\n           T.capacidade_minima,\n           T.capacidade_max_adultos,\n           T.capacidade_min_adultos,\n           T.capacidade_max_criancas,\n           T.capacidade_min_criancas,\n           T.capacidade_max_bebes,\n           T.capacidade_max_camas_extra,\n           T.capacidade_max_camas_extra_criancas,\n           T.capacidade_max_bercos_extra\n       FROM QuartosReservados as Q\n       INNER JOIN Tipologias as T\n           ON Q.hotel_ID = T.hotel_ID AND T.room_ID = Q.room_ID\n      \"\"\")\n\njoinTipologia.createOrReplaceTempView(\"JoinTipologia\")\njoinTipologia.cache()\n\nif (saveJoins)\n    saveDataFrame(joinTipologia, \"joinTipologia\")\n\nprintln(joinTipologia.count())\njoinTipologia.printSchema()",
   "dateStarted": "2023-05-01 15:25:59.848",
   "dateUpdated": "2023-05-01 15:26:00.381",
   "dateFinished": "2023-05-01 15:26:00.381"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {},
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_minima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_min_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_min_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bercos_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinTipologiaAndHotel = spark.sql(\n    \"\"\"\n       SELECT \n           J.*,\n           H.localizacao,\n           H.area_localizacao,\n           H.estrelas,\n           H.idade_max_criancas,\n           H.idade_max_bebes,\n           H.hora_max_checkin,\n           H.qtd_quartos\n       FROM joinTipologia as J\n       INNER JOIN Hotel as H\n           ON J.hotel_ID = H.hotel_ID\n    \"\"\")\n\njoinTipologiaAndHotel.createOrReplaceTempView(\"JoinTipologiaAndHotel\")\n\nprintln(joinTipologiaAndHotel.count())\njoinTipologiaAndHotel.printSchema()\nif (saveJoins)\n    saveDataFrame(joinTipologiaAndHotel, \"joinTipologiaAndHotel\")",
   "id": "",
   "dateCreated": "2023-04-30 20:01:48.781",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-05-01 15:34:41.906",
   "dateUpdated": "2023-05-01 15:34:42.519",
   "dateFinished": "2023-05-01 15:34:42.519",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "25082\nroot\n |-- hotel_ID: integer (nullable = true)\n |-- Reserve_ID: integer (nullable = true)\n |-- pais: string (nullable = true)\n |-- estado_reserva: string (nullable = true)\n |-- room_ID: integer (nullable = true)\n |-- Q_tipo_quarto: string (nullable = true)\n |-- rate_plan: string (nullable = true)\n |-- data_reserva: timestamp (nullable = true)\n |-- data_chegada: date (nullable = true)\n |-- data_partida: date (nullable = true)\n |-- num_noites: integer (nullable = true)\n |-- ocupacao: integer (nullable = true)\n |-- adultos: integer (nullable = true)\n |-- criancas: integer (nullable = true)\n |-- bebes: integer (nullable = true)\n |-- preco_euros: double (nullable = true)\n |-- T_tipo_quarto: string (nullable = true)\n |-- quantidade: integer (nullable = true)\n |-- capacidade_maxima: integer (nullable = true)\n |-- capacidade_minima: integer (nullable = true)\n |-- capacidade_max_adultos: integer (nullable = true)\n |-- capacidade_min_adultos: integer (nullable = true)\n |-- capacidade_max_criancas: integer (nullable = true)\n |-- capacidade_min_criancas: integer (nullable = true)\n |-- capacidade_max_bebes: integer (nullable = true)\n |-- capacidade_max_camas_extra: integer (nullable = true)\n |-- capacidade_max_camas_extra_criancas: integer (nullable = true)\n |-- capacidade_max_bercos_extra: integer (nullable = true)\n |-- localizacao: string (nullable = true)\n |-- area_localizacao: string (nullable = true)\n |-- estrelas: integer (nullable = true)\n |-- idade_max_criancas: integer (nullable = true)\n |-- idade_max_bebes: integer (nullable = true)\n |-- hora_max_checkin: timestamp (nullable = true)\n |-- qtd_quartos: integer (nullable = true)\n\n\u001b[1m\u001b[34mjoinTipologiaAndHotel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 33 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinFeriados = spark.sql(\n    \"\"\"\n        SELECT *\n        FROM JoinTipologiaAndHotel AS J\n        LEFT JOIN (SELECT * FROM Feriados WHERE is_holiday=1) AS F\n            ON F.date <= J.data_partida AND f.date >= data_chegada\n    \"\"\"\n)\n\njoinFeriados.createOrReplaceTempView(\"JoinFeriados\")\n\njoinFeriados.count()\n\n//joinFeriados.show()",
   "id": "",
   "dateCreated": "2023-04-30 20:12:14.191",
   "config": {},
   "dateStarted": "2023-05-01 15:27:06.066",
   "dateUpdated": "2023-05-01 15:27:06.708",
   "dateFinished": "2023-05-01 15:27:06.708"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val joinEventos = spark.sql(\n    \"\"\"\n        SELECT DISTINCT QR.*, E.*\n        FROM JoinFeriados QR\n        LEFT JOIN Eventos E\n            ON QR.data_partida >= E.start_Date AND QR.data_chegada <= E.end_date\n            AND QR.area_localizacao = E.Location\n    \"\"\")\n\njoinEventos.createOrReplaceTempView(\"JoinEventos\")\n\n//println(joinEventos.count())\njoinEventos.show()",
   "id": "",
   "dateCreated": "2023-04-30 20:16:51.675",
   "config": {},
   "dateStarted": "2023-05-01 15:26:42.320",
   "dateUpdated": "2023-05-01 15:26:44.904",
   "dateFinished": "2023-05-01 15:26:44.904"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "city",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "tavg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "tmax",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "tmin",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val joinMeteoTemp = spark.sql(\n    \"\"\"\n        SELECT QR.Reserve_ID, QR.data_chegada,QR.data_partida, M.date, QR.area_localizacao, M.city, M.tavg, M.tmax, M.tmin\n        FROM JoinTipologiaAndHotel AS QR\n        JOIN Meteorologia AS M \n            ON QR.area_localizacao = M.city \n            AND M.date <= QR.data_partida AND M.date >= QR.data_chegada\n    \"\"\")\n\njoinMeteoTemp.createOrReplaceTempView(\"JoinMeteoTemp\")\n\n/*val test = spark.sql(\n    \"\"\"\n        SELECT * FROM JoinMeteoTemp ORDER BY Reserve_ID\n    \"\"\"\n)\n\nval group = spark.sql(\n    \"\"\"\n       SELECT * \n       FROM JoinMeteoTemp\n       GROUP BY \n    \"\"\"\n)*/\n\nprintln(joinMeteoTemp.count())\njoinMeteoTemp.show()",
   "id": "",
   "dateCreated": "2023-05-01 15:31:17.385",
   "config": {},
   "dateStarted": "2023-05-01 15:47:12.713",
   "dateUpdated": "2023-05-01 15:47:13.538",
   "dateFinished": "2023-05-01 15:47:13.538",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "68968\n+----------+------------+------------+----------+----------------+--------------+----+----+----+\n|Reserve_ID|data_chegada|data_partida|      date|area_localizacao|          city|tavg|tmax|tmin|\n+----------+------------+------------+----------+----------------+--------------+----+----+----+\n|   1427640|  2022-02-12|  2022-02-18|2022-02-18|         Batalha|       Batalha|12.2|16.0|10.5|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-17|         Batalha|       Batalha|13.3|16.0|10.0|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-16|         Batalha|       Batalha|10.7|16.0| 5.7|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-15|         Batalha|       Batalha| 9.2|15.0| 5.0|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-14|         Batalha|       Batalha|10.5|14.0| 5.0|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-13|         Batalha|       Batalha| 9.4|14.0| 4.8|\n|   1427640|  2022-02-12|  2022-02-18|2022-02-12|         Batalha|       Batalha|11.5|15.1| 7.0|\n|   1432165|  2022-02-13|  2022-02-16|2022-02-16|           Lagos|         Lagos|14.4|17.4|11.6|\n|   1432165|  2022-02-13|  2022-02-16|2022-02-15|           Lagos|         Lagos|13.7|16.7|11.6|\n|   1432165|  2022-02-13|  2022-02-16|2022-02-14|           Lagos|         Lagos|14.8|17.2|12.9|\n|   1432165|  2022-02-13|  2022-02-16|2022-02-13|           Lagos|         Lagos|14.8|16.5|13.2|\n|   1432632|  2022-02-18|  2022-02-20|2022-02-20|          Amares|        Amares|10.0|14.9| 5.6|\n|   1432632|  2022-02-18|  2022-02-20|2022-02-19|          Amares|        Amares| 9.0|13.5| 5.2|\n|   1432632|  2022-02-18|  2022-02-20|2022-02-18|          Amares|        Amares|11.2|13.0| 7.5|\n|   1436383|  2022-02-27|  2022-03-01|2022-03-01|  Castelo Branco|Castelo Branco|12.5|16.7| 7.7|\n|   1436383|  2022-02-27|  2022-03-01|2022-02-28|  Castelo Branco|Castelo Branco|11.3|18.7| 4.6|\n|   1436383|  2022-02-27|  2022-03-01|2022-02-27|  Castelo Branco|Castelo Branco|10.4|16.6| 4.5|\n|   1436481|  2022-02-15|  2022-02-17|2022-02-17|           Porto|         Porto|12.9|16.4|10.5|\n|   1436481|  2022-02-15|  2022-02-17|2022-02-16|           Porto|         Porto|11.8|14.6| 9.1|\n|   1436481|  2022-02-15|  2022-02-17|2022-02-15|           Porto|         Porto| 8.8|14.6| 3.9|\n+----------+------------+------------+----------+----------------+--------------+----+----+----+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinMeteoTemp\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [Reserve_ID: int, data_chegada: date ... 7 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "READY",
   "text": "",
   "id": "",
   "dateCreated": "2023-05-01 15:47:23.871",
   "config": {}
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}