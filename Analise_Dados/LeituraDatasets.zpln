{
 "paragraphs": [
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "// FILE #1",
   "id": "",
   "dateCreated": "2023-05-08 15:32:19.702",
   "config": {},
   "dateStarted": "2023-05-17 20:47:42.517",
   "dateUpdated": "2023-05-17 20:47:42.665",
   "dateFinished": "2023-05-17 20:47:42.665",
   "results": {
    "code": "SUCCESS",
    "msg": []
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "import org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.functions._\n\nval InitialHotelTable = \"InitialHotel\"\nval InitialTipologiasTable = \"InitialTipologias\"\nval InitialQuartosReservadosTable = \"InitialQuartosReservados\"\n\nval FacilitesTable = \"Facilities\"\nval HotelTable = \"Hotel\"\nval TipologiasTable = \"Tipologias\"\nval QuartosReservadosTable = \"QuartosReservados\"\nval FeriadosTable = \"Feriados\"\nval MeteorologiaTable = \"Meteorologia\"\nval EventosTable = \"Eventos\"\n\nval joinFolder = \"/data/leitura\"\n\ndef saveDataFrame(df: DataFrame, name: String): Unit = {\n    df.coalesce(1) // Print into a single file\n            .write\n            .mode(\"overwrite\")\n            .option(\"delimiter\", \";\")\n            .option(\"header\", true) // Maintain Headers\n            .csv(s\"$joinFolder/$name\") // Write to csv\n}",
   "id": "",
   "dateCreated": "2023-04-30 20:03:05.806",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-05-17 20:47:42.666",
   "dateUpdated": "2023-05-17 20:47:43.767",
   "dateFinished": "2023-05-17 20:47:43.767",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "import org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.functions._\n\u001b[1m\u001b[34mInitialHotelTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = InitialHotel\n\u001b[1m\u001b[34mInitialTipologiasTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = InitialTipologias\n\u001b[1m\u001b[34mInitialQuartosReservadosTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = InitialQuartosReservados\n\u001b[1m\u001b[34mFacilitesTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Facilities\n\u001b[1m\u001b[34mHotelTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Hotel\n\u001b[1m\u001b[34mTipologiasTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Tipologias\n\u001b[1m\u001b[34mQuartosReservadosTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = QuartosReservados\n\u001b[1m\u001b[34mFeriadosTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Feriados\n\u001b[1m\u001b[34mMeteorologiaTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Meteorologia\n\u001b[1m\u001b[34mEventosTable\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = Eventos\n\u001b[1m\u001b[34mjoinFolder\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m =..."
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {},
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvFacilities = \"/data/tp/Facilities.csv\" // Facilities file\n\nval df = spark.read.format(\"csv\") // Read CSV\n        .option(\"header\", \"true\") // First line is a header\n        .option(\"inferSchema\", \"true\") // infer the data types \n        .option(\"delimiter\", \";\") // Columns separated by ';\n        .option(\"trim\", \"true\") // remove whitespaces from both ends of columns and val\n        .load(csvFacilities)\n\ndf.createOrReplaceTempView(FacilitesTable)\ndf.cache()\n//df.printSchema()\n//df.show()",
   "id": "",
   "dateCreated": "2023-04-23 23:44:45.859",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-05-17 20:47:43.768",
   "dateUpdated": "2023-05-17 20:47:44.152",
   "dateFinished": "2023-05-17 20:47:44.152",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mcsvFacilities\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Facilities.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [Hotel ID: int, Facility ID: int ... 1 more field]\n\u001b[1m\u001b[34mres203\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [Hotel ID: int, Facility ID: int ... 1 more field]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvHotel = \"/data/tp/Hotel.csv\" // Hotels file\nval Acores = List(\"Açores\", \"Furnas S. Miguel - Açores\", \"Lagoa, Açores\", \"Ponta Delgada\", \"São Vicente Ferreira, São Miguel - Açores\", \"Velas\")\nval Albufeira = List(\"Albufeira - Algarve\", \"Alte\", \"Benafim\", \"Conceição de Tavira\", \"Fuseta\", \"Olhão\", \"Olhos D'Água\", \"São Brás de Alportel\", \"Silves\", \"Tavira\", \"Vilamoura\")\nval Alcobaca = List(\"Alcanena\", \"Alcobaça\", \"São Martinho do Porto\")\nval Alijo = List(\"Alijó\", \"Pinhão - Alijó\")\nval Amares = List(\"Amares\", \"Braga\", \"Póvoa de Lanhoso\", \"Tomar\", \"Torres Novas\")\nval Aveiro = List(\"Aveiro\")\nval Batalha = List(\"Batalha\", \"Nazaré\")\nval Braganca = List(\"Alto dos Lombos\")\nval Campo_Maior = List(\"Campo Maior\")\nval Carnaxide = List(\"Almada\", \"Carnaxide\", \"Charneca de Caparica\", \"Lisboa\")\nval Carcavelos = List(\"Carcavelos\", \"Cascais\", \"Estoril\")\nval Castelo_Branco = List(\"Castelo Branco\", \"Covilhã\", \"Sabugueiro / Seia\", \"Vale do Peso\")\nval Chaves = List(\"Chaves\", \"Lamego\", \"Mesão Frio\", \"Valdigem - Lamego\")\nval Coimbra = List(\"Coimbra\", \"Travanca do Mondego\")\nval Elvas = List(\"ELVAS\")\nval Espinho = List(\"Espinho\", \"Ovar\", \"Viseu\")\nval Evora = List(\"Evora\")\nval Funchal = List(\"Câmara de Lobos\", \"Funchal\")\nval Guimaraes = List(\"Guimarães\")\nval Lagos = List(\"Lagos\", \"Portimão\", \"Sagres\")\nval Maia = List(\"Maia\")\nval Moncao = List(\"Monção\", \"Valença do Minho\")\nval Obidos = List(\"Obidos\")\nval Porto = List(\"Ermesinde\", \"Gaia\", \"Lousada\", \"Madalena\", \"Porto\", \"União de Freguesias do Centro\", \"Valongo\", \"Valpedre - Penafiel\", \"Vila Meã\", \"Vila Nova de Gaia\")\nval Praia_da_Vitoria = List(\"Praia da Vitória\")\nval Sintra = List(\"Sintra\")\nval Viana_do_Castelo = List(\"Seixas - Caminha\", \"Valença, Viana do Castelo\", \"Viana do Castelo\", \"Vila Praia de Âncora\")\n\ndef getArea(value: String) = value match {\n    case x if Acores.contains(x) => \"Açores\"\n    case x if Albufeira.contains(x) => \"Albufeira\"\n    case x if Alcobaca.contains(x) => \"Alcobaça\"\n    case x if Alijo.contains(x) => \"Alijó\"\n    case x if Amares.contains(x) => \"Amares\"\n    case x if Aveiro.contains(x) => \"Aveiro\"\n    case x if Batalha.contains(x) => \"Batalha\"\n    case x if Braganca.contains(x) => \"Bragança\"\n    case x if Campo_Maior.contains(x) => \"Campo Maior\"\n    case x if Carnaxide.contains(x) => \"Carnaxide\"\n    case x if Carcavelos.contains(x) => \"Carcavelos\"\n    case x if Castelo_Branco.contains(x) => \"Castelo Branco\"\n    case x if Chaves.contains(x) => \"Chaves\"\n    case x if Coimbra.contains(x) => \"Coimbra\"\n    case x if Elvas.contains(x) => \"Elvas\"\n    case x if Espinho.contains(x) => \"Espinho\"\n    case x if Evora.contains(x) => \"Evora\"\n    case x if Funchal.contains(x) => \"Funchal\"\n    case x if Guimaraes.contains(x) => \"Guimarães\"\n    case x if Lagos.contains(x) => \"Lagos\"\n    case x if Maia.contains(x) => \"Maia\"\n    case x if Moncao.contains(x) => \"Monção\"\n    case x if Obidos.contains(x) => \"Obidos\"\n    case x if Porto.contains(x) => \"Porto\"\n    case x if Praia_da_Vitoria.contains(x) => \"Praia da Vitória\"\n    case x if Sintra.contains(x) => \"Sintra\"\n    case x if Viana_do_Castelo.contains(x) => \"Viana do Castelo\"\n    case _ => value\n}\n\nval getAreaUDF = udf((value: String) => getArea(value))\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .load(csvHotel)\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"Localização\", \"localizacao\")\n        .withColumnRenamed(\"Estrelas\", \"estrelas\")\n        .withColumnRenamed(\"Idade Máxima de Crianças (Anos)\", \"idade_max_criancas\")\n        .withColumnRenamed(\"Idade Máxima de Bebés (Meses)\", \"idade_max_bebes\")\n        .withColumnRenamed(\"Hora máxima de check-in\", \"hora_max_checkin\")\n        .withColumnRenamed(\"Quantidade de quartos\", \"qtd_quartos\")\n        .withColumn(\"hora_max_checkin\", to_timestamp(col(\"hora_max_checkin\")))\n\nval dfWithArea = df.withColumn(\"area_localizacao\", getAreaUDF(col(\"localizacao\")))\n\ndfWithArea.createOrReplaceTempView(InitialHotelTable)\ndfWithArea.cache()\n//dfWithArea.printSchema()\n//dfWithArea.describe().show()\n//dfWithArea.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:44.153",
   "dateUpdated": "2023-05-17 20:47:44.644",
   "dateFinished": "2023-05-17 20:47:44.643",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mcsvHotel\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Hotel.csv\n\u001b[1m\u001b[34mAcores\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Açores, Furnas S. Miguel - Açores, Lagoa, Açores, Ponta Delgada, São Vicente Ferreira, São Miguel - Açores, Velas)\n\u001b[1m\u001b[34mAlbufeira\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Albufeira - Algarve, Alte, Benafim, Conceição de Tavira, Fuseta, Olhão, Olhos D'Água, São Brás de Alportel, Silves, Tavira, Vilamoura)\n\u001b[1m\u001b[34mAlcobaca\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Alcanena, Alcobaça, São Martinho do Porto)\n\u001b[1m\u001b[34mAlijo\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Alijó, Pinhão - Alijó)\n\u001b[1m\u001b[34mAmares\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Amares, Braga, Póvoa de Lanhoso, Tomar, Torres Novas)\n\u001b[1m\u001b[34mAveiro\u001b[0m: \u001b[1m\u001b[32mList[String]\u001b[0m = List(Aveiro)\n\u001b[1m\u001b[34mBatalha\u001b[0m: \u001b[1m\u001b..."
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvTipologias = \"/data/tp/Tipologias.csv\" // Tipologias file\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .option(\"trim\", \"true\")\n        .load(csvTipologias)\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"Room ID\", \"room_ID\")\n        .withColumnRenamed(\"Tipo de quarto\", \"tipo_quarto\")\n        .withColumnRenamed(\"Quantidade\", \"quantidade\")\n        .withColumnRenamed(\"Capacidade máxima\", \"capacidade_maxima\")\n        .withColumnRenamed(\"Capacidade mínima\", \"capacidade_minima\") // !\n        .withColumnRenamed(\"Capacidade máxima de adultos\", \"capacidade_max_adultos\")\n        .withColumnRenamed(\"Capacidade mínima de adultos\", \"capacidade_min_adultos\") // !\n        .withColumnRenamed(\"Capacidade máxima de crianças\", \"capacidade_max_criancas\")\n        .withColumnRenamed(\"Capacidade mínima de crianças\", \"capacidade_min_criancas\") // !\n        .withColumnRenamed(\"Capacidade máxima de bebés\", \"capacidade_max_bebes\")\n        .withColumnRenamed(\"Capacidade máxima de camas extra\", \"capacidade_max_camas_extra\") // !\n        .withColumnRenamed(\"Capacidade máxima de camas extra (crianças)\", \"capacidade_max_camas_extra_criancas\") // !\n        .withColumnRenamed(\"Capacidade máxima de berços extra\", \"capacidade_max_bercos_extra\") // !\n\ndf.createOrReplaceTempView(InitialTipologiasTable)\ndf.cache()\n//df.describe().show()\n//df.printSchema()\n//df.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:44.644",
   "dateUpdated": "2023-05-17 20:47:44.996",
   "dateFinished": "2023-05-17 20:47:44.996",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mcsvTipologias\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Tipologias.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, room_ID: int ... 12 more fields]\n\u001b[1m\u001b[34mres205\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [hotel_ID: int, room_ID: int ... 12 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvQuartosReservados = \"/data/tp/QuartosReservados.csv\" // Quartos_Reservados File\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\", \"true\")\n        .option(\"delimiter\", \";\")\n        .option(\"trim\", \"true\") // remove whitespaces from both ends of columns and val\n        .load(csvQuartosReservados)\n        .withColumnRenamed(\"Hotel ID\", \"hotel_ID\")\n        .withColumnRenamed(\"Reserve ID\", \"Reserve_ID\")\n        .withColumnRenamed(\"País\", \"pais\")\n        .withColumnRenamed(\"Estado da reserva\", \"estado_reserva\")\n        .withColumnRenamed(\"Room ID\", \"room_ID\")\n        .withColumnRenamed(\"Tipo de Quarto\", \"tipo_quarto\") // !\n        .withColumnRenamed(\"RatePlan\", \"rate_plan\")\n        .withColumnRenamed(\"Data da reserva\", \"data_reserva\")\n        .withColumn(\"data_chegada\", to_date(col(\"Data chegada\"), \"dd/MM/yyyy\"))\n        .drop(\"Data chegada\")\n        .withColumn(\"data_partida\", to_date(col(\"Data de partida\"), \"dd/MM/yyyy\"))\n        .drop(\"Data de partida\")\n        .withColumnRenamed(\"Número de noites\", \"num_noites\")\n        .withColumnRenamed(\"Ocupação\", \"ocupacao\")\n        .withColumnRenamed(\"Adultos\", \"adultos\")\n        .withColumnRenamed(\"Crianças\", \"criancas\")\n        .withColumnRenamed(\"Bebés\", \"bebes\") // !\n        .withColumnRenamed(\"Preço (€)\", \"preco_euros\")\n\nval mindata_reserva = df.select(min(\"data_reserva\")).first()(0)\nval maxdata_reserva = df.select(max(\"data_reserva\")).first()(0)\nprintln(s\"Minimum data_reserva date: $mindata_reserva\")\nprintln(s\"Maximum data_reserva date: $maxdata_reserva\")\n\nval mindata_data_chegada = df.select(min(\"data_chegada\")).first()(0)\nval maxdata_data_chegada = df.select(max(\"data_chegada\")).first()(0)\nprintln(s\"Minimum data_chegada date: $mindata_data_chegada\")\nprintln(s\"Maximum data_chegada date: $maxdata_data_chegada\")\n\nval mindata_data_partida = df.select(min(\"data_partida\")).first()(0)\nval maxdata_data_partida = df.select(max(\"data_partida\")).first()(0)\nprintln(s\"Minimum data_partida date: $mindata_data_partida\")\nprintln(s\"Maximum data_partida date: $maxdata_data_partida\")\n\ndf.createOrReplaceTempView(InitialQuartosReservadosTable)\ndf.cache()\n//df.printSchema()\n//df.show()\n//df.select(\"pais\", \"estado_reserva\", \"rate_plan\", \"data_reserva\", \"data_chegada\", \"data_partida\", \"num_noites\", \"ocupacao\", \"adultos\", \"criancas\", \"preco_euros\").describe().show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:44.996",
   "dateUpdated": "2023-05-17 20:47:45.859",
   "dateFinished": "2023-05-17 20:47:45.859",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Minimum data_reserva date: 2022-01-01 10:17:09.29\nMaximum data_reserva date: 2023-04-18 16:33:15.437\nMinimum data_chegada date: 2022-01-01\nMaximum data_chegada date: 2024-04-05\nMinimum data_partida date: 2022-01-02\nMaximum data_partida date: 2024-05-31\n\u001b[1m\u001b[34mcsvQuartosReservados\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/QuartosReservados.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 15 more fields]\n\u001b[1m\u001b[34mmindata_reserva\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-01-01 10:17:09.29\n\u001b[1m\u001b[34mmaxdata_reserva\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2023-04-18 16:33:15.437\n\u001b[1m\u001b[34mmindata_data_chegada\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-01-01\n\u001b[1m\u001b[34mmaxdata_data_chegada\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2024-04-05\n\u001b[1m\u001b[34mmindata_data_partida\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-01-02\n\u001b[1m\u001b[34mmaxdata_data_partida\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2024-05-31\n\u001b[1m\u001b[34mres206\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 15 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvFeriados = \"/data/tp/Feriados.csv\" // Holidays file\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\") // set this to true if your CSV file has header\n        .option(\"inferSchema\", \"true\") // set this to true if you want Spark to infer the schema\n        .option(\"delimiter\", \";\") // ; is the separator\n        .option(\"trim\", \"true\") // remove whitespaces from both ends of columns and val\n        .load(csvFeriados)\n        .withColumn(\"date\", to_date(col(\"date\"), \"dd/MM/yyyy\"))\n\nval minDate = df.select(min(\"date\")).first()(0)\nval maxDate = df.select(max(\"date\")).first()(0)\nprintln(s\"Minimum start date: $minDate\")\nprintln(s\"Maximum start date: $maxDate\")\n\ndf.createOrReplaceTempView(FeriadosTable)\ndf.cache()\n//df.printSchema()\n//df.describe().show()\n//df.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:45.860",
   "dateUpdated": "2023-05-17 20:47:46.306",
   "dateFinished": "2023-05-17 20:47:46.306",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Minimum start date: 2022-01-01\nMaximum start date: 2023-12-31\n\u001b[1m\u001b[34mcsvFeriados\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Feriados.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [date: date, day: int ... 6 more fields]\n\u001b[1m\u001b[34mminDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-01-01\n\u001b[1m\u001b[34mmaxDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2023-12-31\n\u001b[1m\u001b[34mres207\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [date: date, day: int ... 6 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvMeteorologia = \"/data/tp/Meteorologia.csv\" // Holidays file\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\") // set this to true if your CSV file has header\n        .option(\"inferSchema\", \"true\") // set this to true if you want Spark to infer the schema\n        .option(\"delimiter\", \";\") // ; is the separator\n        .option(\"trim\", \"true\") // remove whitespaces from both ends of columns and val\n        .load(csvMeteorologia)\n        .withColumn(\"date\", to_date(col(\"date\"), \"dd/MM/yyyy\"))\n\nval minDate = df.select(min(\"date\")).first()(0)\nval maxDate = df.select(max(\"date\")).first()(0)\nprintln(s\"Minimum start date: $minDate\")\nprintln(s\"Maximum start date: $maxDate\")\n\ndf.createOrReplaceTempView(MeteorologiaTable)\ndf.cache()\n//df.printSchema()\n//df.describe().show()\n//df.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:46.306",
   "dateUpdated": "2023-05-17 20:47:46.762",
   "dateFinished": "2023-05-17 20:47:46.761",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Minimum start date: 2022-01-01\nMaximum start date: 2023-04-23\n\u001b[1m\u001b[34mcsvMeteorologia\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Meteorologia.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [date: date, tavg: double ... 8 more fields]\n\u001b[1m\u001b[34mminDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-01-01\n\u001b[1m\u001b[34mmaxDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2023-04-23\n\u001b[1m\u001b[34mres208\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [date: date, tavg: double ... 8 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val csvEventos = \"/data/tp/Eventos.csv\" // Holidays file\n\nval df = spark.read.format(\"csv\")\n        .option(\"header\", \"true\") // set this to true if your CSV file has header\n        .option(\"inferSchema\", \"true\") // set this to true if you want Spark to infer the schema\n        .option(\"delimiter\", \";\") // ; is the separator\n        .option(\"trim\", \"true\") // remove whitespaces from both ends of columns and values\n        .load(csvEventos)\n        .withColumn(\"end_date\", to_date(trim(col(\"end_date\")), \"dd/MM/yyyy\"))\n        .withColumn(\"start_Date\", to_date(col(\"start_Date\"), \"dd/MM/yyyy\"))\n\nval minStartDate = df.select(min(\"start_Date\")).first()(0)\nval maxStartDate = df.select(max(\"start_Date\")).first()(0)\nval minEndDate = df.select(min(\"end_date\")).first()(0)\nval maxEndDate = df.select(max(\"end_date\")).first()(0)\n\nprintln(s\"Minimum start date: $minStartDate\")\nprintln(s\"Maximum start date: $maxStartDate\")\nprintln(s\"Minimum end date: $minEndDate\")\nprintln(s\"Maximum end date: $maxEndDate\")\n\ndf.createOrReplaceTempView(EventosTable)\ndf.cache()\n//df.printSchema()\n//df.describe().show()\n//df.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:46.762",
   "dateUpdated": "2023-05-17 20:47:47.273",
   "dateFinished": "2023-05-17 20:47:47.273",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Minimum start date: 2022-06-01\nMaximum start date: 2023-11-05\nMinimum end date: 2022-06-11\nMaximum end date: 2023-11-05\n\u001b[1m\u001b[34mcsvEventos\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/tp/Eventos.csv\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [Location: string, Event: string ... 2 more fields]\n\u001b[1m\u001b[34mminStartDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-06-01\n\u001b[1m\u001b[34mmaxStartDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2023-11-05\n\u001b[1m\u001b[34mminEndDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2022-06-11\n\u001b[1m\u001b[34mmaxEndDate\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m = 2023-11-05\n\u001b[1m\u001b[34mres209\u001b[0m: \u001b[1m\u001b[32mdf.type\u001b[0m = [Location: string, Event: string ... 2 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "/* \n-----------------------------------------------------------------------------------------\n                                After Reading Transformations\n-----------------------------------------------------------------------------------------\n*/",
   "config": {},
   "dateStarted": "2023-05-17 20:47:47.273",
   "dateUpdated": "2023-05-17 20:47:47.465",
   "dateFinished": "2023-05-17 20:47:47.465",
   "results": {
    "code": "SUCCESS",
    "msg": []
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "// Initial transformation of Hotel table\nvar initalHotel = spark.sql(\"SELECT * FROM InitialHotel\")\n\nvar newHotel = spark.sql(\n    \"\"\"\n        SELECT * FROM InitialHotel AS H\n        WHERE EXISTS (\n            SELECT 1 FROM InitialQuartosReservados qr\n            WHERE h.hotel_ID = qr.hotel_ID\n        )\n    \"\"\")\n\nnewHotel.createOrReplaceTempView(HotelTable)\n\nprintln(\"Total lines removed: \" + (initalHotel.count() - newHotel.count()))",
   "config": {},
   "dateStarted": "2023-05-17 20:47:47.465",
   "dateUpdated": "2023-05-17 20:47:47.916",
   "dateFinished": "2023-05-17 20:47:47.916",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Total lines removed: 57\n\u001b[1m\u001b[34minitalHotel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, localizacao: string ... 6 more fields]\n\u001b[1m\u001b[34mnewHotel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, localizacao: string ... 6 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_minima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_min_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_min_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bercos_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_camas_extra_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bercos_extra",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "// Initial transformation of Tipologias table\n\nval initialTipologias = spark.sql(s\"SELECT * FROM $InitialTipologiasTable\")\n\nval newTipologias = initialTipologias\n        .drop(\"capacidade_minima\")\n        .drop(\"capacidade_min_adultos\")\n        .drop(\"capacidade_min_criancas\")\n//        .drop(\"capacidade_max_camas_extra\")\n//        .drop(\"capacidade_max_camas_extra_criancas\")\n//        .drop(\"capacidade_max_bercos_extra\")\n\nnewTipologias.createOrReplaceTempView(TipologiasTable)\n\nprintln(\"Total lines removed: \" + (initialTipologias.count() - newTipologias.count()))",
   "config": {},
   "dateStarted": "2023-05-17 20:47:47.917",
   "dateUpdated": "2023-05-17 20:47:48.237",
   "dateFinished": "2023-05-17 20:47:48.237",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Total lines removed: 0\n\u001b[1m\u001b[34minitialTipologias\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, room_ID: int ... 12 more fields]\n\u001b[1m\u001b[34mnewTipologias\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, room_ID: int ... 9 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "// Initial transformation of Quartos Reservados table\nval initialQuartosReservados = spark.sql(s\"SELECT * FROM $InitialQuartosReservadosTable\")\n\nval smallReservationsHotels = initialQuartosReservados\n        .groupBy(\"hotel_ID\").count()\n        .filter($\"count\" < 13)\n\nval newQuartosReservados = initialQuartosReservados\n        .filter($\"estado_reserva\".notEqual(\"CourtesyHold\")) // Remove reserve state \"CourtesyHold\" (5 reservations)\n        .filter(datediff($\"data_partida\", $\"data_chegada\") <= 14) // Remove lines where the booking has more than 14 days (115 reservations)\n        .join(smallReservationsHotels, Seq(\"hotel_ID\"), \"leftanti\") // Remove hotels that have less than 13 bookings (21 reservations)\n        .withColumn(\"preco_noite\", $\"preco_euros\" / $\"num_noites\")\n        .withColumn(\"preco_noite_adulto\", $\"preco_euros\" / $\"num_noites\" / $\"adultos\")\n        .withColumn(\"preco_noite_ocupacao\", $\"preco_euros\" / $\"num_noites\" / $\"ocupacao\")\n        .filter($\"preco_noite_ocupacao\" < 1000) // Remove bookings with price greater than 5000€ (5 reservations)\n        .dropDuplicates()\n\n//println(\"Count: \" + smallReservationsHotels.count())\n//smallReservationsHotels.show()\n\nnewQuartosReservados.cache()\nnewQuartosReservados.createOrReplaceTempView(QuartosReservadosTable)\n\nsaveDataFrame(newQuartosReservados, \"reservas\")\n\nprintln(\"Total lines removed: \" + (initialQuartosReservados.count() - newQuartosReservados.count()))\nprintln(\"Total lines: \" + newQuartosReservados.count())\n//newQuartosReservados.show()",
   "config": {},
   "dateStarted": "2023-05-17 20:47:48.237",
   "dateUpdated": "2023-05-17 20:47:51.533",
   "dateFinished": "2023-05-17 20:47:51.533",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "Total lines removed: 150\nTotal lines: 24955\n\u001b[1m\u001b[34minitialQuartosReservados\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 15 more fields]\n\u001b[1m\u001b[34msmallReservationsHotels\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [hotel_ID: int, count: bigint]\n\u001b[1m\u001b[34mnewQuartosReservados\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 18 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "rate_plan_normalized",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "rate_plan_normalized",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Após a limpeza, aplicação algumas etapas de limpeza e padronização do rate_Plan\n\nval result_after_cleaning = spark.sql(\n    \"\"\"\n    SELECT * \n    FROM QuartosReservados \n    \"\"\"\n)\n// Remover espaços em branco extras\nval dfTrimmed = result_after_cleaning.withColumn(\"rate_plan\", trim(col(\"rate_plan\")))\n\n// Converter para letras minúsculas\nval dfLower = dfTrimmed.withColumn(\"rate_plan\", lower(col(\"rate_plan\")))\n\n// Remover caracteres especiais e pontuações\nval dfCleaned = dfLower.withColumn(\"rate_plan\", regexp_replace(col(\"rate_plan\"), \"[^a-zA-Z0-9 ]\", \"\"))\n\n// Criar uma nova coluna \"rate_plan_normalized\" com os valores normalizados\nval dfNormalized = dfCleaned.withColumn(\"rate_plan_normalized\", regexp_replace(col(\"rate_plan\"), \" +\", \" \"))\n\n// Substituir os valores correspondentes e manter os demais valores como estão\nval dfCategorized = dfNormalized.withColumn(\"rate_plan_normalized\", \n             when(lower(col(\"rate_plan\")).rlike(\"no refund|nao reembol|nonrefundable|no_refundable|nrf|noreembolsvel|no reembolsvel|non refundable|no reembolsable 13|non refund|no refundable bb|nr\"), \"non-refundable\")\n            .when(lower(col(\"rate_plan\")).rlike(\"promo|oferta|desconto\"), \"promo\")\n            .when(lower(col(\"rate_plan\")).rlike(\"normal|standard|base\"), \"normal\")\n            .when(lower(col(\"rate_plan\")).rlike(\"web|website|online\"), \"website\")\n            .when(lower(col(\"rate_plan\")).rlike(\"bar\"), \"bar\")\n            .when(lower(col(\"rate_plan\")).rlike(\"standart\"), \"standard\")\n            .when(lower(col(\"rate_plan\")).rlike(\"tw\"), \"twin\")\n            .when(lower(col(\"rate_plan\")).rlike(\"direct|reserva_direta|venda_direta\"), \"direct\")\n            .otherwise(col(\"rate_plan_normalized\"))\n)\n\n// Agrupar os dados pelo rate_plan_normalized e contar a ocorrência\nval groupedData = dfCategorized.groupBy(\"rate_plan_normalized\").count()\n\n// Substituir valores com count inferior a 20 por \"other\"\nval dfUpdated = dfCategorized.join(groupedData, Seq(\"rate_plan_normalized\"))\n  .withColumn(\"rate_plan_normalized\", when(col(\"count\") < 20, \"other\").otherwise(col(\"rate_plan_normalized\")))\n  .drop(\"count\")\n\nval dfRenamed = dfUpdated.drop(\"rate_plan\").withColumnRenamed(\"rate_plan_normalized\", \"rate_plan\")\n\ndfRenamed.cache()\ndfRenamed.createOrReplaceTempView(QuartosReservadosTable)\n\n// Ordenar por contagem em ordem decrescente\nval sortedData = dfRenamed.groupBy(\"rate_plan\").count().orderBy(desc(\"count\"))\n\nprintln(sortedData.count()) // Total de categorias\n// Exibir o resultado\nsortedData.show(1000)\n",
   "id": "",
   "dateCreated": "2023-05-16 21:55:43.997",
   "config": {},
   "dateStarted": "2023-05-17 20:47:51.534",
   "dateUpdated": "2023-05-17 20:47:56.123",
   "dateFinished": "2023-05-17 20:47:56.123",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "44\n+--------------------+-----+\n|           rate_plan|count|\n+--------------------+-----+\n|      non-refundable| 4938|\n|              normal| 4333|\n|                 bar| 4195|\n|             website| 4081|\n|        mr main rate| 2536|\n|        main rate bb| 1056|\n|               promo|  573|\n|         tarifa site|  380|\n|               other|  331|\n|            standard|  186|\n|        db room only|  167|\n|melhor preo garan...|  167|\n|                  4n|  165|\n|            duplo bb|  148|\n|      reserva direta|  140|\n|           room only|  132|\n|reembolsvel suple...|  116|\n|                twin|  109|\n|          meia penso|  105|\n|              direct|  105|\n|  reserva antecipada|   99|\n|chocolate experience|   93|\n|epoca alta jul ag...|   66|\n|                  7n|   65|\n|clientes fidelizados|   65|\n|    semi flexivel bb|   59|\n|tarifa sem pequen...|   54|\n|      reembolsvel ap|   49|\n| best available rate|   46|\n|       semi flexivel|   39|\n|   premium room only|   32|\n|               db ro|   32|\n|tarifa com pequen...|   30|\n|       dbs room only|   28|\n|clg flexible sin ...|   28|\n|       dbt room only|   28|\n|                  hb|   27|\n|        main rate hb|   24|\n|          premium bb|   24|\n|              dbs bb|   23|\n|               db bb|   21|\n|            avionics|   20|\n|           rack rate|   20|\n|         superior bb|   20|\n+--------------------+-----+\n\n\u001b[1m\u001b[34mresult_after_cleaning\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 18 more fields]\n\u001b[1m\u001b[34mdfTrimmed\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 18 more fields]\n\u001b[1m\u001b[34mdfLower\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 18 more fields]\n\u001b[1m\u001b[34mdfCleaned\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 18 more fields]\n\u001b[1m\u001b[34mdfNormalized\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 19 more fields]\n\u001b[1m\u001b[34mdfCategorized\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 19 more fields]\n\u001b[1m\u001b[34mgroupedData\u001b[0m: \u001b[1m\u001b[32morg.apache.sp..."
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "//Adicionar nova coluna com a diferença entre data de chegada com a reserva\nval adddif_data_chegada_data_reserva = spark.sql(\n    \"\"\"\n    SELECT * \n    FROM QuartosReservados \n    \"\"\"\n)\nval dfWithTimeDiff = adddif_data_chegada_data_reserva.withColumn(\"dif_data_chegada_data_reserva\", datediff(col(\"data_chegada\"), col(\"data_reserva\")))\ndfWithTimeDiff.cache()\ndfWithTimeDiff.createOrReplaceTempView(QuartosReservadosTable)",
   "id": "",
   "dateCreated": "2023-05-17 00:41:36.970",
   "config": {},
   "dateStarted": "2023-05-17 20:47:56.124",
   "dateUpdated": "2023-05-17 20:47:56.336",
   "dateFinished": "2023-05-17 20:47:56.336",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34madddif_data_chegada_data_reserva\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [rate_plan: string, hotel_ID: int ... 18 more fields]\n\u001b[1m\u001b[34mdfWithTimeDiff\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [rate_plan: string, hotel_ID: int ... 19 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "dfWithTimeDiff.show()",
   "id": "",
   "dateCreated": "2023-05-17 20:43:15.829",
   "config": {},
   "dateStarted": "2023-05-17 20:47:56.336",
   "dateUpdated": "2023-05-17 20:47:56.544",
   "dateFinished": "2023-05-17 20:47:56.544",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+--------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+-----------+------------+------------+------------------+------------------+--------------------+-----------------------------+\n|     rate_plan|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|         tipo_quarto|        data_reserva|num_noites|Quantidade de quartos|ocupacao|adultos|criancas|bebes|preco_euros|data_chegada|data_partida|       preco_noite|preco_noite_adulto|preco_noite_ocupacao|dif_data_chegada_data_reserva|\n+--------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+-----------+------------+------------+------------------+------------------+--------------------+-----------------------------+\n|  main rate bb|     310|   1722047|      Portugal|     Registado|   2870|Quarto Duplo Supe...|2023-04-16 21:55:...|         1|                    1|       2|      2|       0|    0|   100.4435|  2023-04-30|  2023-05-01|          100.4435|          50.22175|            50.22175|                           14|\n| semi flexivel|     311|   1720340|    Luxemburgo|     Registado|   2034|DBS - Quarto Dupl...|2023-04-14 14:31:...|         1|                    1|       2|      2|       0|    0|      90.45|  2023-06-01|  2023-06-02|             90.45|            45.225|              45.225|                           48|\n|           bar|      44|   1718932|Estados Unidos|     Cancelado|     85| Quarto Vista Pinhão|2023-04-12 17:31:...|         1|                    1|       2|      2|       0|    0|      125.0|  2023-06-15|  2023-06-16|             125.0|              62.5|                62.5|                           64|\n|       website|     335|   1717009|      Portugal|     Cancelado|   1488|               Duplo|2023-04-10 14:38:...|         2|                    1|       2|      2|       0|    0|      130.0|  2023-04-10|  2023-04-12|              65.0|              32.5|                32.5|                            0|\n|       website|     556|   1716447|      Portugal|     Registado|   2831|Double Room Standard|2023-04-09 18:38:...|         1|                    4|       2|      8|       0|    0|      272.0|  2023-06-03|  2023-06-04|             272.0|              34.0|               136.0|                           55|\n|  main rate bb|     310|   1716190|      Portugal|      Pendente|   1673|Quarto Duplo Supe...|2023-04-09 11:20:...|         1|                    1|       1|      1|       0|    0|   59.43675|  2023-04-15|  2023-04-16|          59.43675|          59.43675|            59.43675|                            6|\n|       website|     482|   1713319|       Irlanda|     Registado|   2285|      Apartamento T1|2023-04-04 21:08:...|         7|                    1|       3|      3|       0|    0|    1220.75|  2023-07-18|  2023-07-25|174.39285714285714| 58.13095238095238|   58.13095238095238|                          105|\n|         other|     514|   1713213|     Argentina|     Cancelado|   2425|     Eco Garden Room|2023-04-04 19:10:...|         5|                    1|       1|      1|       0|    0|      725.0|  2023-05-30|  2023-06-04|             145.0|             145.0|               145.0|                           56|\n|       website|     556|   1710971|       Espanha|     Registado|   2833|Triple Room Standard|2023-04-02 11:30:...|         2|                    1|       3|      3|       0|    0|      166.6|  2023-04-05|  2023-04-07|              83.3|27.766666666666666|  27.766666666666666|                            3|\n|         other|     426|   1704701|      Portugal|     Registado|   1992|        Junior Suite|2023-03-24 17:02:...|         5|                    1|       2|      2|       1|    0|     1243.0|  2023-04-02|  2023-04-07|             248.6|             124.3|               124.3|                            9|\n|        normal|     395|   1704561|      Alemanha|     Cancelado|   1829|     Estúdio Jardim |2023-03-24 13:05:...|         2|                    1|       2|      2|       0|    0|      190.0|  2023-03-25|  2023-03-27|              95.0|              47.5|                47.5|                            1|\n|        direct|     511|   1704056|       Espanha|     Registado|   2394|Quarto Duplo ou Twin|2023-03-23 18:47:...|         4|                    1|       1|      1|       0|    0|      279.0|  2023-03-29|  2023-04-02|             69.75|             69.75|               69.75|                            6|\n|non-refundable|     366|   1694509|      Portugal|    Modificada|   1648|QUARTO TWIN STANDARD|2023-03-10 12:07:...|         1|                    1|       2|      2|       0|    0|       75.6|  2023-03-11|  2023-03-12|              75.6|              37.8|                37.8|                            1|\n|       website|     328|   1692675|       Noruega|     Registado|   1456|Superior Double Room|2023-03-07 16:48:...|         2|                    1|       2|      2|       0|    0|     153.19|  2023-04-06|  2023-04-08|            76.595|           38.2975|             38.2975|                           30|\n|  mr main rate|     310|   1691045|         Suiça|     Registado|   1395|Quarto Duplo Stan...|2023-03-05 16:45:...|         3|                    1|       2|      2|       0|    0|    138.225|  2023-03-06|  2023-03-09|46.074999999999996|23.037499999999998|  23.037499999999998|                            1|\n|non-refundable|     179|   1690589|        Canadá|     Registado|    631|        Twin Comfort|2023-03-04 20:29:...|         3|                    1|       2|      2|       0|    0|    502.686|  2023-05-27|  2023-05-30|167.56199999999998| 83.78099999999999|   83.78099999999999|                           84|\n|      standard|     511|   1689186|      Portugal|     Registado|   2867|Quarto Duplo Econ...|2023-03-02 18:07:...|         3|                    1|       2|      2|       0|    0|      495.0|  2023-08-18|  2023-08-21|             165.0|              82.5|                82.5|                          169|\n|  main rate bb|     309|   1687493|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|2023-02-28 12:41:...|         2|                    1|       2|      2|       0|    0|    127.167|  2023-04-21|  2023-04-23|           63.5835|          31.79175|            31.79175|                           52|\n|  mr main rate|     309|   1687154|       Espanha|    Modificada|   1372|Quarto Duplo Stan...|2023-02-27 22:27:...|         1|                    1|       2|      2|       0|    0|   34.55625|  2023-03-02|  2023-03-03|          34.55625|         17.278125|           17.278125|                            3|\n|non-refundable|     366|   1686287|      Portugal|     Registado|   1648|QUARTO TWIN STANDARD|2023-02-26 21:25:...|         1|                    1|       2|      2|       1|    0|       75.6|  2023-03-04|  2023-03-05|              75.6|              37.8|                37.8|                            6|\n+--------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+-----------+------------+------------+------------------+------------------+--------------------+-----------------------------+\nonly showing top 20 rows\n\n"
     }
    ]
   }
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}