{
 "paragraphs": [
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "IS_INTELLIJ_SERVICE": true,
      "ZTOOLS_DEBUG_CELL_ID": "8ea86e40-461b-4133-8225-cab909702289"
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "%spark.spark\n//ZToolsId = 8ea86e40-461b-4133-8225-cab909702289\n// It is generated code for integration with Big Data Tools plugin\n// Please DO NOT edit it.\ntry {\n  import org.apache.commons.lang.exception.ExceptionUtils\n  import org.apache.spark.sql.SparkSession\n\n  import java.io.{PrintWriter, StringWriter}\n  import java.util\n  import scala.collection.mutable.ListBuffer\n  import scala.collection.{immutable, mutable}\n  import scala.reflect.api.JavaUniverse\n  import scala.tools.nsc.interpreter.IMain\n  import org.json4s.jackson.Serialization\n  import org.json4s.{Formats, NoTypeHints}\n\n  import java.util.function.{Function => JFunction}\n  import java.util.regex.Pattern\n  import scala.language.implicitConversions\n  import scala.util.Try\n  import org.apache.spark.sql.Dataset\n  import org.apache.spark.rdd.RDD\n  import org.apache.spark.SparkContext\n\n  trait Loopback {\n    def pass(obj: Any, id: String): Any\n  }\n\n  object ResNames {\n    val REF = \"ref\"\n    val VALUE = \"value\"\n    val IS_PRIMITIVE = \"isPrimitive\"\n    val TYPE = \"type\"\n    val TIME = \"time\"\n    val LENGTH = \"length\"\n    val LAZY = \"lazy\"\n  }\n\n  object TrieMap {\n    class Node[T](var value: Option[T]) {\n      var children: mutable.Map[String, TrieMap.Node[T]] = _\n\n      def put(key: String, node: TrieMap.Node[T]): Option[Node[T]] = {\n        if (children == null)\n          children = mutable.Map[String, TrieMap.Node[T]]()\n        children.put(key, node)\n      }\n\n      def del(key: String): Option[Node[T]] = children.remove(key)\n\n      def forEach(func: Function[T, _]): Unit = {\n        func.apply(value.get)\n        if (children != null) children.foreach(t => t._2.forEach(func))\n      }\n    }\n\n    def split(key: String): Array[String] = {\n      var n = 0\n      var j = 0\n      for (i <- 0 until key.length) {\n        if (key.charAt(i) == '.') n += 1\n      }\n      val k = new Array[String](n + 1)\n      val sb = new mutable.StringBuilder(k.length)\n      for (i <- 0 until key.length) {\n        val ch = key.charAt(i)\n        if (ch == '.') {\n          k({\n            j += 1;\n            j - 1\n          }) = sb.toString\n          sb.setLength(0)\n        }\n        else sb.append(ch)\n      }\n      k(j) = sb.toString\n      k\n    }\n  }\n\n  class TrieMap[T] {\n    val root = new TrieMap.Node[T](null)\n\n    def subtree(key: Array[String], length: Int): TrieMap.Node[T] = {\n      var current = root\n      var i = 0\n      while ( {\n        i < length && current != null\n      }) {\n        if (current.children == null) return null\n        current = current.children.get(key(i)).orNull\n        i += 1\n      }\n      current\n    }\n\n    def put(key: Array[String], value: T): Option[TrieMap.Node[T]] = {\n      val node = subtree(key, key.length - 1)\n      node.put(key(key.length - 1), new TrieMap.Node[T](Option.apply(value)))\n    }\n\n    def put(key: String, value: T): Option[TrieMap.Node[T]] = {\n      val k = TrieMap.split(key)\n      put(k, value)\n    }\n\n    def contains(key: String): Boolean = {\n      val k = TrieMap.split(key)\n      val node = subtree(k, k.length)\n      node != null\n    }\n\n    def get(key: String): Option[T] = {\n      val k = TrieMap.split(key)\n      val node = subtree(k, k.length)\n      if (node == null) return Option.empty\n      node.value\n    }\n\n    def subtree(key: String): TrieMap.Node[T] = {\n      val k = TrieMap.split(key)\n      subtree(k, k.length)\n    }\n  }\n\n  trait TypeHandler {\n    def accept(obj: Any): Boolean\n\n    def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any]\n\n    def getErrors: List[String] = List[String]()\n  }\n\n  abstract class AbstractCollectionHandler(limit: Int, timeout: Int) extends AbstractTypeHandler {\n    trait Iterator {\n      def hasNext: Boolean\n\n      def next: Any\n    }\n\n    def iterator(obj: Any): Iterator\n\n    def length(obj: Any): Int\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = {\n      if (depth <= 0) {\n        withJsonObject { result =>\n          var s = scalaInfo.value.toString\n          if (s.length>1000)\n            s = s.take(1000) + \"...\"\n          result += (ResNames.VALUE -> s)\n          return result\n        }\n      } else {\n        mutable.Map[String, Any](\n          ResNames.LENGTH -> length(scalaInfo.value),\n          ResNames.VALUE -> withJsonArray { json =>\n            val startTime = System.currentTimeMillis()\n            val it = iterator(scalaInfo.value)\n            var index = 0\n            while (it.hasNext && index < limit && !checkTimeoutError(scalaInfo.path, startTime, timeout)) {\n                val id = scalaInfo.path\n                json += loopback.pass(it.next, s\"$id[$index]\")\n                index += 1\n            }\n            })\n      }\n    }\n  }\n\n  abstract class AbstractTypeHandler extends TypeHandler {\n    val timeoutErrors: mutable.MutableList[String] = mutable.MutableList()\n\n    override def getErrors: List[String] = timeoutErrors.toList\n\n    protected def withJsonArray(body: mutable.MutableList[Any] => Unit): mutable.MutableList[Any] = {\n      val arr = mutable.MutableList[Any]()\n      body(arr)\n      arr\n    }\n\n    protected def withJsonObject(body: mutable.Map[String, Any] => Unit): mutable.Map[String, Any] = {\n      val obj = mutable.Map[String, Any]()\n      body(obj)\n      obj\n    }\n\n    protected def wrap(obj: Any, tpe: String): mutable.Map[String, Any] = mutable.Map[String, Any](\n      ResNames.VALUE -> Option(obj).orNull,\n      ResNames.TYPE -> tpe\n    )\n\n    protected def checkTimeoutError(name: String, startTime: Long, timeout: Int): Boolean = {\n      val isTimeout = System.currentTimeMillis() - startTime > timeout\n      if (isTimeout)\n        timeoutErrors += f\"Variable $name collect timeout exceed ${timeout}ms.\"\n      isTimeout\n    }\n\n  }\n\n  class ArrayHandler(limit: Int, timeout: Int) extends AbstractCollectionHandler(limit, timeout) {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Array[_]]\n\n    override def length(obj: Any): Int = obj.asInstanceOf[Array[_]].length\n\n    override def iterator(obj: Any): Iterator = new Iterator {\n      private val it = obj.asInstanceOf[Array[_]].iterator\n\n      override def hasNext: Boolean = it.hasNext\n\n      override def next: Any = it.next\n    }\n  }\n\n  class JavaCollectionHandler(limit: Int, timeout: Int) extends AbstractCollectionHandler(limit, timeout) {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[util.Collection[_]]\n\n    override def iterator(obj: Any): Iterator = new Iterator() {\n      private val it = obj.asInstanceOf[util.Collection[_]].iterator()\n\n      override def hasNext: Boolean = it.hasNext\n\n      override def next: Any = it.next()\n    }\n\n    override def length(obj: Any): Int = obj.asInstanceOf[util.Collection[_]].size()\n  }\n  class MapHandler(limit: Int, timeout: Int) extends AbstractTypeHandler {\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] =\n      withJsonObject {\n        json =>\n          val obj = scalaInfo.value\n          val id = scalaInfo.path\n          val map = obj.asInstanceOf[Map[_, _]]\n          val keys = mutable.MutableList[Any]()\n          val values = mutable.MutableList[Any]()\n          json += (\"jvm-type\" -> obj.getClass.getCanonicalName)\n          json += (\"length\" -> map.size)\n          var index = 0\n\n          json += (\"key\" -> keys)\n          json += (\"value\" -> values)\n\n          val startTime = System.currentTimeMillis()\n          map.view.take(math.min(limit, map.size)).foreach {\n            case (key, value) =>\n              if (checkTimeoutError(scalaInfo.path, startTime, timeout))\n                return json\n              keys += loopback.pass(key, s\"$id.key[$index]\")\n              values += loopback.pass(value, s\"$id.value[$index]\")\n              index += 1\n          }\n      }\n\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Map[_, _]]\n  }\n\n  class NullHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj == null\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] =\n      mutable.Map[String, Any]()\n  }\n\n  class ObjectHandler(val stringSizeLimit: Int,\n                      val manager: HandlerManager,\n                      val referenceManager: ReferenceManager,\n                      val timeout: Int) extends AbstractTypeHandler {\n    private val INACCESSIBLE = ScalaVariableInfo(isAccessible = false, isLazy = false, null, null, null, null)\n    val ru: JavaUniverse = scala.reflect.runtime.universe\n    val mirror: ru.Mirror = ru.runtimeMirror(getClass.getClassLoader)\n    import scala.reflect.runtime.universe.NoSymbol\n    case class ReflectionProblem(e: Throwable, symbol: String, var count: Int)\n\n    val problems: mutable.Map[String, ReflectionProblem] = mutable.Map[String, ReflectionProblem]()\n\n    override def accept(obj: Any): Boolean = true\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] =\n      withJsonObject { result =>\n        val obj = scalaInfo.value\n\n        if (obj == null) {\n          return result\n        }\n        if (depth <= 0) {\n          var s = obj.toString\n          if (s.length>stringSizeLimit)\n            s = s.take(stringSizeLimit) + \"...\"\n          result += (ResNames.VALUE -> s)\n          return result\n        }\n\n        val startTime = System.currentTimeMillis()\n        val fields = listAccessibleProperties(scalaInfo, startTime)\n        if (fields.isEmpty) {\n          var s = obj.toString\n          if (s.length>stringSizeLimit)\n            s = s.take(stringSizeLimit) + \"...\"\n          result += (ResNames.VALUE -> s)\n          return result\n        }\n\n        val resolvedFields = mutable.Map[String, Any]()\n        result += (ResNames.VALUE -> resolvedFields)\n\n\n        fields.foreach { field =>\n          if (checkTimeoutError(field.name, startTime, timeout)) {\n            return result\n          }\n\n          if (field.ref != null && field.ref != field.path) {\n            resolvedFields += (field.name -> (mutable.Map[String, Any]() += (ResNames.REF -> field.ref)))\n          } else {\n            resolvedFields += (field.name -> manager.handleVariable(field, loopback, depth - 1))\n          }\n        }\n\n        result\n      }\n\n\n    override def getErrors: List[String] = problems.map(x =>\n      f\"Reflection error for ${x._2.symbol} counted ${x._2.count}.\\n\" +\n        f\"Error message: ${ExceptionUtils.getMessage(x._2.e)}\\n \" +\n        f\"Stacktrace:${ExceptionUtils.getStackTrace(x._2.e)}\").toList ++ super.getErrors\n\n    private def listAccessibleProperties(info: ScalaVariableInfo, startTime: Long): List[ScalaVariableInfo] = {\n      val instanceMirror = mirror.reflect(info.value)\n      val instanceSymbol = instanceMirror.symbol\n      val members = instanceSymbol.toType.members\n\n      val parsedMembers = mutable.MutableList[ScalaVariableInfo]()\n      members.foreach { symbol =>\n        if (checkTimeoutError(info.path, startTime, timeout))\n          return parsedMembers.toList\n        val variableInfo = get(instanceMirror, symbol, info.path)\n        if (variableInfo.isAccessible)\n          parsedMembers += variableInfo\n      }\n\n      parsedMembers.toList\n    }\n\n    private def get(instanceMirror: ru.InstanceMirror, symbol: ru.Symbol, path: String): ScalaVariableInfo = {\n      if (!problems.contains(path))\n        try {\n          // is public property\n          if (!symbol.isMethod && symbol.isTerm && (symbol.asTerm.isVar || symbol.asTerm.isVal)\n          && symbol.asTerm.getter != NoSymbol\n          && symbol.asTerm.getter.isPublic) {\n            val term = symbol.asTerm\n            val f = instanceMirror.reflectField(term)\n            val fieldPath = s\"$path.${term.name.toString.trim}\"\n            val value = f.get\n            val tpe = term.typeSignature.toString\n            return ScalaVariableInfo(isAccessible = tpe != \"<notype>\", isLazy = term.isLazy, value, tpe,\n              fieldPath, referenceManager.getRef(value, fieldPath))\n          }\n        } catch {\n          case e: Throwable => problems(path) = ReflectionProblem(e, symbol.toString, 1)\n        }\n      else\n        problems(path).count += 1\n\n      INACCESSIBLE\n    }\n  }\n\n  class PrimitiveHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean =\n      obj match {\n        case _: Byte => true\n        case _: Short => true\n        case _: Boolean => true\n        case _: Char => true\n        case _: Int => true\n        case _: Long => true\n        case _: Float => true\n        case _: Double => true\n        case _ => false\n      }\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] =\n      mutable.Map[String, Any](\n        ResNames.VALUE -> scalaInfo.value,\n        ResNames.IS_PRIMITIVE -> 1\n      )\n  }\n\n  class SeqHandler(limit: Int, timeout: Int) extends AbstractCollectionHandler(limit, timeout) {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Seq[_]]\n\n    override def iterator(obj: Any): Iterator = new Iterator {\n      private val it = obj.asInstanceOf[Seq[_]].iterator\n\n      override def hasNext: Boolean = it.hasNext\n\n      override def next: Any = it.next()\n    }\n\n    override def length(obj: Any): Int = obj.asInstanceOf[Seq[_]].size\n  }\n\n  class SetHandler(limit: Int, timeout: Int) extends AbstractCollectionHandler(limit, timeout) {\n    override def iterator(obj: Any): Iterator = new Iterator {\n      private val it = obj.asInstanceOf[Set[_]].iterator\n\n      override def hasNext: Boolean = it.hasNext\n\n      override def next: Any = it.next()\n    }\n\n    override def length(obj: Any): Int = obj.asInstanceOf[Set[_]].size\n\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Set[_]]\n  }\n\n  class SpecialsHandler(limit: Int) extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.getClass.getCanonicalName != null && obj.getClass.getCanonicalName.startsWith(\"scala.\")\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = withJsonObject {\n      json =>\n        var s = scalaInfo.value.toString\n        if (s.length>limit)\n          s = s.take(limit) + \"...\"\n        json.put(ResNames.VALUE, s)\n    }\n  }\n\n  class StringHandler(limit: Int) extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[String]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = {\n      var s = scalaInfo.value.asInstanceOf[String]\n      if (s.length>limit)\n        s = s.take(limit) + \"...\"\n      mutable.Map(\n        ResNames.VALUE -> s\n      )\n    }\n  }\n\n  class ThrowableHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Throwable]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = {\n      val obj = scalaInfo.value\n      val throwable = obj.asInstanceOf[Throwable]\n      val writer = new StringWriter()\n      val out = new PrintWriter(writer)\n      throwable.printStackTrace(out)\n\n      mutable.Map(\n        ResNames.VALUE -> writer.toString\n      )\n    }\n  }\n\n  class HandlerManager(enableProfiling: Boolean,\n                       timeout: Int,\n                       stringSizeLimit: Int,\n                       collectionSizeLimit: Int,\n                       referenceManager: ReferenceManager) {\n    private val handlerChain = ListBuffer[AbstractTypeHandler](\n      new NullHandler(),\n      new StringHandler(stringSizeLimit),\n      new ArrayHandler(collectionSizeLimit, timeout),\n      new JavaCollectionHandler(collectionSizeLimit, timeout),\n      new SeqHandler(collectionSizeLimit, timeout),\n      new SetHandler(collectionSizeLimit, timeout),\n      new MapHandler(collectionSizeLimit, timeout),\n      new ThrowableHandler(),\n      new SpecialsHandler(stringSizeLimit),\n      new PrimitiveHandler(),\n      new DatasetHandler(),\n      new RDDHandler(),\n      new SparkContextHandler(),\n      new SparkSessionHandler(),\n      new ObjectHandler(stringSizeLimit, this, referenceManager, timeout)\n    ).map(new HandlerWrapper(_, enableProfiling))\n\n    def getErrors: mutable.Seq[String] = handlerChain.flatMap(x => x.handler.getErrors)\n\n    def handleVariable(info: ScalaVariableInfo, loopback: Loopback, depth: Int, startTime: Long = System.currentTimeMillis()): Any = {\n      handlerChain.find(_.accept(info)).map(_.handle(info, loopback, depth, startTime)).getOrElse(mutable.Map[String, Any]())\n    }\n  }\n\n  class HandlerWrapper(val handler: TypeHandler, profile: Boolean) {\n    def accept(info: ScalaVariableInfo): Boolean = info.isLazy || handler.accept(info.value)\n\n    def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int, initStartTime: Long): Any = {\n      val startTime = if (initStartTime != null)\n        initStartTime\n      else\n        System.currentTimeMillis()\n\n      val data = if (scalaInfo.isLazy) {\n        mutable.Map[String, Any](ResNames.LAZY -> true)\n      }\n      else {\n        try {\n          val data = handler.handle(scalaInfo, loopback, depth: Int)\n          if (data.keys.count(_ == ResNames.IS_PRIMITIVE) > 0) {\n            return data(ResNames.VALUE)\n          }\n          data\n        } catch {\n          case t: Throwable =>\n            return ExceptionUtils.getRootCauseMessage(t)\n        }\n\n      }\n      try {\n        data.put(ResNames.TYPE, calculateType(scalaInfo))\n      } catch {\n        case t: Throwable =>\n          data.put(ResNames.TYPE, ExceptionUtils.getRootCauseMessage(t))\n      }\n\n      if (profile)\n        data.put(ResNames.TIME, System.currentTimeMillis() - startTime)\n\n      data\n    }\n\n    private def calculateType(scalaInfo: ScalaVariableInfo): String = {\n      if (scalaInfo.tpe != null)\n        return scalaInfo.tpe\n\n      if (scalaInfo.value != null)\n        scalaInfo.value.getClass.getCanonicalName\n      else\n        null\n    }\n  }\n  class InterpreterHandler(val interpreter: IMain) {\n    val wrapper = new ZtoolsInterpreterWrapper(interpreter)\n\n    def getVariableNames: immutable.Seq[String] =\n      interpreter.definedSymbolList.filter { x => x.isGetter }.map(_.name.toString).distinct\n\n    def getInfo(name: String, tpe: String): ScalaVariableInfo = {\n      val obj = valueOfTerm(name).orNull\n      ScalaVariableInfo(isAccessible = true, isLazy = false, obj, tpe, name, null)\n    }\n\n    def valueOfTerm(id: String): Option[Any] = wrapper.valueOfTerm(id)\n  }\n\n  case class ScalaVariableInfo(isAccessible: Boolean,\n                               isLazy: Boolean,\n                               value: Any,\n                               tpe: String,\n                               path: String,\n                               ref: String) {\n    val name: String = if (path != null)\n      path.substring(path.lastIndexOf('.') + 1)\n    else\n      null\n  }\n\n\n\n  //noinspection TypeAnnotation\n  class ZtoolsInterpreterWrapper(val iMain: IMain) {\n\n    import scala.language.implicitConversions\n    import scala.reflect.runtime.{universe => ru}\n    import iMain.global._\n\n    import scala.util.{Try => Trying}\n\n    private lazy val importToGlobal = iMain.global mkImporter ru\n    private lazy val importToRuntime = ru.internal createImporter iMain.global\n\n    private implicit def importFromRu(sym: ru.Symbol) = importToGlobal importSymbol sym\n\n    private implicit def importToRu(sym: Symbol): ru.Symbol = importToRuntime importSymbol sym\n\n    // see https://github.com/scala/scala/pull/5852/commits/a9424205121f450dea2fe2aa281dd400a579a2b7\n    def valueOfTerm(id: String): Option[Any] = exitingTyper {\n      def fixClassBasedFullName(fullName: List[String]): List[String] = {\n        if (settings.Yreplclassbased.value) {\n          val line :: read :: rest = fullName\n          line :: read :: \"INSTANCE\" :: rest\n        } else fullName\n      }\n\n      def value(fullName: String) = {\n        val universe = iMain.runtimeMirror.universe\n        import universe.{InstanceMirror, Symbol, TermName}\n        val pkg :: rest = fixClassBasedFullName((fullName split '.').toList)\n        val top = iMain.runtimeMirror.staticPackage(pkg)\n\n        @annotation.tailrec\n        def loop(inst: InstanceMirror, cur: Symbol, path: List[String]): Option[Any] = {\n          def mirrored =\n            if (inst != null) inst\n            else iMain.runtimeMirror reflect (iMain.runtimeMirror reflectModule cur.asModule).instance\n\n          path match {\n            case last :: Nil =>\n              cur.typeSignature.decls find (x => x.name.toString == last && x.isAccessor) map { m =>\n                (mirrored reflectMethod m.asMethod).apply()\n              }\n            case next :: rest =>\n              val s = cur.typeSignature.member(TermName(next))\n              val i =\n                if (s.isModule) {\n                  if (inst == null) null\n                  else iMain.runtimeMirror reflect (inst reflectModule s.asModule).instance\n                }\n                else if (s.isAccessor) {\n                  iMain.runtimeMirror reflect (mirrored reflectMethod s.asMethod).apply()\n                }\n                else {\n                  assert(false, s.fullName)\n                  inst\n                }\n              loop(i, s, rest)\n            case Nil => None\n          }\n        }\n\n        loop(null, top, rest)\n      }\n\n      Option(iMain.symbolOfTerm(id)) filter (_.exists) flatMap (s => Trying(value(s.fullName)).toOption.flatten)\n    }\n  }\n\n  class ReferenceManager {\n    private val refMap = mutable.Map[ReferenceWrapper, String]()\n    private val refInvMap = new TrieMap[ReferenceWrapper]()\n\n    /**\n     * Returns a reference (e.g. valid path) to the object or creates a record in reference maps (and returns null).\n     *\n     * @param obj  an object we want to find a reference for (can be null)\n     * @param path path of the object e.g. myVar.myField.b\n     * @return reference path to the object obj. The method returns null if obj is null itself or\n     *         obj hasn't been mentioned earlier or in the case of AnyVal object.\n     */\n    def getRef(obj: Any, path: String): String = obj match {\n      case null | _: Unit =>\n        clearRefIfPathExists(path)\n        null\n      case ref: AnyRef =>\n        val wrapper = new ReferenceWrapper(ref)\n        if (refMap.contains(wrapper)) {\n          if (refInvMap.get(path).orNull != wrapper) clearRefIfPathExists(path)\n          refMap(wrapper)\n        } else {\n          clearRefIfPathExists(path)\n          refMap(wrapper) = path\n          refInvMap.put(path, wrapper)\n          null\n        }\n      case _ => null\n    }\n\n\n    private def clearRefIfPathExists(path: String): Unit = {\n      if (refInvMap.contains(path)) {\n        val tree = refInvMap.subtree(path)\n        tree.forEach(refMap.remove(_: ReferenceWrapper))\n      }\n    }\n  }\n\n  class ReferenceWrapper(val ref: AnyRef) {\n    override def hashCode(): Int = ref.hashCode()\n\n    override def equals(obj: Any): Boolean = obj match {\n      case value: ReferenceWrapper =>\n        ref.eq(value.ref)\n      case _ => false\n    }\n  }\n\n\n  class VariablesView(val intp: IMain,\n                      val timeout: Int,\n                      val variableTimeout: Int,\n                      val collectionSizeLimit: Int,\n                      val stringSizeLimit: Int,\n                      val blackList: List[String],\n                      val whiteList: List[String] = null,\n                      val filterUnitResults: Boolean,\n                      val enableProfiling: Boolean,\n                      val depth: Int,\n                      val interpreterResCountLimit: Int = 5) {\n    val errors: mutable.MutableList[String] = mutable.MutableList[String]()\n    private val interpreterHandler = new InterpreterHandler(intp)\n    private val referenceManager = new ReferenceManager()\n\n    private val touched = mutable.Map[String, ScalaVariableInfo]()\n\n    private val handlerManager = new HandlerManager(\n      collectionSizeLimit = collectionSizeLimit,\n      stringSizeLimit = stringSizeLimit,\n      timeout = variableTimeout,\n      referenceManager = referenceManager,\n      enableProfiling = enableProfiling\n    )\n\n    //noinspection ScalaUnusedSymbol\n    def getZtoolsJsonResult: String = {\n      implicit val ztoolsFormats: AnyRef with Formats = Serialization.formats(NoTypeHints)\n      Serialization.write(\n        Map(\n          \"variables\" -> resolveVariables,\n          \"errors\" -> (errors ++ handlerManager.getErrors)\n        )\n      )\n    }\n\n    def toJson: String = {\n      implicit val ztoolsFormats: AnyRef with Formats = Serialization.formats(NoTypeHints)\n      Serialization.write(resolveVariables)\n    }\n\n    def resolveVariables: mutable.Map[String, Any] = {\n      val result: mutable.Map[String, Any] = mutable.Map[String, Any]()\n      val startTime = System.currentTimeMillis()\n\n      val interpreterVariablesNames = interpreterHandler.getVariableNames\n      val finalNames = filterVariableNames(interpreterVariablesNames)\n\n      finalNames.foreach { name =>\n        val varType = interpreterHandler.interpreter.typeOfTerm(name).toString().stripPrefix(\"()\")\n        val variable = mutable.Map[String, Any]()\n\n        result += name -> variable\n        variable += ResNames.TYPE -> varType\n        if (!isUnitOrNullResult(result, name))\n          variable += ResNames.VALUE -> \"<Not calculated>\"\n      }\n\n      var passedVariablesCount = 0\n      val totalVariablesCount = finalNames.size\n\n      if (checkTimeout(startTime, passedVariablesCount, totalVariablesCount))\n        return result\n\n      finalNames.foreach { name =>\n        if (checkTimeout(startTime, passedVariablesCount, totalVariablesCount))\n          return result\n        passedVariablesCount += 1\n\n        if (!isUnitOrNullResult(result, name)) {\n\n          calculateVariable(result, name)\n        }\n      }\n      result\n    }\n\n    private def calculateVariable(result: mutable.Map[String, Any], name: String) = {\n      val valMap = result(name).asInstanceOf[mutable.Map[String, Any]]\n      try {\n        val startTime = System.currentTimeMillis()\n\n        val info = interpreterHandler.getInfo(name, valMap(ResNames.TYPE).asInstanceOf[String])\n        val ref = referenceManager.getRef(info.value, name)\n        touched(info.path) = info\n\n        if (ref != null && ref != info.path) {\n          result += (info.path -> mutable.Map[String, Any](ResNames.REF -> ref))\n        } else {\n          result += info.path -> parseInfo(info, depth, startTime)\n        }\n      } catch {\n        case t: Throwable =>\n          valMap += ResNames.VALUE -> ExceptionUtils.getRootCauseMessage(t)\n      }\n    }\n\n    private def isUnitOrNullResult(result: mutable.Map[String, Any], name: String) = {\n      val res = result(name).asInstanceOf[mutable.Map[String, Any]]\n      val valType = res(ResNames.TYPE)\n      valType == \"Unit\" || valType == \"Null\"\n    }\n\n    def resolveVariable(path: String): mutable.Map[String, Any] = {\n      val result = mutable.Map[String, Any]()\n      val obj = touched.get(path).orNull\n      if (obj.ref != null) {\n        result += (ResNames.VALUE -> mutable.Map[String, Any](ResNames.REF -> obj.ref))\n      } else {\n        result += (ResNames.VALUE -> parseInfo(obj, depth))\n      }\n      result\n    }\n\n    private def parseInfo(info: ScalaVariableInfo, depth: Int, startTime: Long = System.currentTimeMillis()): Any = {\n      val loopback = new Loopback {\n        override def pass(obj: Any, id: String): Any = {\n          val si = ScalaVariableInfo(isAccessible = true, isLazy = false, obj, null, id, referenceManager.getRef(obj, id))\n          parseInfo(si, depth - 1)\n        }\n      }\n      handlerManager.handleVariable(info, loopback, depth, startTime)\n    }\n\n    private def filterVariableNames(interpreterVariablesNames: Seq[String]) = {\n      val variablesNames = interpreterVariablesNames.seq\n        .filter { name => !blackList.contains(name) }\n        .filter { name => whiteList == null || whiteList.contains(name) }\n\n\n      val p = Pattern.compile(\"res\\\\d*\")\n      val (resVariables, otherVariables: immutable.Seq[String]) = variablesNames.partition(x => p.matcher(x).matches())\n      val sortedResVariables = resVariables\n        .map(res => Try(res.stripPrefix(\"res\").toInt))\n        .filter(_.isSuccess)\n        .map(_.get)\n        .sortWith(_ > _)\n        .take(interpreterResCountLimit)\n        .map(num => \"res\" + num)\n\n      val finalNames = otherVariables ++ sortedResVariables\n      finalNames\n    }\n\n    //noinspection ScalaUnusedSymbol\n    private implicit def toJavaFunction[A, B](f: A => B): JFunction[A, B] = new JFunction[A, B] {\n      override def apply(a: A): B = f(a)\n    }\n\n    private def checkTimeout(startTimeout: Long, passed: Int, total: Int): Boolean = {\n      val isTimeoutExceed = System.currentTimeMillis() - startTimeout > timeout\n      if (isTimeoutExceed)\n        errors += s\"Variables collect timeout. Exceed ${timeout}ms. Parsed $passed from $total.\"\n      isTimeoutExceed\n    }\n  }\n\n  class DatasetHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[Dataset[_]]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = {\n      val obj = scalaInfo.value\n      val df = obj.asInstanceOf[Dataset[_]]\n\n\n      val schema = df.schema\n      val jsonSchemaColumns = schema.fields.map(field => {\n        val value = withJsonObject { jsonField =>\n          jsonField += \"name\" -> wrap(field.name, null)\n          jsonField += \"nullable\" -> wrap(field.nullable, null)\n          jsonField += \"dataType\" -> wrap(field.dataType.typeName, null)\n        }\n        wrap(value, \"org.apache.spark.sql.types.StructField\")\n      }\n      )\n\n      val jsonSchema = mutable.Map(\n        ResNames.VALUE -> jsonSchemaColumns,\n        ResNames.TYPE -> \"org.apache.spark.sql.types.StructType\",\n        ResNames.LENGTH -> jsonSchemaColumns.length\n      )\n\n      val dfValue = mutable.Map(\n        \"schema()\" -> jsonSchema,\n        \"getStorageLevel()\" -> wrap(df.storageLevel.toString(), \"org.apache.spark.storage.StorageLevel\")\n      )\n\n      mutable.Map(\n        ResNames.VALUE -> dfValue\n      )\n    }\n  }\n\n\n  class RDDHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[RDD[_]]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = withJsonObject {\n      json =>\n        val obj = scalaInfo.value\n        val rdd = obj.asInstanceOf[RDD[_]]\n        json += (ResNames.VALUE -> withJsonObject { value =>\n          value += (\"getNumPartitions()\" -> wrap(rdd.getNumPartitions, \"Int\"))\n          value += (\"name\" -> wrap(rdd.name, \"String\"))\n          value += (\"id\" -> wrap(rdd.id, \"Int\"))\n          value += (\"partitioner\" -> wrap(rdd.partitioner.toString, \"Option[org.apache.spark.Partitioner]\"))\n          value += (\"getStorageLevel()\" -> wrap(rdd.getStorageLevel.toString, \"org.apache.spark.storage.StorageLevel\"))\n        })\n    }\n  }\n\n  class SparkContextHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[SparkContext]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = withJsonObject {\n      json =>\n        val sc = scalaInfo.value.asInstanceOf[SparkContext]\n        json += (ResNames.VALUE -> withJsonObject { json =>\n          json += (\"sparkUser\" -> wrap(sc.sparkUser, \"String\"))\n          json += (\"sparkTime\" -> wrap(sc.startTime, \"Long\"))\n          json += (\"applicationId()\" -> wrap(sc.applicationId, \"String\"))\n          json += (\"applicationAttemptId()\" -> wrap(sc.applicationAttemptId.toString, \"Option[String]\"))\n          json += (\"appName()\" -> sc.appName)\n        })\n    }\n  }\n\n  class SparkSessionHandler extends AbstractTypeHandler {\n    override def accept(obj: Any): Boolean = obj.isInstanceOf[SparkSession]\n\n    override def handle(scalaInfo: ScalaVariableInfo, loopback: Loopback, depth: Int): mutable.Map[String, Any] = withJsonObject {\n      json =>\n        val obj = scalaInfo.value\n        val id = scalaInfo.path\n\n        val spark = obj.asInstanceOf[SparkSession]\n        json += (ResNames.VALUE -> withJsonObject { json =>\n          json += (\"version()\" -> spark.version)\n          json += (\"sparkContext\" -> loopback.pass(spark.sparkContext, s\"$id.sparkContext\"))\n        })\n    }\n  }\n\n\n  /**\n   * Main section\n   */\n  val iMain: IMain = $intp\n  val depth: Int = 2\n  val filterUnitResults: Boolean = true\n  val enableProfiling: Boolean = true\n  val collectionSizeLimit = 100\n  val stringSizeLimit = 400\n  val timeout = 5000\n  val variableTimeout = 2000\n  val interpreterResCountLimit = 10\n  val blackList = \"$intp,sqlContext,z,engine\".split(',').toList\n  val whiteList: List[String] =  null\n\n\n  val variableView = new VariablesView(\n    intp = iMain,\n    timeout = timeout,\n    variableTimeout = variableTimeout,\n    collectionSizeLimit = collectionSizeLimit,\n    stringSizeLimit = stringSizeLimit,\n    blackList = blackList,\n    whiteList = whiteList,\n    filterUnitResults = filterUnitResults,\n    enableProfiling = enableProfiling,\n    depth = depth,\n    interpreterResCountLimit = interpreterResCountLimit\n  )\n\n  implicit val ztoolsFormats: AnyRef with Formats = Serialization.formats(NoTypeHints)\n  val variablesJson = variableView.getZtoolsJsonResult\n  println(\"---ztools-scala---\")\n  println(variablesJson)\n  println(\"---ztools-scala---\")\n}\ncatch {\n  case t: Throwable =>\n    import org.apache.commons.lang.exception.ExceptionUtils\n    import org.json4s.jackson.Serialization\n    import org.json4s.{Formats, NoTypeHints}\n\n    implicit val ztoolsFormats: AnyRef with Formats = Serialization.formats(NoTypeHints)\n    val result = Serialization.write(Map(\n      \"errors\" -> Array(f\"${ExceptionUtils.getMessage(t)}\\n${ExceptionUtils.getStackTrace(t)}\")\n    ))\n    println(\"---ztools-scala---\")\n    println(result)\n    println(\"---ztools-scala---\")\n}\n{\n    var sqlTableShows: Array[String] = Array(\"SHOW TABLES  \")\n    val additionalTables = Array[Tuple2[String, String]]((\"\", \"jointipologia\"), (\"\", \"jointipologiaandhotel\"), (\"\", \"joinferiados\"), (\"\", \"joinferiadosgrouped\"), (\"\", \"joineventos\"), (\"\", \"joineventosgrouped\"), (\"\", \"joinmeteotemp\"), (\"\", \"joinmeteogrouped\"), (\"\", \"finaldataset\"))\n    val timeout = 5000\n    val collectOnlyTempTables = false\n    val appendOutput = false\n\n    case class ZtoolsColumn(name: String,\n                            columnType: String,\n                            description: String)\n\n    case class ZtoolsTable(name: String,\n                           databaseName: String,\n                           var columns: Array[ZtoolsColumn],\n                           var error: String = null)\n\n    case class ZtoolsSqlProfile(request: String, time: Long)\n\n    case class ZtoolsSqlInfo(tables: Array[ZtoolsTable],\n                             errors: Array[String],\n                             profiling: Array[ZtoolsSqlProfile],\n                             appendOutput: Boolean = appendOutput)\n\n\n    //TO KNOW:\n    //We collect info by spark.sql not spark.catalog because there some errors with Glue, database does not read\n    //Additionally we cannot use column name because it can be different \"namespace\" in EMR and \"database\" in vanilla spark\n    def calcZtoolsSqlSchemas(): String = {\n        import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility\n        import com.fasterxml.jackson.annotation.PropertyAccessor\n        import com.fasterxml.jackson.databind.ObjectMapper\n        import org.apache.commons.lang.exception.ExceptionUtils\n        import org.apache.spark.sql.Row\n\n        import scala.collection.mutable.ArrayBuffer\n\n        val startTime = System.currentTimeMillis()\n        val errors = ArrayBuffer[String]()\n\n        def convertThrowable(msg: String, t: Throwable): String = msg + \"\\n\" +\n                ExceptionUtils.getRootCauseMessage(t) + \"\\n\" +\n                ExceptionUtils.getStackTrace(t)\n\n        def escapeSql(string: String) = \"`\" + string.replace(\"`\", \"``\") + \"`\"\n\n\n\n\n        var tables = ArrayBuffer[ZtoolsTable]()\n        var profilingResult = ArrayBuffer[ZtoolsSqlProfile]()\n\n        def performSql(sqlRequest: String): Tuple2[Array[_ <: Row], String] = {\n            if (System.currentTimeMillis() - startTime > timeout) {\n                val error = f\"Timeout $timeout exceed. Sql request '$sqlRequest' ignored.\"\n                errors.append(error)\n                return (Array.empty, error)\n            }\n            val startTransactionTime = System.currentTimeMillis()\n            try {\n                val rows = spark.sql(sqlRequest).collect()\n                (rows, null)\n            } catch {\n                case t: Throwable =>\n                    errors.append(convertThrowable(sqlRequest, t))\n                    (Array.empty, ExceptionUtils.getMessage(t))\n            } finally {\n                profilingResult += ZtoolsSqlProfile(sqlRequest, System.currentTimeMillis() - startTransactionTime)\n            }\n        }\n\n        if (sqlTableShows!=null && sqlTableShows.isEmpty) {\n            val sqlRequest = \"show databases\"\n            val databases = performSql(sqlRequest)._1.map(_.getAs[String](0))\n            sqlTableShows = databases.map(db => f\"SHOW TABLES in $db\")\n        }\n\n        if (sqlTableShows==null) {\n            sqlTableShows = Array.empty\n        }\n\n        sqlTableShows.foreach(sqlRequest => {\n            try {\n                var listTables = performSql(sqlRequest)._1\n                if (collectOnlyTempTables)\n                    listTables = listTables.filter(_.getAs[Boolean](2) == true)\n\n                listTables.map(row => ZtoolsTable(\n                    databaseName = row.getAs[String](0),\n                    name = row.getAs[String](1),\n                    columns = Array.empty[ZtoolsColumn])).foreach(t => tables.append(t))\n            } catch {\n                case t: Throwable =>\n                    errors.append(convertThrowable(s\"Error transform output of  $sqlRequest\", t))\n                    ArrayBuffer.empty[ZtoolsTable]\n            }\n        })\n\n        val tableSet = (additionalTables.map(it => ZtoolsTable(it._2, it._1, Array.empty)) ++ tables).distinct\n\n        def processTable(table: ZtoolsTable): Unit = {\n            val columns = try {\n                val tableSqlName = if (table.databaseName == null || table.databaseName.isEmpty)\n                    escapeSql(table.name)\n                else\n                    escapeSql(table.databaseName) + \".\" + escapeSql(table.name)\n\n                //https://spark.apache.org/docs/3.0.0-preview/sql-ref-syntax-aux-describe-table.html\n                val sqlResult = performSql(s\"DESCRIBE TABLE $tableSqlName\")\n\n                val columnRows = sqlResult._1\n                table.error = sqlResult._2\n\n                //Ignore partition section\n                columnRows.takeWhile(row => !Option(row.getAs[String](0)).getOrElse(\"\").startsWith(\"# \"))\n                        .map(row => ZtoolsColumn(row.getAs[String](0), row.getAs[String](1), row.getAs[String](2)))\n            } catch {\n                case t: Throwable => convertThrowable(s\"Error list columns for ${table.name}\", t)\n                    table.error = ExceptionUtils.getRootCauseMessage(t)\n                    errors.append(convertThrowable(s\"Error list columns for ${table.name}\", t))\n                    return\n            }\n            table.columns = columns\n        }\n\n        tableSet.foreach(table => {\n            processTable(table)\n        })\n\n        val res = ZtoolsSqlInfo(tableSet.toArray, errors.toArray, profilingResult.toArray)\n        val objectMapper = new ObjectMapper().setVisibility(PropertyAccessor.FIELD, Visibility.ANY).writerWithDefaultPrettyPrinter()\n        objectMapper.writeValueAsString(res)\n    }\n\n    def ztoolsPrintResult(): Unit = {\n        val ztoolsSqlResult = calcZtoolsSqlSchemas()\n        println(\"---ztools-sql---\")\n        println(ztoolsSqlResult)\n        println(\"---ztools-sql---\")\n    }\n\n    ztoolsPrintResult()\n}",
   "id": "",
   "dateCreated": "2023-05-18 22:39:45.069",
   "config": {
    "tableHide": true,
    "editorHide": true
   },
   "dateStarted": "2023-05-18 22:58:26.123",
   "dateUpdated": "2023-05-18 22:58:36.084",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "<console>:354: \u001b[33mwarning: \u001b[0ma pure expression does nothing in statement position; you may be omitting necessary parentheses\n               result\n               ^\n<console>:529: \u001b[33mwarning: \u001b[0mcomparing values of types Long and Null using `!=' will always yield true\n             val startTime = if (initStartTime != null)\n                                               ^\n---ztools-scala---\n{\"variables\":{\"Maia\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Maia\",\"time\":0}],\"time\":1},\"maxEndDate\":{\"type\":\"Object\",\"value\":\"2023-11-05\",\"time\":1},\"res18\":{\"type\":\"Unit\"},\"Obidos\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Obidos\",\"time\":0}],\"time\":0},\"dfWithTimeDiff\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":21,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"dif_data_chegada_data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}}]}},\"time\":1},\"Braganca\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Alto dos Lombos\",\"time\":0}],\"time\":0},\"spark\":{\"type\":\"org.apache.spark.sql.SparkSession\",\"value\":{\"sparkContext\":{\"type\":\"org.apache.spark.SparkContext\",\"value\":{\"appName()\":\"916593c2-c742-406e-a862-cb514127032a\",\"sparkTime\":{\"type\":\"Long\",\"value\":1684446601889},\"applicationId()\":{\"type\":\"String\",\"value\":\"local-1684446603991\"},\"applicationAttemptId()\":{\"type\":\"Option[String]\",\"value\":\"None\"},\"sparkUser\":{\"type\":\"String\",\"value\":\"zeppelin\"}},\"time\":18},\"version()\":\"2.4.5\"},\"time\":88},\"result_after_cleaning\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":13},\"Castelo_Branco\":{\"type\":\"List\",\"length\":4,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Castelo Branco\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Covilhã\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Sabugueiro / Seia\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Vale do Peso\",\"time\":0}],\"time\":1},\"dfLower\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":1},\"csvHotel\":{\"type\":\"String\",\"value\":\"/data/tp/Hotel.csv\",\"time\":3},\"FacilitesTable\":{\"type\":\"String\",\"value\":\"Facilities\",\"time\":1},\"res12\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":10,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"date\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tavg\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tmin\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tmax\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"prcp\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"wdir\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"wspd\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"wpgt\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pres\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"city\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":0},\"FeriadosTable\":{\"type\":\"String\",\"value\":\"Feriados\",\"time\":0},\"res15\":{\"type\":\"Unit\"},\"newQuartosReservados\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":1},\"Albufeira\":{\"type\":\"List\",\"length\":11,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Albufeira - Algarve\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Alte\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Benafim\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Conceição de Tavira\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Fuseta\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Olhão\",\"time\":1},{\"type\":\"java.lang.String\",\"value\":\"Olhos D'Água\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"São Brás de Alportel\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Silves\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Tavira\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Vilamoura\",\"time\":0}],\"time\":8},\"df\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":4,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Location\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Event\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"start_Date\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"end_date\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}}]}},\"time\":15},\"minDate\":{\"type\":\"Object\",\"value\":\"2022-01-01\",\"time\":1},\"sortedData\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":2,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":false},\"name\":{\"type\":null,\"value\":\"count\"},\"dataType\":{\"type\":null,\"value\":\"long\"}}}]}},\"time\":1},\"dfRenamed\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":1},\"csvFeriados\":{\"type\":\"String\",\"value\":\"/data/tp/Feriados.csv\",\"time\":1},\"MeteorologiaTable\":{\"type\":\"String\",\"value\":\"Meteorologia\",\"time\":1},\"joinFolder\":{\"type\":\"String\",\"value\":\"/data/leitura\",\"time\":1},\"Aveiro\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Aveiro\",\"time\":0}],\"time\":0},\"Moncao\":{\"type\":\"List\",\"length\":2,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Monção\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Valença do Minho\",\"time\":0}],\"time\":1},\"Amares\":{\"type\":\"List\",\"length\":5,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Amares\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Braga\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Póvoa de Lanhoso\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Tomar\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Torres Novas\",\"time\":0}],\"time\":1},\"QuartosReservadosTable\":{\"type\":\"String\",\"value\":\"QuartosReservados\",\"time\":1},\"maxDate\":{\"type\":\"Object\",\"value\":\"2023-04-23\",\"time\":1},\"Espinho\":{\"type\":\"List\",\"length\":3,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Espinho\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Ovar\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Viseu\",\"time\":0}],\"time\":1},\"Campo_Maior\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Campo Maior\",\"time\":0}],\"time\":1},\"Elvas\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"ELVAS\",\"time\":0}],\"time\":0},\"res20\":{\"type\":\"Unit\"},\"dfUpdated\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":21,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan_normalized\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":1},\"Batalha\":{\"type\":\"List\",\"length\":2,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Batalha\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Nazaré\",\"time\":0}],\"time\":2},\"lastException\":{\"type\":\"Throwable\",\"value\":\"org.apache.spark.sql.AnalysisException: Table or view not found: JoinEventosGrouped; line 3 pos 13\\n\\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:47)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.org$apache$spark$sql$catalyst$analysis$Analyzer$ResolveRelations$$lookupTableFromCatalog(Analyzer.scala:731)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.resolveRelation(Analyzer.scala:683)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$$anonfun$apply$8.applyOrElse(Analyzer.scala:713)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$$anonfun$apply$8.applyOrElse(Analyzer.scala:706)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$apply$1.apply(AnalysisHelper.scala:90)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$apply$1.apply(AnalysisHelper.scala:90)\\n\\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:69)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:89)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:328)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:186)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:326)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:328)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:186)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:326)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:328)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:186)\\n\\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:326)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.apply(Analyzer.scala:706)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.apply(Analyzer.scala:652)\\n\\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:87)\\n\\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:84)\\n\\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\\n\\tat scala.collection.immutable.List.foldLeft(List.scala:84)\\n\\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:84)\\n\\tat org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:76)\\n\\tat scala.collection.immutable.List.foreach(List.scala:392)\\n\\tat org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:76)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$executeSameContext(Analyzer.scala:127)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:121)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:106)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:105)\\n\\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:105)\\n\\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:58)\\n\\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:56)\\n\\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:48)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020626.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:23)\\n\\tat $line82606020626.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:45)\\n\\tat $line82606020626.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:47)\\n\\tat $line82606020626.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:49)\\n\\tat $line82606020626.$read$$iw$$iw$$iw$$iw.<init>(<console>:51)\\n\\tat $line82606020626.$read$$iw$$iw$$iw.<init>(<console>:53)\\n\\tat $line82606020626.$read$$iw$$iw.<init>(<console>:55)\\n\\tat $line82606020626.$read$$iw.<init>(<console>:57)\\n\\tat $line82606020626.$read.<init>(<console>:59)\\n\\tat $line82606020626.$read$.<init>(<console>:63)\\n\\tat $line82606020626.$read$.<clinit>(<console>)\\n\\tat $line82606020626.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020626.$eval$.$print(<console>:6)\\n\\tat $line82606020626.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\nCaused by: org.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joineventosgrouped' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.ExternalCatalog$class.requireTableExists(ExternalCatalog.scala:48)\\n\\tat org.apache.spark.sql.catalyst.catalog.InMemoryCatalog.requireTableExists(InMemoryCatalog.scala:45)\\n\\tat org.apache.spark.sql.catalyst.catalog.InMemoryCatalog.getTable(InMemoryCatalog.scala:326)\\n\\tat org.apache.spark.sql.catalyst.catalog.ExternalCatalogWithListener.getTable(ExternalCatalogWithListener.scala:138)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.lookupRelation(SessionCatalog.scala:706)\\n\\tat org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.org$apache$spark$sql$catalyst$analysis$Analyzer$ResolveRelations$$lookupTableFromCatalog(Analyzer.scala:728)\\n\\t... 107 more\\n\",\"time\":1},\"Coimbra\":{\"type\":\"List\",\"length\":2,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Coimbra\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Travanca do Mondego\",\"time\":0}],\"time\":1},\"Funchal\":{\"type\":\"List\",\"length\":2,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Câmara de Lobos\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Funchal\",\"time\":0}],\"time\":11},\"Porto\":{\"type\":\"List\",\"length\":10,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Ermesinde\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Gaia\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Lousada\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Madalena\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Porto\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"União de Freguesias do Centro\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Valongo\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Valpedre - Penafiel\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Vila Meã\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Vila Nova de Gaia\",\"time\":0}],\"time\":2},\"dfWithArea\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(disk, memory, deserialized, 1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":8,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estrelas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hora_max_checkin\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"qtd_quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"area_localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":6},\"res17\":{\"type\":\"Unit\"},\"dfCleaned\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":13},\"initialTipologias\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":14,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"quantidade\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_maxima\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_minima\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_min_adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_min_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_camas_extra\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_camas_extra_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_bercos_extra\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}}]}},\"time\":2},\"InitialQuartosReservadosTable\":{\"type\":\"String\",\"value\":\"InitialQuartosReservados\",\"time\":0},\"Praia_da_Vitoria\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Praia da Vitória\",\"time\":0}],\"time\":1},\"Evora\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Evora\",\"time\":0}],\"time\":1},\"mindata_data_partida\":{\"type\":\"Object\",\"value\":\"2022-01-02\",\"time\":1},\"HotelTable\":{\"type\":\"String\",\"value\":\"Hotel\",\"time\":13},\"groupedData\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":2,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan_normalized\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":false},\"name\":{\"type\":null,\"value\":\"count\"},\"dataType\":{\"type\":null,\"value\":\"long\"}}}]}},\"time\":1},\"Sintra\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Sintra\",\"time\":0}],\"time\":12},\"mindata_data_chegada\":{\"type\":\"Object\",\"value\":\"2022-01-01\",\"time\":2},\"dfCategorized\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":21,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan_normalized\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":18},\"Acores\":{\"type\":\"List\",\"length\":6,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Açores\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Furnas S. Miguel - Açores\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Lagoa, Açores\",\"time\":1},{\"type\":\"java.lang.String\",\"value\":\"Ponta Delgada\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"São Vicente Ferreira, São Miguel - Açores\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Velas\",\"time\":0}],\"time\":7},\"Alcobaca\":{\"type\":\"List\",\"length\":3,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Alcanena\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Alcobaça\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"São Martinho do Porto\",\"time\":0}],\"time\":1},\"initialQuartosReservados\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":17,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}}]}},\"time\":2},\"minEndDate\":{\"type\":\"Object\",\"value\":\"2022-06-11\",\"time\":2},\"adddif_data_chegada_data_reserva\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":11},\"Alijo\":{\"type\":\"List\",\"length\":2,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Alijó\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Pinhão - Alijó\",\"time\":0}],\"time\":1},\"res19\":{\"type\":\"Unit\"},\"csvEventos\":{\"type\":\"String\",\"value\":\"/data/tp/Eventos.csv\",\"time\":1},\"sc\":{\"ref\":\"spark.sparkContext\"},\"mindata_reserva\":{\"type\":\"Object\",\"value\":\"2022-01-01 10:17:09.29\",\"time\":2},\"csvTipologias\":{\"type\":\"String\",\"value\":\"/data/tp/Tipologias.csv\",\"time\":1},\"initalHotel\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":8,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estrelas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hora_max_checkin\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"qtd_quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"area_localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":1},\"Lagos\":{\"type\":\"List\",\"length\":3,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Lagos\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Portimão\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Sagres\",\"time\":0}],\"time\":1},\"dfTrimmed\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":20,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}}]}},\"time\":1},\"res13\":{\"ref\":\"df\"},\"maxStartDate\":{\"type\":\"Object\",\"value\":\"2023-11-05\",\"time\":1},\"Carnaxide\":{\"type\":\"List\",\"length\":4,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Almada\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Carnaxide\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Charneca de Caparica\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Lisboa\",\"time\":0}],\"time\":1},\"res22\":{\"type\":\"Unit\"},\"minStartDate\":{\"type\":\"Object\",\"value\":\"2022-06-01\",\"time\":1},\"InitialHotelTable\":{\"type\":\"String\",\"value\":\"InitialHotel\",\"time\":1},\"InitialTipologiasTable\":{\"type\":\"String\",\"value\":\"InitialTipologias\",\"time\":1},\"newHotel\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":8,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estrelas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"idade_max_bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hora_max_checkin\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"qtd_quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"area_localizacao\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":0},\"csvMeteorologia\":{\"type\":\"String\",\"value\":\"/data/tp/Meteorologia.csv\",\"time\":5},\"res16\":{\"type\":\"Unit\"},\"newTipologias\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":11,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"quantidade\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_maxima\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_camas_extra\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_camas_extra_criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"capacidade_max_bercos_extra\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}}]}},\"time\":12},\"Guimaraes\":{\"type\":\"List\",\"length\":1,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Guimarães\",\"time\":0}],\"time\":9},\"TipologiasTable\":{\"type\":\"String\",\"value\":\"Tipologias\",\"time\":1},\"smallReservationsHotels\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":2,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":false},\"name\":{\"type\":null,\"value\":\"count\"},\"dataType\":{\"type\":null,\"value\":\"long\"}}}]}},\"time\":1},\"getAreaUDF\":{\"type\":\"org.apache.spark.sql.expressions.UserDefinedFunction\",\"value\":{\"inputTypes\":{\"type\":\"Option[Seq[org.apache.spark.sql.types.DataType]]\",\"value\":\"Some(List(StringType))\",\"time\":3},\"dataType\":{\"type\":\"org.apache.spark.sql.types.DataType\",\"value\":\"StringType\",\"time\":2},\"f\":{\"type\":\"AnyRef\",\"value\":\"<function1>\",\"time\":1}},\"time\":41},\"maxdata_data_partida\":{\"type\":\"Object\",\"value\":\"2024-05-31\",\"time\":3},\"csvQuartosReservados\":{\"type\":\"String\",\"value\":\"/data/tp/QuartosReservados.csv\",\"time\":2},\"maxdata_data_chegada\":{\"type\":\"Object\",\"value\":\"2024-04-05\",\"time\":1},\"csvFacilities\":{\"type\":\"String\",\"value\":\"/data/tp/Facilities.csv\",\"time\":1},\"EventosTable\":{\"type\":\"String\",\"value\":\"Eventos\",\"time\":0},\"res21\":{\"type\":\"Unit\"},\"dfNormalized\":{\"type\":\"org.apache.spark.sql.Dataset\",\"value\":{\"getStorageLevel()\":{\"type\":\"org.apache.spark.storage.StorageLevel\",\"value\":\"StorageLevel(1 replicas)\"},\"schema()\":{\"type\":\"org.apache.spark.sql.types.StructType\",\"length\":21,\"value\":[{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"hotel_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Reserve_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"pais\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"estado_reserva\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"room_ID\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"tipo_quarto\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_reserva\"},\"dataType\":{\"type\":null,\"value\":\"timestamp\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"num_noites\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"Quantidade de quartos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"adultos\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"criancas\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"bebes\"},\"dataType\":{\"type\":null,\"value\":\"integer\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_euros\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_chegada\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"data_partida\"},\"dataType\":{\"type\":null,\"value\":\"date\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_adulto\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"preco_noite_ocupacao\"},\"dataType\":{\"type\":null,\"value\":\"double\"}}},{\"type\":\"org.apache.spark.sql.types.StructField\",\"value\":{\"nullable\":{\"type\":null,\"value\":true},\"name\":{\"type\":null,\"value\":\"rate_plan_normalized\"},\"dataType\":{\"type\":null,\"value\":\"string\"}}}]}},\"time\":9},\"Viana_do_Castelo\":{\"type\":\"List\",\"length\":4,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Seixas - Caminha\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Valença, Viana do Castelo\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Viana do Castelo\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Vila Praia de Âncora\",\"time\":0}],\"time\":1},\"Carcavelos\":{\"type\":\"List\",\"length\":3,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Carcavelos\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Cascais\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Estoril\",\"time\":0}],\"time\":1},\"maxdata_reserva\":{\"type\":\"Object\",\"value\":\"2023-04-18 16:33:15.437\",\"time\":10},\"Chaves\":{\"type\":\"List\",\"length\":4,\"value\":[{\"type\":\"java.lang.String\",\"value\":\"Chaves\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Lamego\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Mesão Frio\",\"time\":0},{\"type\":\"java.lang.String\",\"value\":\"Valdigem - Lamego\",\"time\":0}],\"time\":1}},\"errors\":[]}\n---ztools-scala---\n---ztools-sql---\n{\n  \"tables\" : [ {\n    \"name\" : \"jointipologia\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"jointipologiaandhotel\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joinferiados\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joinferiadosgrouped\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joineventos\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joineventosgrouped\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joinmeteotemp\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"joinmeteogrouped\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"finaldataset\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ ],\n    \"error\" : \"ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\"\n  }, {\n    \"name\" : \"eventos\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"Location\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Event\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"start_Date\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"end_date\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"facilities\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"Hotel ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Facility ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Nome\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"feriados\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"date\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"day\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"dayOfWeek\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"month\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"trimester\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"year\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"is_holiday\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"portugueseWeekName\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"hotel\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"localizacao\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"estrelas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"idade_max_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"idade_max_bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"hora_max_checkin\",\n      \"columnType\" : \"timestamp\",\n      \"description\" : null\n    }, {\n      \"name\" : \"qtd_quartos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"area_localizacao\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"initialhotel\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"localizacao\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"estrelas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"idade_max_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"idade_max_bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"hora_max_checkin\",\n      \"columnType\" : \"timestamp\",\n      \"description\" : null\n    }, {\n      \"name\" : \"qtd_quartos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"area_localizacao\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"initialquartosreservados\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Reserve_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"pais\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"estado_reserva\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"room_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tipo_quarto\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"rate_plan\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_reserva\",\n      \"columnType\" : \"timestamp\",\n      \"description\" : null\n    }, {\n      \"name\" : \"num_noites\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Quantidade de quartos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"ocupacao\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"adultos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"preco_euros\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_chegada\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_partida\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"initialtipologias\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"room_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tipo_quarto\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"quantidade\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_maxima\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_minima\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_adultos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_min_adultos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_min_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_camas_extra\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_camas_extra_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_bercos_extra\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"meteorologia\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"date\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tavg\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tmin\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tmax\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"prcp\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"wdir\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"wspd\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"wpgt\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"pres\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"city\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"quartosreservados\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"rate_plan\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Reserve_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"pais\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"estado_reserva\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"room_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tipo_quarto\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_reserva\",\n      \"columnType\" : \"timestamp\",\n      \"description\" : null\n    }, {\n      \"name\" : \"num_noites\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"Quantidade de quartos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"ocupacao\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"adultos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"preco_euros\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_chegada\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"data_partida\",\n      \"columnType\" : \"date\",\n      \"description\" : null\n    }, {\n      \"name\" : \"preco_noite\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"preco_noite_adulto\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"preco_noite_ocupacao\",\n      \"columnType\" : \"double\",\n      \"description\" : null\n    }, {\n      \"name\" : \"dif_data_chegada_data_reserva\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  }, {\n    \"name\" : \"tipologias\",\n    \"databaseName\" : \"\",\n    \"columns\" : [ {\n      \"name\" : \"hotel_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"room_ID\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"tipo_quarto\",\n      \"columnType\" : \"string\",\n      \"description\" : null\n    }, {\n      \"name\" : \"quantidade\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_maxima\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_adultos\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_bebes\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_camas_extra\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_camas_extra_criancas\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    }, {\n      \"name\" : \"capacidade_max_bercos_extra\",\n      \"columnType\" : \"int\",\n      \"description\" : null\n    } ],\n    \"error\" : null\n  } ],\n  \"errors\" : [ \"DESCRIBE TABLE `jointipologia`\\nNoSuchTableException: Table or view 'jointipologia' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'jointipologia' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for jointipologia\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `jointipologiaandhotel`\\nNoSuchTableException: Table or view 'jointipologiaandhotel' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'jointipologiaandhotel' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for jointipologiaandhotel\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joinferiados`\\nNoSuchTableException: Table or view 'joinferiados' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joinferiados' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joinferiados\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joinferiadosgrouped`\\nNoSuchTableException: Table or view 'joinferiadosgrouped' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joinferiadosgrouped' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joinferiadosgrouped\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joineventos`\\nNoSuchTableException: Table or view 'joineventos' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joineventos' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joineventos\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joineventosgrouped`\\nNoSuchTableException: Table or view 'joineventosgrouped' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joineventosgrouped' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joineventosgrouped\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joinmeteotemp`\\nNoSuchTableException: Table or view 'joinmeteotemp' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joinmeteotemp' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joinmeteotemp\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `joinmeteogrouped`\\nNoSuchTableException: Table or view 'joinmeteogrouped' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'joinmeteogrouped' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for joinmeteogrouped\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"DESCRIBE TABLE `finaldataset`\\nNoSuchTableException: Table or view 'finaldataset' not found in database 'default';\\norg.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'finaldataset' not found in database 'default';\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.requireTableExists(SessionCatalog.scala:185)\\n\\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.getTableMetadata(SessionCatalog.scala:433)\\n\\tat org.apache.spark.sql.execution.command.DescribeTableCommand.run(tables.scala:574)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\\n\\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:79)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$6.apply(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\\n\\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:80)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:127)\\n\\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\\n\\tat org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\\n\\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:194)\\n\\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\\n\\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:642)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$performSql$1(<console>:1074)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1122)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\", \"Error list columns for finaldataset\\nClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\njava.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.apache.spark.sql.Row;\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.$line82606020647$$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$processTable$1(<console>:1124)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1140)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anonfun$calcZtoolsSqlSchemas$1$3.apply(<console>:1139)\\n\\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\\n\\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.calcZtoolsSqlSchemas$1(<console>:1139)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.ztoolsPrintResult$1(<console>:1149)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1155)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1162)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1164)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1166)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1168)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw$$iw.<init>(<console>:1170)\\n\\tat $line82606020647.$read$$iw$$iw$$iw$$iw.<init>(<console>:1172)\\n\\tat $line82606020647.$read$$iw$$iw$$iw.<init>(<console>:1174)\\n\\tat $line82606020647.$read$$iw$$iw.<init>(<console>:1176)\\n\\tat $line82606020647.$read$$iw.<init>(<console>:1178)\\n\\tat $line82606020647.$read.<init>(<console>:1180)\\n\\tat $line82606020647.$read$.<init>(<console>:1184)\\n\\tat $line82606020647.$read$.<clinit>(<console>)\\n\\tat $line82606020647.$eval$.$print$lzycompute(<console>:7)\\n\\tat $line82606020647.$eval$.$print(<console>:6)\\n\\tat $line82606020647.$eval.$print(<console>)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\\n\\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\\n\\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\\n\\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\\n\\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\\n\\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\\n\\tat org.apache.zeppelin.spark.SparkScala211Interpreter.scalaInterpret(SparkScala211Interpreter.scala:129)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:120)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter$$anonfun$_interpret$1$1.apply(BaseSparkScalaInterpreter.scala:111)\\n\\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\\n\\tat scala.Console$.withOut(Console.scala:65)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter._interpret$1(BaseSparkScalaInterpreter.scala:111)\\n\\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.interpret(BaseSparkScalaInterpreter.scala:146)\\n\\tat org.apache.zeppelin.spark.SparkInterpreter.internalInterpret(SparkInterpreter.java:183)\\n\\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:47)\\n\\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:110)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:852)\\n\\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:744)\\n\\tat org.apache.zeppelin.scheduler.Job.run(Job.java:172)\\n\\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:132)\\n\\tat org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:42)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\" ],"
     },
     {
      "type": "HTML",
      "data": "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 102400 bytes. Learn more about <strong>ZEPPELIN_INTERPRETER_OUTPUT_LIMIT</strong></div>"
     }
    ]
   },
   "dateFinished": "2023-05-18 22:58:36.084"
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {}
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "// FILE #2",
   "id": "",
   "dateCreated": "2023-05-08 15:40:50.806",
   "config": {},
   "dateStarted": "2023-05-18 22:58:36.170",
   "dateUpdated": "2023-05-18 22:58:47.838",
   "dateFinished": "2023-05-18 22:58:47.838",
   "results": {
    "code": "SUCCESS",
    "msg": []
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "import org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.functions._\nimport spark.implicits._\n\nval joinFolder = \"/data/joins\"\nval saveJoins = false\n\ndef saveDataFrame(df: DataFrame, name: String): Unit = {\n    df.coalesce(1) // Print into a single file\n            .write\n            .mode(\"overwrite\")\n            .option(\"delimiter\", \";\")\n            .option(\"header\", true) // Maintain Headers\n            .csv(s\"$joinFolder/$name\") // Write to csv\n}\nval initialCount = spark.sql(\"SELECT DISTINCT * FROM QuartosReservados\")\ninitialCount.show(100)\nprintln(initialCount.count())",
   "id": "",
   "dateCreated": "2023-04-30 19:59:44.804",
   "config": {
    "editorHide": false
   },
   "dateStarted": "2023-05-18 22:58:36.399",
   "dateUpdated": "2023-05-18 22:59:09.283",
   "dateFinished": "2023-05-18 22:59:09.283",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+--------------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+------------------+------------------+--------------------+-----------------------------+\n|           rate_plan|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|         tipo_quarto|        data_reserva|num_noites|Quantidade de quartos|ocupacao|adultos|criancas|bebes|   preco_euros|data_chegada|data_partida|       preco_noite|preco_noite_adulto|preco_noite_ocupacao|dif_data_chegada_data_reserva|\n+--------------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+------------------+------------------+--------------------+-----------------------------+\n|      non-refundable|     514|   1614599|   Reino Unido|     Cancelado|   2494|           Pool Room|2022-10-24 19:54:...|         2|                    1|       1|      1|       0|    0|         270.0|  2022-10-28|  2022-10-30|             135.0|             135.0|               135.0|                            4|\n|             website|     556|   1614582|      Portugal|      Pendente|   2831|Double Room Standard|2022-10-24 19:28:...|         1|                    1|       1|      1|       0|    0|          57.0|  2022-10-29|  2022-10-30|              57.0|              57.0|                57.0|                            5|\n|              normal|     319|   1722269|      Portugal|     Cancelado|   2264|            Standard|2023-04-17 09:19:...|         1|                    2|       1|      2|       0|    0|         108.0|  2023-05-02|  2023-05-03|             108.0|              54.0|               108.0|                           15|\n|                 bar|     492|   1688266|      Portugal|     Cancelado|   2322|Quarto twin com W...|2023-03-01 14:05:...|         4|                    1|       1|      1|       0|    0|         240.0|  2023-04-03|  2023-04-07|              60.0|              60.0|                60.0|                           33|\n|                 bar|     539|   1424842|      Portugal|     Cancelado|   2543|Quarto Dpl. Superior|2022-01-21 12:17:...|         2|                    1|       1|      1|       0|    0|         140.0|  2022-06-17|  2022-06-19|              70.0|              70.0|                70.0|                          147|\n|      non-refundable|     537|   1662352|      Portugal|     Registado|   2722|    Alojamento Crato|2023-01-23 14:17:...|         2|                    1|       2|      2|       0|    0|258.9999999999|  2023-02-10|  2023-02-12|   129.49999999995|   64.749999999975|     64.749999999975|                           18|\n|             website|     556|   1568924|      Portugal|     Registado|   2833|Triple Room Standard|2022-08-15 15:34:...|         4|                    1|       3|      3|       0|    0|         323.0|  2022-08-22|  2022-08-26|             80.75|26.916666666666668|  26.916666666666668|                            7|\n|                  4n|     395|   1537262|       Espanha|     Registado|   1828|             Estúdio|2022-07-07 07:44:...|         4|                    1|       2|      2|       0|    0|         414.0|  2022-07-16|  2022-07-20|             103.5|             51.75|               51.75|                            9|\n|      non-refundable|     400|   1586271|       Holanda|     Registado|   1864|          DBL / TWN |2022-09-10 12:10:...|         5|                    1|       2|      2|       0|    0|        366.08|  2022-10-21|  2022-10-26|            73.216|            36.608|              36.608|                           41|\n|                  4n|     560|   1434008|        França|     Registado|   2869|    Estudio Familiar|2022-02-10 20:37:...|         4|                    1|       3|      3|       0|    0|         274.5|  2022-02-26|  2022-03-02|            68.625|            22.875|              22.875|                           16|\n|             website|     535|   1472907|      Portugal|     Registado|   2524|         Quarto Twin|2022-04-12 13:25:...|         2|                    1|       2|      2|       0|    0|         135.0|  2022-04-25|  2022-04-27|              67.5|             33.75|               33.75|                           13|\n|               promo|     332|   1594933|      Portugal|     Cancelado|   1472|      Apartamento T1|2022-09-23 18:48:...|         2|                    1|       3|      3|       0|    0|        148.18|  2022-11-04|  2022-11-06|             74.09| 24.69666666666667|   24.69666666666667|                           42|\n|      non-refundable|     311|   1476460|         Suiça|  NãoRegistado|   1407|DB - Quarto Duplo...|2022-04-18 14:16:...|         1|                    1|       2|      2|       0|    0|          88.0|  2022-06-10|  2022-06-11|              88.0|              44.0|                44.0|                           53|\n|      non-refundable|     514|   1513658|Estados Unidos|    Modificada|   2425|     Eco Garden Room|2022-06-05 22:44:...|         2|                    1|       1|      1|       0|    0|         243.0|  2022-06-21|  2022-06-23|             121.5|             121.5|               121.5|                           16|\n|        mr main rate|     311|   1672635|      Portugal|     Registado|   1407|DB - Quarto Duplo...|2023-02-06 14:33:...|         1|                    1|       1|      1|       0|    0|         57.33|  2023-02-11|  2023-02-12|             57.33|             57.33|               57.33|                            5|\n|              normal|     314|   1684654|       Bélgica|     Registado|   1387|                Twin|2023-02-24 14:38:...|         5|                    1|       2|      2|       0|    0|         500.0|  2023-06-12|  2023-06-17|             100.0|              50.0|                50.0|                          108|\n|              normal|     444|   1544725|      Portugal|     Cancelado|   2075|        Suite Junior|2022-07-17 18:19:...|         2|                    1|       2|      2|       0|    0|         400.0|  2022-08-12|  2022-08-14|             200.0|             100.0|               100.0|                           26|\n|tarifa com pequen...|     403|   1536220|       Estónia|     Registado|   2740|Quarto Superior A...|2022-07-05 19:34:...|         1|                    1|       2|      2|       0|    0|          81.0|  2022-07-06|  2022-07-07|              81.0|              40.5|                40.5|                            1|\n|              normal|     444|   1713456|        Brasil|     Registado|   2384|                Twin|2023-04-05 03:08:...|         1|                    1|       2|      2|       0|    0|         120.0|  2023-05-08|  2023-05-09|             120.0|              60.0|                60.0|                           33|\n|             website|     482|   1475426|      Portugal|     Cancelado|   2285|      Apartamento T1|2022-04-16 15:51:...|         3|                    1|       4|      4|       0|    0|         389.5|  2022-06-09|  2022-06-12|129.83333333333334|32.458333333333336|  32.458333333333336|                           54|\n|        main rate bb|     311|   1656273|      Portugal|     Registado|   1407|DB - Quarto Duplo...|2023-01-14 00:32:...|         1|                    1|       1|      1|       0|    0|         73.01|  2023-01-18|  2023-01-19|             73.01|             73.01|               73.01|                            4|\n|      non-refundable|     378|   1511862|       Espanha|     Registado|   1738|Duplo ou Twin Sta...|2022-06-03 11:01:...|         6|                    2|       2|      4|       0|    0|        1149.6|  2022-08-22|  2022-08-28|             191.6|              47.9|                95.8|                           80|\n|              normal|     391|   1654880|       Espanha|     Registado|   2742|            Superior|2023-01-11 20:26:...|         1|                    1|       3|      3|       0|    0|         105.0|  2023-01-14|  2023-01-15|             105.0|              35.0|                35.0|                            3|\n|      non-refundable|     311|   1495314|        Itália|     Registado|   1407|DB - Quarto Duplo...|2022-05-13 11:19:...|         1|                    1|       2|      2|       0|    0|          73.0|  2022-05-23|  2022-05-24|              73.0|              36.5|                36.5|                           10|\n|             website|     556|   1629350|      Portugal|      Pendente|   2831|Double Room Standard|2022-11-21 20:42:...|         1|                    1|       2|      2|       0|    0|          68.4|  2022-11-26|  2022-11-27|              68.4|              34.2|                34.2|                            5|\n|             website|     482|   1616893|      Portugal|     Registado|   2285|      Apartamento T1|2022-10-28 22:42:...|         1|                    1|       1|      1|       0|    0|         42.75|  2022-10-28|  2022-10-29|             42.75|             42.75|               42.75|                            0|\n|              normal|     314|   1438293|       Espanha|     Registado|   1388|              Triplo|2022-02-17 23:11:...|         1|                    1|       3|      3|       0|    0|          88.0|  2022-02-26|  2022-02-27|              88.0|29.333333333333332|  29.333333333333332|                            9|\n|             website|     556|   1592275|      Portugal|      Pendente|   2831|Double Room Standard|2022-09-19 19:03:...|         1|                    1|       1|      1|       0|    0|         38.25|  2022-09-22|  2022-09-23|             38.25|             38.25|               38.25|                            3|\n|        mr main rate|     311|   1635949|   Reino Unido|     Registado|   1407|DB - Quarto Duplo...|2022-12-04 15:42:...|         1|                    1|       2|      2|       0|    0|         57.33|  2022-12-04|  2022-12-05|             57.33|            28.665|              28.665|                            0|\n|             website|     556|   1625044|      Portugal|     Registado|   2831|Double Room Standard|2022-11-13 18:44:...|         1|                    1|       2|      2|       0|    0|          68.4|  2022-11-19|  2022-11-20|              68.4|              34.2|                34.2|                            6|\n|        mr main rate|     310|   1697542|      Portugal|     Registado|   1424|Quarto Twin Standard|2023-03-14 18:16:...|         3|                    1|       1|      1|       0|    0|        169.65|  2023-04-20|  2023-04-23|56.550000000000004|56.550000000000004|  56.550000000000004|                           37|\n|              normal|     314|   1723064|      Alemanha|     Registado|   1387|                Twin|2023-04-17 22:33:...|         2|                    1|       2|      2|       0|    0|         200.0|  2023-04-18|  2023-04-20|             100.0|              50.0|                50.0|                            1|\n|      non-refundable|     556|   1504926|      Portugal|      Pendente|   2847|Double Room w/ext...|2022-05-25 18:09:...|         1|                    1|       1|      1|       0|    0|         33.54|  2022-05-25|  2022-05-26|             33.54|             33.54|               33.54|                            0|\n|                 bar|     280|   1480070|       Espanha|     Cancelado|   2561|QUARTO DUPLO STAN...|2022-04-23 16:35:...|         4|                    1|       1|      1|       0|    0|         430.0|  2022-06-28|  2022-07-02|             107.5|             107.5|               107.5|                           66|\n|              normal|     415|   1678998|       Espanha|     Registado|   1940|               Duplo|2023-02-15 16:57:...|         4|                    1|       2|      2|       0|    0|         468.0|  2023-04-11|  2023-04-15|             117.0|              58.5|                58.5|                           55|\n|      non-refundable|     310|   1576474|       Espanha|     Registado|   2870|Quarto Duplo Supe...|2022-08-26 17:25:...|         1|                    1|       1|      1|       2|    0|         76.95|  2022-09-09|  2022-09-10|             76.95|             76.95|               76.95|                           14|\n|            duplo bb|     311|   1495502|      Portugal|     Registado|   1407|DB - Quarto Duplo...|2022-05-13 15:48:...|         1|                    1|       1|      1|       0|    0|          81.5|  2022-05-25|  2022-05-26|              81.5|              81.5|                81.5|                           12|\n|      non-refundable|     311|   1530600|       Bélgica|     Registado|   1946|DBT - Quarto Dupl...|2022-06-28 10:14:...|         1|                    1|       2|      2|       0|    0|         108.0|  2022-07-03|  2022-07-04|             108.0|              54.0|                54.0|                            5|\n|      non-refundable|     322|   1695453|       Espanha|     Registado|   2284|              Triplo|2023-03-11 21:37:...|         1|                    1|       3|      3|       0|    0|         100.0|  2023-04-03|  2023-04-04|             100.0|33.333333333333336|  33.333333333333336|                           23|\n|        mr main rate|     309|   1637043|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|2022-12-06 15:19:...|         1|                    1|       2|      2|       0|    0|         39.69|  2022-12-09|  2022-12-10|             39.69|            19.845|              19.845|                            3|\n|        main rate bb|     309|   1680299|      Portugal|     Registado|   1372|Quarto Duplo Stan...|2023-02-17 15:33:...|         3|                    1|       2|      2|       0|    0|      218.3955|  2023-06-01|  2023-06-04|           72.7985|          36.39925|            36.39925|                          104|\n|clg flexible sin ...|     483|   1439941|      Portugal|     Cancelado|   2769|Tryp Triple  Room...|2022-02-20 23:01:...|         2|                    1|       3|      3|       1|    0|         347.0|  2022-02-27|  2022-03-01|             173.5|57.833333333333336|  57.833333333333336|                            7|\n|              normal|     285|   1427322|     Dinamarca|     Registado|   1289|     SUPERIOR STUDIO|2022-01-27 16:18:...|         3|                    1|       2|      2|       0|    0|         240.0|  2022-06-09|  2022-06-12|              80.0|              40.0|                40.0|                          133|\n|             website|     535|   1683954|      Portugal|      Pendente|   2524|         Quarto Twin|2023-02-23 14:05:...|         2|                    1|       2|      2|       0|    0|         180.0|  2023-07-14|  2023-07-16|              90.0|              45.0|                45.0|                          141|\n|             website|     535|   1431221|      Portugal|     Cancelado|   2524|         Quarto Twin|2022-02-05 12:21:...|         2|                    1|       2|      2|       0|    0|         138.5|  2022-02-11|  2022-02-13|             69.25|            34.625|              34.625|                            6|\n|             website|     556|   1590143|      Portugal|      Pendente|   2831|Double Room Standard|2022-09-16 08:35:...|         1|                    1|       2|      2|       0|    0|          68.4|  2022-09-17|  2022-09-18|              68.4|              34.2|                34.2|                            1|\n|      non-refundable|     319|   1594443|      Portugal|     Registado|   2264|            Standard|2022-09-23 01:00:...|         2|                    1|       1|      1|       0|    0|          83.0|  2022-10-28|  2022-10-30|              41.5|              41.5|                41.5|                           35|\n|              normal|     443|   1588194|   Reino Unido|     Registado|   2061|   Clássico Standard|2022-09-13 12:30:...|         1|                    1|       1|      1|       0|    0|         190.0|  2022-09-13|  2022-09-14|             190.0|             190.0|               190.0|                            0|\n|              normal|     444|   1474201|      Alemanha|     Registado|   2386| Twin vista  mar ...|2022-04-14 11:48:...|         2|                    1|       2|      2|       0|    0|         180.0|  2022-05-10|  2022-05-12|              90.0|              45.0|                45.0|                           26|\n|                 bar|     358|   1718787|Estados Unidos|     Registado|   1745|Suite Deluxe com ...|2023-04-12 15:03:...|         6|                    1|       2|      2|       0|    0|        2022.0|  2023-09-15|  2023-09-21|             337.0|             168.5|               168.5|                          156|\n|             website|     535|   1649283|      Portugal|     Registado|   2783|            Bungalow|2023-01-03 11:53:...|         1|                    1|       2|      2|       0|    0|          72.0|  2023-01-03|  2023-01-04|              72.0|              36.0|                36.0|                            0|\n|                 bar|     503|   1570447|      Portugal|     Registado|   2785|Duplo Economico T...|2022-08-17 16:36:...|         2|                    1|       2|      2|       0|    0|         160.0|  2022-08-19|  2022-08-21|              80.0|              40.0|                40.0|                            2|\n|            avionics|     179|   1667723|        Itália|     Registado|    630|      Duplo  Comfort|2023-01-30 10:40:...|         5|                    1|       1|      1|       0|    0|         430.0|  2023-03-01|  2023-03-06|              86.0|              86.0|                86.0|                           30|\n|              normal|     238|   1571261|         Suiça|  NãoRegistado|    935|       Standard Room|2022-08-18 18:59:...|         2|                    1|       2|      2|       0|    0|         204.0|  2022-08-19|  2022-08-21|             102.0|              51.0|                51.0|                            1|\n|      non-refundable|     319|   1574100|       Espanha|     Registado|   2877|     Quarto Familiar|2022-08-23 13:02:...|         1|                    1|       2|      2|       0|    1|         104.5|  2022-08-28|  2022-08-29|             104.5|             52.25|               52.25|                            5|\n|             website|     535|   1597863|      Portugal|     Registado|   2523|        Quarto Duplo|2022-09-28 10:09:...|         3|                    1|       2|      2|       0|    0|         175.5|  2022-10-11|  2022-10-14|              58.5|             29.25|               29.25|                           13|\n|                 bar|     358|   1524622|Estados Unidos|     Registado|   1769|Suite com Varanda...|2022-06-20 01:42:...|         2|                    1|       2|      2|       0|    0|         556.0|  2022-09-08|  2022-09-10|             278.0|             139.0|               139.0|                           80|\n|             website|     482|   1537371|        França|     Registado|   2286|      Apartamento T2|2022-07-07 10:37:...|         5|                    1|       4|      4|       0|    0|         332.5|  2022-10-13|  2022-10-18|              66.5|            16.625|              16.625|                           98|\n|              normal|     179|   1670103|       Espanha|     Registado|    629|      Single Comfort|2023-02-02 18:00:...|         3|                    1|       1|      1|       0|    0|       239.139|  2023-02-25|  2023-02-28| 79.71300000000001| 79.71300000000001|   79.71300000000001|                           23|\n|             website|     535|   1629281|      Portugal|      Pendente|   2526|     Quarto Familiar|2022-11-21 18:48:...|         1|                    1|       2|      2|       0|    0|          95.0|  2022-12-03|  2022-12-04|              95.0|              47.5|                47.5|                           12|\n|                 bar|     445|   1502553|      Portugal|     Registado|   2140|         Deluxe Room|2022-05-22 20:01:...|         5|                    1|       2|      2|       0|    0|        1300.0|  2022-07-03|  2022-07-08|             260.0|             130.0|               130.0|                           42|\n|        main rate bb|     310|   1630161|      Portugal|  NãoRegistado|   1673|Quarto Duplo Supe...|2022-11-23 12:51:...|         1|                    1|       1|      1|       0|    0|         62.23|  2022-11-23|  2022-11-24|             62.23|             62.23|               62.23|                            0|\n|               promo|     311|   1460557|       Espanha|     Registado|   1407|DB - Quarto Duplo...|2022-03-28 07:11:...|         1|                    1|       1|      1|       0|    0|          49.5|  2022-04-03|  2022-04-04|              49.5|              49.5|                49.5|                            6|\n|              normal|     443|   1707645|        França|     Registado|   2061|   Clássico Standard|2023-03-28 18:02:...|         1|                    1|       2|      2|       0|    0|         180.0|  2023-05-22|  2023-05-23|             180.0|              90.0|                90.0|                           55|\n|      non-refundable|     309|   1476344|       Espanha|     Registado|   1372|Quarto Duplo Stan...|2022-04-18 11:08:...|         1|                    1|       1|      1|       0|    0|          43.0|  2022-04-19|  2022-04-20|              43.0|              43.0|                43.0|                            1|\n|      non-refundable|     556|   1451902|      Portugal|      Pendente|   2831|Double Room Standard|2022-03-14 18:49:...|         1|                    1|       2|      2|       0|    0|          83.7|  2022-03-19|  2022-03-20|              83.7|             41.85|               41.85|                            5|\n|         tarifa site|     304|   1693496|      Portugal|     Registado|   1352|  104 - Quarto Duplo|2023-03-08 19:34:...|         1|                    1|       1|      1|       0|    0|         49.68|  2023-03-13|  2023-03-14|             49.68|             49.68|               49.68|                            5|\n|melhor preo garan...|      49|   1615041|      Portugal|     Registado|     92|        Quarto Duplo|2022-10-25 15:44:...|         1|                    1|       2|      2|       0|    0|         100.0|  2022-11-01|  2022-11-02|             100.0|              50.0|                50.0|                            7|\n|         tarifa site|     304|   1593283|      Alemanha|     Cancelado|   1348|         201 - Suite|2022-09-21 11:01:...|         1|                    1|       2|      2|       0|    0|        102.12|  2022-10-05|  2022-10-06|            102.12|             51.06|               51.06|                           14|\n|             website|     556|   1589205|      Portugal|      Pendente|   2831|Double Room Standard|2022-09-14 18:06:...|         1|                    1|       1|      1|       0|    0|          47.5|  2022-09-14|  2022-09-15|              47.5|              47.5|                47.5|                            0|\n|      non-refundable|     482|   1544052|        França|     Registado|   2285|      Apartamento T1|2022-07-16 15:50:...|         4|                    1|       4|      4|       0|    0|        777.48|  2022-08-23|  2022-08-27|            194.37|           48.5925|             48.5925|                           38|\n|      non-refundable|     514|   1706531|       Holanda|     Registado|   2494|           Pool Room|2023-03-27 10:48:...|         2|                    1|       1|      1|       0|    0|         288.0|  2023-05-13|  2023-05-15|             144.0|             144.0|               144.0|                           47|\n|   premium room only|     311|   1524950|        Itália|     Registado|   2159|SUT - Quarto Premium|2022-06-20 14:06:...|         1|                    1|       1|      1|       0|    0|         104.0|  2022-06-24|  2022-06-25|             104.0|             104.0|               104.0|                            4|\n|             website|     482|   1603784|      Portugal|     Cancelado|   2285|      Apartamento T1|2022-10-07 09:46:...|         1|                    1|       2|      2|       0|    0|         73.15|  2022-10-07|  2022-10-08|             73.15|            36.575|              36.575|                            0|\n|      non-refundable|     378|   1475280|       Bélgica|     Registado|   1738|Duplo ou Twin Sta...|2022-04-16 10:16:...|         1|                    1|       1|      1|       0|    0|          69.7|  2022-04-28|  2022-04-29|              69.7|              69.7|                69.7|                           12|\n|             website|     482|   1560702|      Portugal|     Registado|   2286|      Apartamento T2|2022-08-03 16:16:...|         1|                    1|       5|      5|       0|    0|         294.5|  2022-08-06|  2022-08-07|             294.5|              58.9|                58.9|                            3|\n|              normal|     404|   1500155|        França|     Registado|   1936|              Single|2022-05-19 14:44:...|         2|                    1|       2|      2|       0|    0|         180.0|  2022-06-08|  2022-06-10|              90.0|              45.0|                45.0|                           20|\n|        mr main rate|     310|   1643891|      Portugal|      Pendente|   1673|Quarto Duplo Supe...|2022-12-21 16:26:...|         4|                    1|       1|      1|       0|    0|        198.45|  2022-12-26|  2022-12-30|           49.6125|           49.6125|             49.6125|                            5|\n|        main rate bb|     310|   1524740|      Portugal|    Modificada|   1424|Quarto Twin Standard|2022-06-20 09:55:...|         1|                    1|       2|      2|       0|    0|          71.1|  2022-06-21|  2022-06-22|              71.1|             35.55|               35.55|                            1|\n|              normal|     444|   1534953|      Portugal|     Registado|   2073|              Duplo |2022-07-04 11:15:...|         1|                    2|       2|      4|       0|    0|         320.0|  2022-08-06|  2022-08-07|             320.0|              80.0|               160.0|                           33|\n|      non-refundable|     310|   1616049|      Portugal|    Modificada|   1395|Quarto Duplo Stan...|2022-10-27 14:01:...|         1|                    1|       2|      2|       0|    0|          44.0|  2022-11-27|  2022-11-28|              44.0|              22.0|                22.0|                           31|\n|             website|     535|   1602184|      Portugal|     Registado|   2524|         Quarto Twin|2022-10-04 17:39:...|         1|                    1|       2|      2|       0|    0|          72.0|  2022-10-15|  2022-10-16|              72.0|              36.0|                36.0|                           11|\n|             website|     556|   1482887|      Portugal|      Pendente|   2831|Double Room Standard|2022-04-27 12:51:...|         2|                    1|       1|      1|       0|    0|          85.5|  2022-04-27|  2022-04-29|             42.75|             42.75|               42.75|                            0|\n|        mr main rate|     311|   1618629|        França|     Registado|   1429|TW - Quarto Twin ...|2022-11-01 14:50:...|         1|                    1|       2|      2|       0|    0|          63.7|  2022-11-10|  2022-11-11|              63.7|             31.85|               31.85|                            9|\n|             website|     556|   1448457|      Portugal|     Registado|   2831|Double Room Standard|2022-03-08 14:48:...|         2|                    1|       2|      2|       0|    0|        137.75|  2022-03-12|  2022-03-14|            68.875|           34.4375|             34.4375|                            4|\n|             website|     328|   1485645|        França|     Registado|   1456|Superior Double Room|2022-05-01 16:11:...|         3|                    1|       2|      2|       0|    0|        175.71|  2022-05-13|  2022-05-16|             58.57|            29.285|              29.285|                           12|\n|        mr main rate|     310|   1580448|      Portugal|  NãoRegistado|   1395|Quarto Duplo Stan...|2022-09-01 14:57:...|         1|                    1|       2|      2|       0|    0|          63.7|  2022-09-01|  2022-09-02|              63.7|             31.85|               31.85|                            0|\n|melhor preo garan...|      49|   1449980|      Portugal|     Registado|     92|        Quarto Duplo|2022-03-11 10:12:...|         2|                    1|       2|      2|       0|    0|         280.0|  2022-04-15|  2022-04-17|             140.0|              70.0|                70.0|                           35|\n|              normal|     179|   1427189|      Portugal|     Cancelado|    629|      Single Comfort|2022-01-27 12:20:...|         1|                    1|       1|      1|       0|    0|        117.45|  2022-07-06|  2022-07-07|            117.45|            117.45|              117.45|                          160|\n|      non-refundable|     319|   1684705|   Reino Unido|     Registado|   1415|    Executivo - Twin|2023-02-24 15:51:...|         7|                    1|       2|      2|       0|    0|         437.5|  2023-02-28|  2023-03-07|              62.5|             31.25|               31.25|                            4|\n|                 bar|     280|   1435255|      Portugal|     Registado|   2564|      SUITE FAMILIAR|2022-02-13 15:47:...|         1|                    1|       2|      2|       2|    0|         200.0|  2022-04-23|  2022-04-24|             200.0|             100.0|               100.0|                           69|\n|clientes fidelizados|     349|   1530027|      Portugal|     Registado|   1551|         Quarto Twin|2022-06-27 15:23:...|         3|                    1|       1|      1|       0|    0|         207.0|  2022-07-19|  2022-07-22|              69.0|              69.0|                69.0|                           22|\n|              normal|     313|   1478617|       Espanha|     Registado|   1378|Quartos I, II, II...|2022-04-21 12:59:...|         2|                    1|       2|      2|       0|    0|         400.0|  2022-05-28|  2022-05-30|             200.0|             100.0|               100.0|                           37|\n|                 bar|     426|   1685285|      Portugal|     Cancelado|   1991|Duplo Premium - C...|2023-02-25 15:07:...|         2|                    1|       2|      2|       1|    0|         171.0|  2023-04-29|  2023-05-01|              85.5|             42.75|               42.75|                           63|\n|              normal|     287|   1656604|        Israel|     Registado|   1232|              STUDIO|2023-01-14 17:38:...|         3|                    1|       3|      3|       0|    0|         270.0|  2023-01-15|  2023-01-18|              90.0|              30.0|                30.0|                            1|\n|              normal|     444|   1663611|      Portugal|     Registado|   2384|                Twin|2023-01-24 23:13:...|         2|                    2|       2|      4|       0|    0|         360.0|  2023-02-17|  2023-02-19|             180.0|              45.0|                90.0|                           24|\n|        main rate bb|     310|   1531619|      Portugal|  NãoRegistado|   1673|Quarto Duplo Supe...|2022-06-29 15:28:...|         2|                    1|       2|      2|       0|    0|         168.0|  2022-08-02|  2022-08-04|              84.0|              42.0|                42.0|                           34|\n|        mr main rate|     310|   1640728|      Portugal|    Modificada|   1395|Quarto Duplo Stan...|2022-12-14 15:03:...|         4|                    1|       1|      1|       0|    0|         176.4|  2022-12-19|  2022-12-23|              44.1|              44.1|                44.1|                            5|\n|          meia penso|     426|   1465460|        França|     Registado|   1995|Duplo Standard - ...|2022-04-03 14:33:...|         1|                    1|       2|      2|       0|    0|         140.0|  2022-08-18|  2022-08-19|             140.0|              70.0|                70.0|                          137|\n|                 bar|     539|   1421774|      Portugal|     Registado|   2542|Quarto Dpl. Standard|2022-01-12 16:44:...|         1|                    1|       1|      1|       0|    0|          60.0|  2022-01-12|  2022-01-13|              60.0|              60.0|                60.0|                            0|\n+--------------------+--------+----------+--------------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+------------------+------------------+--------------------+-----------------------------+\nonly showing top 100 rows\n\n24955\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.sql.functions._\nimport spark.implicits._\n\u001b[1m\u001b[34mjoinFolder\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/joins\n\u001b[1m\u001b[34msaveJoins\u001b[0m: \u001b[1m\u001b[32mBoolean\u001b[0m = false\n\u001b[1m\u001b[34msaveDataFrame\u001b[0m: \u001b[1m\u001b[32m(df: org.apache.spark.sql.DataFrame, name: String)Unit\u001b[0m\n\u001b[1m\u001b[34minitialCount\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [rate_plan: string, hotel_ID: int ... 19 more fields]\n"
     }
    ]
   }
  },
  {
   "user": "anonymous",
   "config": {
    "colWidth": 12,
    "fontSize": 9,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala"
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       },
       {
        "columns": [
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Quantidade de quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "preco_noite",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_adulto",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "preco_noite_ocupacao",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "jobName": "paragraph_1563110258183_1613653816",
   "id": "20190714-161738_1950435706",
   "dateCreated": "2019-07-14T16:17:38+0300",
   "status": "FINISHED",
   "progressUpdateIntervalMs": 500,
   "focus": true,
   "$$hashKey": "object:394",
   "text": "val joinTipologia = spark.sql(\n    \"\"\"\n       SELECT DISTINCT \n           Q.hotel_ID, \n           Q.Reserve_ID,\n           Q.pais,\n           Q.estado_reserva,\n           Q.room_ID,\n           Q.tipo_quarto AS Q_tipo_quarto,\n           Q.rate_plan,\n           Q.data_reserva,\n           Q.data_chegada,\n           Q.data_partida,\n           Q.num_noites,\n           Q.ocupacao,\n           Q.adultos,\n           Q.criancas,\n           Q.bebes,\n           Q.preco_euros,\n           Q.dif_data_chegada_data_reserva,\n           T.tipo_quarto as T_tipo_quarto, \n           T.quantidade,\n           T.capacidade_maxima,\n           T.capacidade_max_adultos,\n           T.capacidade_max_criancas,\n           T.capacidade_max_bebes\n       FROM QuartosReservados as Q\n       Inner JOIN Tipologias as T\n           ON Q.hotel_ID = T.hotel_ID AND T.room_ID = Q.room_ID\n      \"\"\")\n\nval joinTipologiaNotExists = spark.sql(\n    \"\"\"\n        SELECT *\n        FROM QuartosReservados\n        WHERE NOT EXISTS (\n           SELECT *\n           FROM Tipologias\n           WHERE QuartosReservados.hotel_ID = Tipologias.hotel_ID AND \n           QuartosReservados.room_ID = Tipologias.room_ID\n        )\n      \"\"\")\njoinTipologiaNotExists.show();\n\n\njoinTipologia.createOrReplaceTempView(\"JoinTipologia\")\njoinTipologia.cache()\n\nif (saveJoins)\n    saveDataFrame(joinTipologia, \"joinTipologia\")\n\nprintln(joinTipologia.count())\njoinTipologia.printSchema()",
   "dateStarted": "2023-05-18 22:59:09.350",
   "dateUpdated": "2023-05-18 22:59:29.968",
   "dateFinished": "2023-05-18 22:59:29.968",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+---------+--------+----------+--------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+-----------------+------------------+--------------------+-----------------------------+\n|rate_plan|hotel_ID|Reserve_ID|    pais|estado_reserva|room_ID|         tipo_quarto|        data_reserva|num_noites|Quantidade de quartos|ocupacao|adultos|criancas|bebes|   preco_euros|data_chegada|data_partida|      preco_noite|preco_noite_adulto|preco_noite_ocupacao|dif_data_chegada_data_reserva|\n+---------+--------+----------+--------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+-----------------+------------------+--------------------+-----------------------------+\n|    promo|     309|   1438425|Portugal|    Modificada|   2802|Quarto Twin Standard|2022-02-18 10:48:...|         1|                    1|       2|      2|       0|    0|          38.7|  2022-02-19|  2022-02-20|             38.7|             19.35|               19.35|                            1|\n|    promo|     309|   1441490|Portugal|     Cancelado|   2802|Quarto Twin Standard|2022-02-23 16:10:...|         1|                    1|       2|      2|       0|    0|          43.0|  2022-02-23|  2022-02-24|             43.0|              21.5|                21.5|                            0|\n|    promo|     309|   1441490|Portugal|     Cancelado|   2802|Quarto Twin Standard|2022-02-23 16:10:...|         1|                    1|       2|      2|       0|    0|          43.0|  2022-03-19|  2022-03-20|             43.0|              21.5|                21.5|                           24|\n|    promo|     309|   1440314| Espanha|  NãoRegistado|   2802|Quarto Twin Standard|2022-02-21 16:44:...|         3|                    1|       2|      2|       0|    0|128.9999999999|  2022-02-22|  2022-02-25|42.99999999996667|21.499999999983334|  21.499999999983334|                            1|\n|    promo|     309|   1442562|Portugal|     Cancelado|   2802|Quarto Twin Standard|2022-02-25 16:06:...|         1|                    1|       2|      2|       0|    0|          43.0|  2022-02-25|  2022-02-26|             43.0|              21.5|                21.5|                            0|\n|    promo|     309|   1441186|Portugal|     Registado|   2802|Quarto Twin Standard|2022-02-22 22:43:...|         1|                    1|       2|      2|       0|    0|          43.0|  2022-02-26|  2022-02-27|             43.0|              21.5|                21.5|                            4|\n|    promo|     309|   1438484|Portugal|    Modificada|   2802|Quarto Twin Standard|2022-02-18 12:14:...|         3|                    1|       2|      2|       0|    0|128.9999999999|  2022-02-18|  2022-02-21|42.99999999996667|21.499999999983334|  21.499999999983334|                            0|\n|    promo|     309|   1444879|Portugal|     Registado|   2802|Quarto Twin Standard|2022-03-01 21:17:...|         2|                    1|       2|      2|       0|    0| 77.3999999999|  2022-03-11|  2022-03-13|   38.69999999995|   19.349999999975|     19.349999999975|                           10|\n+---------+--------+----------+--------+--------------+-------+--------------------+--------------------+----------+---------------------+--------+-------+--------+-----+--------------+------------+------------+-----------------+------------------+--------------------+-----------------------------+\n\n24947\nroot\n |-- hotel_ID: integer (nullable = true)\n |-- Reserve_ID: integer (nullable = true)\n |-- pais: string (nullable = true)\n |-- estado_reserva: string (nullable = true)\n |-- room_ID: integer (nullable = true)\n |-- Q_tipo_quarto: string (nullable = true)\n |-- rate_plan: string (nullable = true)\n |-- data_reserva: timestamp (nullable = true)\n |-- data_chegada: date (nullable = true)\n |-- data_partida: date (nullable = true)\n |-- num_noites: integer (nullable = true)\n |-- ocupacao: integer (nullable = true)\n |-- adultos: integer (nullable = true)\n |-- criancas: integer (nullable = true)\n |-- bebes: integer (nullable = true)\n |-- preco_euros: double (nullable = true)\n |-- dif_data_chegada_data_reserva: integer (nullable = true)\n |-- T_tipo_quarto: string (nullable = true)\n |-- quantidade: integer (nullable = true)\n |-- capacidade_maxima: integer (nullable = true)\n |-- capacidade_max_adultos: integer (nullable = true)\n |-- capacidade_max_criancas: integer (nullable = true)\n |-- capacidade_max_bebes: integer (nullable = true)\n\n\u001b[1m\u001b[34mjoinTipologia\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 21 more fields]\n\u001b[1m\u001b[34mjoinTipologiaNotExists\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [rate_plan: string, hotel_ID: int ... 19 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {},
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinTipologiaAndHotel = spark.sql(\n    \"\"\"\n       SELECT \n           J.*,\n           H.localizacao,\n           H.area_localizacao,\n           H.estrelas,\n           H.idade_max_criancas,\n           H.idade_max_bebes,\n           H.hora_max_checkin,\n           H.qtd_quartos\n       FROM joinTipologia as J\n       INNER JOIN Hotel as H\n           ON J.hotel_ID = H.hotel_ID\n    \"\"\")\n\njoinTipologiaAndHotel.createOrReplaceTempView(\"JoinTipologiaAndHotel\")\n\nprintln(joinTipologiaAndHotel.count())\n//joinTipologiaAndHotel.printSchema()\nif (saveJoins)\n    saveDataFrame(joinTipologiaAndHotel, \"joinTipologiaAndHotel\")",
   "id": "",
   "dateCreated": "2023-04-30 20:01:48.781",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-05-18 22:59:29.995",
   "dateUpdated": "2023-05-18 22:59:31.635",
   "dateFinished": "2023-05-18 22:59:31.635",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24947\n\u001b[1m\u001b[34mjoinTipologiaAndHotel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 28 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {},
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": false
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinFeriados = spark.sql(\n    \"\"\"\n        SELECT J.*, F.is_holiday\n        FROM JoinTipologiaAndHotel AS J\n        LEFT JOIN (SELECT * FROM Feriados WHERE is_holiday=1) AS F\n            ON F.date <= J.data_partida AND f.date >= data_chegada\n    \"\"\"\n)\njoinFeriados = joinFeriados.na.fill(0, Seq(\"is_holiday\"))\n\njoinFeriados.createOrReplaceTempView(\"JoinFeriados\")\n\nprintln(joinFeriados.count())\n\njoinFeriados.show()",
   "id": "",
   "dateCreated": "2023-04-30 20:12:14.191",
   "config": {
    "tableHide": false
   },
   "dateStarted": "2023-05-18 22:59:31.649",
   "dateUpdated": "2023-05-18 22:59:39.820",
   "dateFinished": "2023-05-18 22:59:39.819",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "25213\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+--------------+-----------------------------+--------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\n|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|   preco_euros|dif_data_chegada_data_reserva|       T_tipo_quarto|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+--------------+-----------------------------+--------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\n|     366|   1536151|      Portugal|    Modificada|   1648|QUARTO TWIN STANDARD|      non-refundable|2022-07-05 18:15:...|  2022-07-12|  2022-07-13|         1|       2|      2|       0|    0|          65.7|                            7|QUARTO TWIN STANDARD|        40|                3|                     2|                      1|                   1|      Castelo Branco|  Castelo Branco|       4|                12|              2|2023-05-18 23:59:00|         71|         0|\n|     465|   1476610|Estados Unidos|     Registado|   2407|       Duplo Deluxe |                 bar|2022-04-18 16:57:...|  2022-04-20|  2022-04-21|         1|       2|      2|       0|    0|         110.0|                            2|       Duplo Deluxe |         2|                2|                     2|                      0|                   0|               Evora|           Evora|       0|                12|             24|2023-05-18 23:59:00|          7|         0|\n|     310|   1629177|      Portugal|     Registado|   1395|Quarto Duplo Stan...|        mr main rate|2022-11-21 15:44:...|  2022-11-22|  2022-11-24|         2|       2|      2|       0|    0|          88.2|                            1|Quarto Duplo Stan...|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|\n|     514|   1573591|Estados Unidos|     Registado|   2492|         Garden Room|      non-refundable|2022-08-22 18:32:...|  2022-09-05|  2022-09-09|         4|       2|      2|       0|    0|         594.0|                           14|         Garden Room|         4|                3|                     2|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         0|\n|     556|   1423431|      Portugal|     Registado|   2833|Triple Room Standard|             website|2022-01-17 16:35:...|  2022-03-12|  2022-03-13|         1|       2|      2|       1|    0|        102.65|                           54|Triple Room Standard|         7|                3|                     3|                      2|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|\n|      54|   1452884|      Portugal|     Registado|    167|         Quarto Twin|             website|2022-03-16 10:53:...|  2022-03-20|  2022-03-22|         2|       2|      2|       0|    0|         153.0|                            4|         Quarto Twin|         5|                3|                     2|                      2|                   1|    Póvoa de Lanhoso|          Amares|       3|                12|             36|2023-05-18 23:59:00|         21|         0|\n|     311|   1546647|   Reino Unido|     Registado|   1429|TW - Quarto Twin ...|        main rate bb|2022-07-19 20:52:...|  2022-09-23|  2022-09-24|         1|       2|      4|       0|    0|         196.0|                           66|TW - Quarto Twin ...|         4|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|\n|     453|   1453940|   Reino Unido|     Cancelado|   2117|      Apartamento T1|      reserva direta|2022-03-18 10:40:...|  2022-03-20|  2022-03-22|         2|       1|      1|       0|    0|         136.0|                            2|      Apartamento T1|         6|                4|                     4|                      3|                   1|               Porto|           Porto|       0|                 5|             24|2023-05-18 23:59:00|          9|         0|\n|     322|   1578999|        França|     Registado|   2259|                Twin|reembolsvel suple...|2022-08-30 16:33:...|  2022-08-31|  2022-09-01|         1|       2|      2|       0|    0|          89.0|                            1|                Twin|        18|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|\n|     444|   1717234|Estados Unidos|     Registado|   2076|               Suite|              normal|2023-04-10 18:29:...|  2023-04-30|  2023-05-01|         1|       2|      2|       0|    0|         150.0|                           20|               Suite|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|\n|     444|   1660079|      Portugal|     Registado|   2076|               Suite|              normal|2023-01-19 19:41:...|  2023-01-20|  2023-01-22|         2|       1|      1|       1|    0|         220.0|                            1|               Suite|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         0|\n|     426|   1711850|       Espanha|     Registado|   1994|        Twin Premium|                 bar|2023-04-03 09:17:...|  2023-04-03|  2023-04-04|         1|       2|      2|       0|    0|          81.0|                            0|        Twin Premium|         5|                3|                     2|                      1|                   1|              Chaves|          Chaves|       4|                12|             60|2023-05-18 23:59:00|         58|         0|\n|     319|   1681348|         Suiça|     Registado|   2264|            Standard|              normal|2023-02-19 12:56:...|  2023-08-04|  2023-08-06|         2|       2|      4|       0|    0|         296.0|                          166|            Standard|        18|                2|                     2|                      0|                   0|              Aveiro|          Aveiro|       3|                12|             24|2023-05-18 23:59:00|         96|         0|\n|     426|   1535463|      Portugal|    Modificada|   1990|       Twin Standard|               other|2022-07-04 20:18:...|  2022-08-22|  2022-08-26|         4|       2|      2|       0|    0|         700.0|                           49|       Twin Standard|        26|                2|                     2|                      0|                   1|              Chaves|          Chaves|       4|                12|             60|2023-05-18 23:59:00|         58|         0|\n|     310|   1426028|        França|     Registado|   1395|Quarto Duplo Stan...|      non-refundable|2022-01-24 18:52:...|  2022-02-03|  2022-02-15|        12|       2|      2|       0|    0|         576.0|                           10|Quarto Duplo Stan...|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|\n|     414|   1672924|      Alemanha|     Registado|   2135| Twin Vista Interior|              normal|2023-02-06 20:14:...|  2023-05-16|  2023-05-18|         2|       2|      2|       0|    0|         180.0|                           99| Twin Vista Interior|         3|                3|                     2|                      1|                   1|São Martinho do P...|        Alcobaça|       3|                12|             36|2023-05-18 23:30:00|         30|         0|\n|     311|   1589831|        Itália|     Registado|   1407|DB - Quarto Duplo...|        mr main rate|2022-09-15 17:24:...|  2022-09-28|  2022-09-29|         1|       2|      2|       0|    0|          88.2|                           13|DB - Quarto Duplo...|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|\n|     444|   1701567|      Portugal|     Registado|   2229|              Triplo|              normal|2023-03-20 14:54:...|  2023-03-25|  2023-03-26|         1|       2|      2|       1|    0|         100.0|                            5|              Triplo|         5|                3|                     3|                      2|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         0|\n|      49|   1518963|      Portugal|     Registado|     92|        Quarto Duplo|                  hb|2022-06-12 19:30:...|  2022-06-18|  2022-06-19|         1|       2|      2|       0|    1|         272.0|                            6|        Quarto Duplo|        10|                4|                     2|                      1|                   1|              Lamego|          Chaves|       4|                15|             36|2023-05-18 23:59:00|         51|         0|\n|     482|   1716398|      Portugal|     Registado|   2285|      Apartamento T1|      non-refundable|2023-04-09 17:36:...|  2023-04-10|  2023-04-11|         1|       3|      6|       0|    0|132.5199999999|                            1|      Apartamento T1|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+--------------+-----------------------------+--------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinFeriados\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 29 more fields]\njoinFeriados: org.apache.spark.sql.DataFrame = [hotel_ID: int, Reserve_ID: int ... 29 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinFeriadosGrouped = spark.sql(\n    \"\"\"\n        SELECT \n            hotel_ID,  Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos, max(is_holiday) AS is_holiday\n        FROM JoinFeriados\n        GROUP BY hotel_ID, Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos\n    \"\"\"\n)\n\njoinFeriadosGrouped.createOrReplaceTempView(\"JoinFeriadosGrouped\")\n\nprintln(joinFeriadosGrouped.count())\njoinFeriadosGrouped.show()",
   "id": "",
   "dateCreated": "2023-05-16 20:45:38.018",
   "config": {},
   "dateStarted": "2023-05-18 22:59:39.861",
   "dateUpdated": "2023-05-18 23:00:10.836",
   "dateFinished": "2023-05-18 23:00:10.836",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24947\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\n|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|  preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\n|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|        138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|       65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|        157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|         47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|        702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|        160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|         43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|        57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|\n|     304|   1589923|        França|     Registado|   1357|203 - Quarto Dupl...|203 - Quarto Dupl...|         tarifa site|2022-09-15 19:26:...|  2022-09-28|  2022-09-30|         2|       2|      2|       0|    0|       139.84|                           13|         1|                2|                     2|                      0|                   0|             Coimbra|         Coimbra|       0|                11|             23|2023-05-18 22:30:00|         28|         0|\n|     482|   1488375|       Irlanda|     Registado|   2286|      Apartamento T2|      Apartamento T2|             website|2022-05-04 20:35:...|  2022-08-10|  2022-08-15|         5|       6|      6|       0|    0|       1235.0|                           98|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         1|\n|     482|   1620626|      Portugal|     Registado|   2285|      Apartamento T1|      Apartamento T1|      non-refundable|2022-11-04 22:59:...|  2022-11-04|  2022-11-06|         2|       2|      2|       0|    0|61.8399999999|                            0|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|\n|     504|   1581442|      Portugal|     Registado|   2378|       Cela Sæculare|       Cela Sæculare|                 bar|2022-09-02 22:26:...|  2022-09-03|  2022-09-05|         2|       2|      2|       0|    0|      169.575|                            1|        13|                2|                     2|                      0|                   1|              Monção|          Monção|       4|                12|             36|2023-05-18 23:59:00|         27|         0|\n|     310|   1626279|      Portugal|     Cancelado|   1395|Quarto Duplo Stan...|Quarto Duplo Stan...|        mr main rate|2022-11-15 23:35:...|  2022-11-26|  2022-11-27|         1|       2|      2|       0|    0|         44.1|                           11|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|\n|     493|   1689638|      Portugal|     Registado|   2800| Estudio com lareira| Estudio com lareira|                 bar|2023-03-03 12:31:...|  2023-03-12|  2023-03-14|         2|       2|      2|       0|    0|        140.0|                            9|         1|                2|                     2|                      1|                   1|           Carnaxide|       Carnaxide|       0|                 0|              0|2023-05-18 12:00:00|          5|         0|\n|     535|   1651261|      Portugal|     Cancelado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-01-06 10:35:...|  2023-01-12|  2023-01-14|         2|       2|      4|       0|    0|        252.0|                            6|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|\n|     445|   1444187|   Reino Unido|     Registado|   2139|       Terrace Room |       Terrace Room |                 bar|2022-02-28 20:03:...|  2022-03-06|  2022-03-12|         6|       2|      2|       0|    0|        900.0|                            6|         3|                2|                     2|                      0|                   0| Conceição de Tavira|       Albufeira|       4|                12|             36|2023-05-18 12:00:00|         15|         0|\n|     482|   1466794|        França|     Registado|   2286|      Apartamento T2|      Apartamento T2|      non-refundable|2022-04-04 21:27:...|  2022-08-03|  2022-08-08|         5|       5|      5|       0|    1|      1148.55|                          121|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|\n|     378|   1706060|        Canadá|    Modificada|   1738|Duplo ou Twin Sta...|Duplo ou Twin Sta...|      non-refundable|2023-03-26 17:45:...|  2023-06-01|  2023-06-06|         5|       2|      2|       0|    1|        400.0|                           67|         7|                2|                     2|                      1|                   1|             Batalha|         Batalha|       3|                12|             24|2023-05-18 23:30:00|         23|         0|\n|     444|   1431937|Estados Unidos|     Cancelado|   2076|               Suite|               Suite|              normal|2022-02-06 21:03:...|  2022-04-15|  2022-04-16|         1|       2|      4|       4|    0|        320.0|                           68|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|\n|     556|   1476905|      Portugal|     Registado|   2847|Double Room w/ext...|Double Room w/ext...|             website|2022-04-19 07:39:...|  2022-06-05|  2022-06-06|         1|       2|      2|       1|    0|        101.0|                           47|         2|                3|                     3|                      1|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinFeriadosGrouped\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 29 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {},
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Location",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "Event",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "start_Date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "end_date",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val joinEventos = spark.sql(\n    \"\"\"\n        SELECT QR.*, E.*\n        FROM JoinFeriadosGrouped QR\n        LEFT JOIN Eventos E\n            ON QR.data_partida >= E.start_Date AND QR.data_chegada <= E.end_date\n            AND QR.area_localizacao = E.Location\n    \"\"\")\n\njoinEventos.createOrReplaceTempView(\"JoinEventos\")\n\nprintln(joinEventos.count())\njoinEventos.show()",
   "id": "",
   "dateCreated": "2023-04-30 20:16:51.675",
   "config": {},
   "dateStarted": "2023-05-18 23:00:10.880",
   "dateUpdated": "2023-05-18 23:00:44.637",
   "dateFinished": "2023-05-18 23:00:44.637",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24973\nn|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|  preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|Location|               Event|start_Date|  end_date|\nn|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|        138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|    null|                null|      null|      null|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|       65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|    null|                null|      null|      null|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|        157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0| Coimbra| Queima das Fitas...|2023-05-01|2023-05-07|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|         47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|    null|                null|      null|      null|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|        702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|    null|                null|      null|      null|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|        160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|    null|                null|      null|      null|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|         43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|    null|                null|      null|      null|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|        57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|    null|                null|      null|      null|\n|     304|   1589923|        França|     Registado|   1357|203 - Quarto Dupl...|203 - Quarto Dupl...|         tarifa site|2022-09-15 19:26:...|  2022-09-28|  2022-09-30|         2|       2|      2|       0|    0|       139.84|                           13|         1|                2|                     2|                      0|                   0|             Coimbra|         Coimbra|       0|                11|             23|2023-05-18 22:30:00|         28|         0|    null|                null|      null|      null|\n|     482|   1488375|       Irlanda|     Registado|   2286|      Apartamento T2|      Apartamento T2|             website|2022-05-04 20:35:...|  2022-08-10|  2022-08-15|         5|       6|      6|       0|    0|       1235.0|                           98|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         1|    null|                null|      null|      null|\n|     482|   1620626|      Portugal|     Registado|   2285|      Apartamento T1|      Apartamento T1|      non-refundable|2022-11-04 22:59:...|  2022-11-04|  2022-11-06|         2|       2|      2|       0|    0|61.8399999999|                            0|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|    null|                null|      null|      null|\n|     504|   1581442|      Portugal|     Registado|   2378|       Cela Sæculare|       Cela Sæculare|                 bar|2022-09-02 22:26:...|  2022-09-03|  2022-09-05|         2|       2|      2|       0|    0|      169.575|                            1|        13|                2|                     2|                      0|                   1|              Monção|          Monção|       4|                12|             36|2023-05-18 23:59:00|         27|         0|    null|                null|      null|      null|\n|     310|   1626279|      Portugal|     Cancelado|   1395|Quarto Duplo Stan...|Quarto Duplo Stan...|        mr main rate|2022-11-15 23:35:...|  2022-11-26|  2022-11-27|         1|       2|      2|       0|    0|         44.1|                           11|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|    null|                null|      null|      null|\n|     493|   1689638|      Portugal|     Registado|   2800| Estudio com lareira| Estudio com lareira|                 bar|2023-03-03 12:31:...|  2023-03-12|  2023-03-14|         2|       2|      2|       0|    0|        140.0|                            9|         1|                2|                     2|                      1|                   1|           Carnaxide|       Carnaxide|       0|                 0|              0|2023-05-18 12:00:00|          5|         0|    null|                null|      null|      null|\n|     535|   1651261|      Portugal|     Cancelado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-01-06 10:35:...|  2023-01-12|  2023-01-14|         2|       2|      4|       0|    0|        252.0|                            6|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|    null|                null|      null|      null|\n|     445|   1444187|   Reino Unido|     Registado|   2139|       Terrace Room |       Terrace Room |                 bar|2022-02-28 20:03:...|  2022-03-06|  2022-03-12|         6|       2|      2|       0|    0|        900.0|                            6|         3|                2|                     2|                      0|                   0| Conceição de Tavira|       Albufeira|       4|                12|             36|2023-05-18 12:00:00|         15|         0|    null|                null|      null|      null|\n|     482|   1466794|        França|     Registado|   2286|      Apartamento T2|      Apartamento T2|      non-refundable|2022-04-04 21:27:...|  2022-08-03|  2022-08-08|         5|       5|      5|       0|    1|      1148.55|                          121|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|    null|                null|      null|      null|\n|     378|   1706060|        Canadá|    Modificada|   1738|Duplo ou Twin Sta...|Duplo ou Twin Sta...|      non-refundable|2023-03-26 17:45:...|  2023-06-01|  2023-06-06|         5|       2|      2|       0|    1|        400.0|                           67|         7|                2|                     2|                      1|                   1|             Batalha|         Batalha|       3|                12|             24|2023-05-18 23:30:00|         23|         0|    null|                null|      null|      null|\n|     444|   1431937|Estados Unidos|     Cancelado|   2076|               Suite|               Suite|              normal|2022-02-06 21:03:...|  2022-04-15|  2022-04-16|         1|       2|      4|       4|    0|        320.0|                           68|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|    null|                null|      null|      null|\n|     556|   1476905|      Portugal|     Registado|   2847|Double Room w/ext...|Double Room w/ext...|             website|2022-04-19 07:39:...|  2022-06-05|  2022-06-06|         1|       2|      2|       1|    0|        101.0|                           47|         2|                3|                     3|                      1|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|    null|                null|      null|      null|\nnonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinEventos\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 33 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "event_count",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinEventosGrouped = spark.sql(\n    \"\"\"\n        SELECT \n            hotel_ID,  Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos, is_holiday, count(Event) AS event_count\n        FROM JoinEventos\n        GROUP BY hotel_ID, Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos, is_holiday\n    \"\"\"\n)\n\njoinEventosGrouped.createOrReplaceTempView(\"JoinEventosGrouped\")\n\nprintln(joinEventosGrouped.count())\njoinEventosGrouped.show()",
   "id": "",
   "dateCreated": "2023-05-16 20:40:44.016",
   "config": {},
   "dateStarted": "2023-05-18 23:00:44.678",
   "dateUpdated": "2023-05-18 23:01:09.206",
   "dateFinished": "2023-05-18 23:01:09.205",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24947\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+-----------+\n|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|  preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|event_count|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+-----------+\n|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|        138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|       65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|          0|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|        157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          1|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|         47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|        702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|        160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|         43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|          0|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|        57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|          0|\n|     304|   1589923|        França|     Registado|   1357|203 - Quarto Dupl...|203 - Quarto Dupl...|         tarifa site|2022-09-15 19:26:...|  2022-09-28|  2022-09-30|         2|       2|      2|       0|    0|       139.84|                           13|         1|                2|                     2|                      0|                   0|             Coimbra|         Coimbra|       0|                11|             23|2023-05-18 22:30:00|         28|         0|          0|\n|     482|   1488375|       Irlanda|     Registado|   2286|      Apartamento T2|      Apartamento T2|             website|2022-05-04 20:35:...|  2022-08-10|  2022-08-15|         5|       6|      6|       0|    0|       1235.0|                           98|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         1|          0|\n|     482|   1620626|      Portugal|     Registado|   2285|      Apartamento T1|      Apartamento T1|      non-refundable|2022-11-04 22:59:...|  2022-11-04|  2022-11-06|         2|       2|      2|       0|    0|61.8399999999|                            0|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0|\n|     504|   1581442|      Portugal|     Registado|   2378|       Cela Sæculare|       Cela Sæculare|                 bar|2022-09-02 22:26:...|  2022-09-03|  2022-09-05|         2|       2|      2|       0|    0|      169.575|                            1|        13|                2|                     2|                      0|                   1|              Monção|          Monção|       4|                12|             36|2023-05-18 23:59:00|         27|         0|          0|\n|     310|   1626279|      Portugal|     Cancelado|   1395|Quarto Duplo Stan...|Quarto Duplo Stan...|        mr main rate|2022-11-15 23:35:...|  2022-11-26|  2022-11-27|         1|       2|      2|       0|    0|         44.1|                           11|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|\n|     493|   1689638|      Portugal|     Registado|   2800| Estudio com lareira| Estudio com lareira|                 bar|2023-03-03 12:31:...|  2023-03-12|  2023-03-14|         2|       2|      2|       0|    0|        140.0|                            9|         1|                2|                     2|                      1|                   1|           Carnaxide|       Carnaxide|       0|                 0|              0|2023-05-18 12:00:00|          5|         0|          0|\n|     535|   1651261|      Portugal|     Cancelado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-01-06 10:35:...|  2023-01-12|  2023-01-14|         2|       2|      4|       0|    0|        252.0|                            6|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          0|\n|     445|   1444187|   Reino Unido|     Registado|   2139|       Terrace Room |       Terrace Room |                 bar|2022-02-28 20:03:...|  2022-03-06|  2022-03-12|         6|       2|      2|       0|    0|        900.0|                            6|         3|                2|                     2|                      0|                   0| Conceição de Tavira|       Albufeira|       4|                12|             36|2023-05-18 12:00:00|         15|         0|          0|\n|     482|   1466794|        França|     Registado|   2286|      Apartamento T2|      Apartamento T2|      non-refundable|2022-04-04 21:27:...|  2022-08-03|  2022-08-08|         5|       5|      5|       0|    1|      1148.55|                          121|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0|\n|     378|   1706060|        Canadá|    Modificada|   1738|Duplo ou Twin Sta...|Duplo ou Twin Sta...|      non-refundable|2023-03-26 17:45:...|  2023-06-01|  2023-06-06|         5|       2|      2|       0|    1|        400.0|                           67|         7|                2|                     2|                      1|                   1|             Batalha|         Batalha|       3|                12|             24|2023-05-18 23:30:00|         23|         0|          0|\n|     444|   1431937|Estados Unidos|     Cancelado|   2076|               Suite|               Suite|              normal|2022-02-06 21:03:...|  2022-04-15|  2022-04-16|         1|       2|      4|       4|    0|        320.0|                           68|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|          0|\n|     556|   1476905|      Portugal|     Registado|   2847|Double Room w/ext...|Double Room w/ext...|             website|2022-04-19 07:39:...|  2022-06-05|  2022-06-06|         1|       2|      2|       1|    0|        101.0|                           47|         2|                3|                     3|                      1|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|          0|\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+-----------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinEventosGrouped\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 30 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "collapsed": true
      },
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "event_count",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         },
         {
          "name": "city",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "tavg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "tmax",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "tmin",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "prcp",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "val joinMeteoTemp = spark.sql(\n    \"\"\"\n        SELECT QR.*, M.city, M.tavg, M.tmax, M.tmin, M.prcp\n        FROM JoinEventosGrouped AS QR\n        LEFT JOIN Meteorologia AS M \n            ON QR.area_localizacao = M.city \n            AND M.date <= QR.data_partida AND M.date >= QR.data_chegada\n    \"\"\")\n\njoinMeteoTemp.createOrReplaceTempView(\"JoinMeteoTemp\")\n\nprintln(joinMeteoTemp.count())\njoinMeteoTemp.show()",
   "id": "",
   "dateCreated": "2023-05-01 15:31:17.385",
   "config": {
    "tableHide": true
   },
   "dateStarted": "2023-05-18 23:01:09.265",
   "dateUpdated": "2023-05-18 23:01:50.650",
   "dateFinished": "2023-05-18 23:01:50.649",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "69746\nn|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|event_count|     city|tavg|tmax|tmin|prcp|\nn|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|      138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|    Porto|15.1|21.8| 9.2|null|\n|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|      138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|    Porto|15.2|20.6|11.2|null|\n|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|      138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|    Porto|16.3|20.9|13.5|null|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|     65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|          0|     Maia| 9.0|15.0| 5.0| 0.0|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|     65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|          0|     Maia|10.0|15.0| 7.0| 0.3|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|      157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          1|     null|null|null|null|null|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|       47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|    Porto| 9.5|11.2| 7.7|null|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|       47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|    Porto|10.2|13.4| 7.3|null|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|      702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|Carnaxide|20.4|25.3|18.5| 0.0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|      702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|Carnaxide|21.7|26.4|18.8| 0.0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|      702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|Carnaxide|22.7|29.5|18.6| 0.0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|      702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|Carnaxide|22.2|27.9|18.1| 0.0|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|      702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|Carnaxide|22.5|29.9|18.2| 0.0|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|      160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|   Aveiro|19.6|23.7|17.4|null|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|      160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|   Aveiro|20.7|26.1|17.2|null|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|      160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|   Aveiro|21.6|28.3|17.2|null|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|       43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|          0|    Porto|12.8|19.3| 8.5|null|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|       43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|          0|    Porto|14.3|22.5|12.0|null|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|      57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|          0|     Maia| 9.6|14.0| 5.0| 0.0|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|      57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|          0|     Maia|11.4|18.0| 6.0| 0.0|\nnonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinMeteoTemp\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 35 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "event_count",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         },
         {
          "name": "temperature_avg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "temperature_max",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "temperature_min",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_avg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_max",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_min",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "var joinMeteoGrouped = spark.sql(\n    \"\"\"\n        SELECT \n            hotel_ID,  Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos, is_holiday, event_count,\n            avg(tavg) AS temperature_avg,\n            max(tmax) AS temperature_max,\n            min(tmin) AS temperature_min,\n            avg(prcp) AS precipitation_avg,\n            max(prcp) AS precipitation_max,\n            min(prcp) AS precipitation_min\n        FROM JoinMeteoTemp\n        GROUP BY hotel_ID, Reserve_ID, pais, estado_reserva, room_ID, Q_tipo_quarto, T_tipo_quarto, rate_plan, data_reserva, data_chegada, data_partida, num_noites, ocupacao, adultos, criancas, bebes, preco_euros, dif_data_chegada_data_reserva, quantidade, capacidade_maxima, capacidade_max_adultos, capacidade_max_criancas, capacidade_max_bebes, localizacao, area_localizacao, estrelas, idade_max_criancas, idade_max_bebes, hora_max_checkin, qtd_quartos, is_holiday, event_count\n    \"\"\"\n)\n\njoinMeteoGrouped.createOrReplaceTempView(\"JoinMeteoGrouped\")\n\nprintln(joinMeteoGrouped.count())\njoinMeteoGrouped.show()",
   "id": "",
   "dateCreated": "2023-05-16 21:41:47.134",
   "config": {},
   "dateStarted": "2023-05-18 23:16:49.149",
   "dateUpdated": "2023-05-18 23:17:04.422",
   "dateFinished": "2023-05-18 23:17:04.421",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24947\nn|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|  preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|event_count|   temperature_avg|temperature_max|temperature_min|precipitation_avg|precipitation_max|precipitation_min|\nn|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|        138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|15.533333333333331|           21.8|            9.2|             null|             null|             null|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|       65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|          0|               9.5|           15.0|            5.0|             0.15|              0.3|              0.0|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|        157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          1|              null|           null|           null|             null|             null|             null|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|         47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|              9.85|           13.4|            7.3|             null|             null|             null|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|        702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|              21.9|           29.9|           18.1|              0.0|              0.0|              0.0|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|        160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|20.633333333333333|           28.3|           17.2|             null|             null|             null|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|         43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|          0|             13.55|           22.5|            8.5|             null|             null|             null|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|        57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|          0|              10.5|           18.0|            5.0|              0.0|              0.0|              0.0|\n|     304|   1589923|        França|     Registado|   1357|203 - Quarto Dupl...|203 - Quarto Dupl...|         tarifa site|2022-09-15 19:26:...|  2022-09-28|  2022-09-30|         2|       2|      2|       0|    0|       139.84|                           13|         1|                2|                     2|                      0|                   0|             Coimbra|         Coimbra|       0|                11|             23|2023-05-18 22:30:00|         28|         0|          0|15.866666666666665|           20.9|           11.1|              1.2|              3.3|              0.1|\n|     482|   1488375|       Irlanda|     Registado|   2286|      Apartamento T2|      Apartamento T2|             website|2022-05-04 20:35:...|  2022-08-10|  2022-08-15|         5|       6|      6|       0|    0|       1235.0|                           98|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         1|          0|21.700000000000003|           27.5|           17.5|             null|             null|             null|\n|     482|   1620626|      Portugal|     Registado|   2285|      Apartamento T1|      Apartamento T1|      non-refundable|2022-11-04 22:59:...|  2022-11-04|  2022-11-06|         2|       2|      2|       0|    0|61.8399999999|                            0|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0|18.433333333333334|           22.4|           15.2|             null|             null|             null|\n|     504|   1581442|      Portugal|     Registado|   2378|       Cela Sæculare|       Cela Sæculare|                 bar|2022-09-02 22:26:...|  2022-09-03|  2022-09-05|         2|       2|      2|       0|    0|      169.575|                            1|        13|                2|                     2|                      0|                   1|              Monção|          Monção|       4|                12|             36|2023-05-18 23:59:00|         27|         0|          0|              18.1|           23.6|           11.1|              2.5|              5.9|              0.0|\n|     310|   1626279|      Portugal|     Cancelado|   1395|Quarto Duplo Stan...|Quarto Duplo Stan...|        mr main rate|2022-11-15 23:35:...|  2022-11-26|  2022-11-27|         1|       2|      2|       0|    0|         44.1|                           11|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|              11.2|           15.7|            8.4|             5.05|             10.1|              0.0|\n|     493|   1689638|      Portugal|     Registado|   2800| Estudio com lareira| Estudio com lareira|                 bar|2023-03-03 12:31:...|  2023-03-12|  2023-03-14|         2|       2|      2|       0|    0|        140.0|                            9|         1|                2|                     2|                      1|                   1|           Carnaxide|       Carnaxide|       0|                 0|              0|2023-05-18 12:00:00|          5|         0|          0|              15.5|           19.3|           12.0|              0.0|              0.0|              0.0|\n|     535|   1651261|      Portugal|     Cancelado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-01-06 10:35:...|  2023-01-12|  2023-01-14|         2|       2|      4|       0|    0|        252.0|                            6|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          0|10.699999999999998|           14.8|            5.5|              0.0|              0.0|              0.0|\n|     445|   1444187|   Reino Unido|     Registado|   2139|       Terrace Room |       Terrace Room |                 bar|2022-02-28 20:03:...|  2022-03-06|  2022-03-12|         6|       2|      2|       0|    0|        900.0|                            6|         3|                2|                     2|                      0|                   0| Conceição de Tavira|       Albufeira|       4|                12|             36|2023-05-18 12:00:00|         15|         0|          0|13.414285714285715|           18.0|            7.3|             null|             null|             null|\n|     482|   1466794|        França|     Registado|   2286|      Apartamento T2|      Apartamento T2|      non-refundable|2022-04-04 21:27:...|  2022-08-03|  2022-08-08|         5|       5|      5|       0|    1|      1148.55|                          121|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0| 21.36666666666667|           26.8|           16.8|             null|             null|             null|\n|     378|   1706060|        Canadá|    Modificada|   1738|Duplo ou Twin Sta...|Duplo ou Twin Sta...|      non-refundable|2023-03-26 17:45:...|  2023-06-01|  2023-06-06|         5|       2|      2|       0|    1|        400.0|                           67|         7|                2|                     2|                      1|                   1|             Batalha|         Batalha|       3|                12|             24|2023-05-18 23:30:00|         23|         0|          0|              null|           null|           null|             null|             null|             null|\n|     444|   1431937|Estados Unidos|     Cancelado|   2076|               Suite|               Suite|              normal|2022-02-06 21:03:...|  2022-04-15|  2022-04-16|         1|       2|      4|       4|    0|        320.0|                           68|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|          0|              14.7|           20.0|           11.5|             null|             null|             null|\n|     556|   1476905|      Portugal|     Registado|   2847|Double Room w/ext...|Double Room w/ext...|             website|2022-04-19 07:39:...|  2022-06-05|  2022-06-06|         1|       2|      2|       1|    0|        101.0|                           47|         2|                3|                     3|                      1|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|          0|             20.85|           30.2|           11.3|              0.0|              0.0|              0.0|\nnonly showing top 20 rows\n\n\u001b[1m\u001b[34mjoinMeteoGrouped\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 36 more fields]\n"
     }
    ]
   }
  },
  {
   "settings": {
    "params": {
     "bdtMeta": {
      "ZTOOLS_DATA_FRAMES": [
       {
        "columns": [
         {
          "name": "hotel_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Reserve_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "pais",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estado_reserva",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "room_ID",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "Q_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "T_tipo_quarto",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "rate_plan",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "data_reserva",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "data_chegada",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "data_partida",
          "tpe": {
           "presentableName": "date"
          },
          "nullable": true
         },
         {
          "name": "num_noites",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "ocupacao",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "preco_euros",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "dif_data_chegada_data_reserva",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "quantidade",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_maxima",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_adultos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "capacidade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "area_localizacao",
          "tpe": {
           "presentableName": "string"
          },
          "nullable": true
         },
         {
          "name": "estrelas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_criancas",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "idade_max_bebes",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "hora_max_checkin",
          "tpe": {
           "presentableName": "timestamp"
          },
          "nullable": true
         },
         {
          "name": "qtd_quartos",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "is_holiday",
          "tpe": {
           "presentableName": "integer"
          },
          "nullable": true
         },
         {
          "name": "event_count",
          "tpe": {
           "presentableName": "long"
          },
          "nullable": false
         },
         {
          "name": "temperature_avg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "temperature_max",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "temperature_min",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_avg",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_max",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         },
         {
          "name": "precipitation_min",
          "tpe": {
           "presentableName": "double"
          },
          "nullable": true
         }
        ]
       }
      ]
     }
    },
    "forms": {}
   },
   "apps": [],
   "status": "FINISHED",
   "text": "joinMeteoGrouped.createOrReplaceTempView(\"FinalDataSet\")\n\nval FinalDataSet = spark.sql(\"select * from FinalDataSet\")\nprintln(FinalDataSet.count())\nFinalDataSet.show()\n\nsaveDataFrame(FinalDataSet, \"FinalDataSet\")",
   "id": "",
   "dateCreated": "2023-05-01 15:47:23.871",
   "config": {},
   "dateStarted": "2023-05-18 23:18:58.838",
   "dateUpdated": "2023-05-18 23:19:23.772",
   "dateFinished": "2023-05-18 23:19:23.772",
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "24947\n+--------+----------+--------------+--------------+-------+--------------------+--------------------+--------------------+--------------------+------------+------------+----------+--------+-------+--------+-----+-------------+-----------------------------+----------+-----------------+----------------------+-----------------------+--------------------+--------------------+----------------+--------+------------------+---------------+-------------------+-----------+----------+-----------+------------------+---------------+---------------+-----------------+-----------------+-----------------+\n|hotel_ID|Reserve_ID|          pais|estado_reserva|room_ID|       Q_tipo_quarto|       T_tipo_quarto|           rate_plan|        data_reserva|data_chegada|data_partida|num_noites|ocupacao|adultos|criancas|bebes|  preco_euros|dif_data_chegada_data_reserva|quantidade|capacidade_maxima|capacidade_max_adultos|capacidade_max_criancas|capacidade_max_bebes|         localizacao|area_localizacao|estrelas|idade_max_criancas|idade_max_bebes|   hora_max_checkin|qtd_quartos|is_holiday|event_count|   temperature_avg|temperature_max|temperature_min|precipitation_avg|precipitation_max|precipitation_min|\nn|     310|   1457395|      Portugal|    Modificada|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|        main rate bb|2022-03-23 13:51:...|  2022-03-25|  2022-03-27|         2|       2|      2|       0|    0|        138.0|                            2|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|15.533333333333331|           21.8|            9.2|             null|             null|             null|\n|     311|   1646445|      Portugal|    Modificada|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        main rate bb|2022-12-28 11:37:...|  2023-01-02|  2023-01-03|         1|       1|      1|       0|    0|       65.709|                            5|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         0|          0|               9.5|           15.0|            5.0|             0.15|              0.3|              0.0|\n|     535|   1696195|      Portugal|     Registado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-03-12 22:15:...|  2023-05-05|  2023-05-07|         2|       2|      2|       0|    0|        157.5|                           54|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          1|              null|           null|           null|             null|             null|             null|\n|     310|   1478472|      Portugal|     Registado|   1673|Quarto Duplo Supe...|Quarto Duplo Supe...|      non-refundable|2022-04-21 09:19:...|  2022-04-21|  2022-04-22|         1|       1|      1|       0|    0|         47.7|                            0|        63|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|              9.85|           13.4|            7.3|             null|             null|             null|\n|     514|   1535824|   Reino Unido|    Modificada|   2494|           Pool Room|           Pool Room|      non-refundable|2022-07-05 10:59:...|  2022-08-13|  2022-08-17|         4|       2|      2|       0|    0|        702.0|                           39|         5|                3|                     3|                      0|                   0|Charneca de Caparica|       Carnaxide|       3|                12|             24|2023-05-18 18:00:00|         13|         1|          0|              21.9|           29.9|           18.1|              0.0|              0.0|              0.0|\n|     322|   1494812|       Espanha|     Registado|   1413|               Duplo|               Duplo|reembolsvel suple...|2022-05-12 17:54:...|  2022-07-31|  2022-08-02|         2|       2|      2|       0|    0|        160.0|                           80|        19|                2|                     2|                      1|                   0|              Aveiro|          Aveiro|       3|                10|             24|2023-05-18 23:59:00|         52|         0|          0|20.633333333333333|           28.3|           17.2|             null|             null|             null|\n|     309|   1459664|      Portugal|    Modificada|   1372|Quarto Duplo Stan...|Quarto Duplo Stan...|      non-refundable|2022-03-26 20:48:...|  2022-03-29|  2022-03-30|         1|       2|      2|       0|    0|         43.0|                            3|        10|                2|                     2|                      1|                   0|             Valongo|           Porto|       3|                12|              4|2023-05-18 23:59:00|         41|         0|          0|             13.55|           22.5|            8.5|             null|             null|             null|\n|     311|   1628596|Arábia Saudita|     Registado|   1407|DB - Quarto Duplo...|DB - Quarto Duplo...|        mr main rate|2022-11-20 14:59:...|  2022-12-01|  2022-12-02|         1|       2|      2|       0|    0|        57.33|                           11|         8|                2|                     2|                      2|                   0|                Maia|            Maia|       3|                12|             36|2023-05-18 23:59:00|         30|         1|          0|              10.5|           18.0|            5.0|              0.0|              0.0|              0.0|\n|     304|   1589923|        França|     Registado|   1357|203 - Quarto Dupl...|203 - Quarto Dupl...|         tarifa site|2022-09-15 19:26:...|  2022-09-28|  2022-09-30|         2|       2|      2|       0|    0|       139.84|                           13|         1|                2|                     2|                      0|                   0|             Coimbra|         Coimbra|       0|                11|             23|2023-05-18 22:30:00|         28|         0|          0|15.866666666666665|           20.9|           11.1|              1.2|              3.3|              0.1|\n|     482|   1488375|       Irlanda|     Registado|   2286|      Apartamento T2|      Apartamento T2|             website|2022-05-04 20:35:...|  2022-08-10|  2022-08-15|         5|       6|      6|       0|    0|       1235.0|                           98|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         1|          0|21.700000000000003|           27.5|           17.5|             null|             null|             null|\n|     482|   1620626|      Portugal|     Registado|   2285|      Apartamento T1|      Apartamento T1|      non-refundable|2022-11-04 22:59:...|  2022-11-04|  2022-11-06|         2|       2|      2|       0|    0|61.8399999999|                            0|        90|                4|                     4|                      3|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0|18.433333333333334|           22.4|           15.2|             null|             null|             null|\n|     504|   1581442|      Portugal|     Registado|   2378|       Cela Sæculare|       Cela Sæculare|                 bar|2022-09-02 22:26:...|  2022-09-03|  2022-09-05|         2|       2|      2|       0|    0|      169.575|                            1|        13|                2|                     2|                      0|                   1|              Monção|          Monção|       4|                12|             36|2023-05-18 23:59:00|         27|         0|          0|              18.1|           23.6|           11.1|              2.5|              5.9|              0.0|\n|     310|   1626279|      Portugal|     Cancelado|   1395|Quarto Duplo Stan...|Quarto Duplo Stan...|        mr main rate|2022-11-15 23:35:...|  2022-11-26|  2022-11-27|         1|       2|      2|       0|    0|         44.1|                           11|        10|                2|                     2|                      1|                   0|                Gaia|           Porto|       3|                 0|              0|2023-05-18 23:59:00|        192|         0|          0|              11.2|           15.7|            8.4|             5.05|             10.1|              0.0|\n|     493|   1689638|      Portugal|     Registado|   2800| Estudio com lareira| Estudio com lareira|                 bar|2023-03-03 12:31:...|  2023-03-12|  2023-03-14|         2|       2|      2|       0|    0|        140.0|                            9|         1|                2|                     2|                      1|                   1|           Carnaxide|       Carnaxide|       0|                 0|              0|2023-05-18 12:00:00|          5|         0|          0|              15.5|           19.3|           12.0|              0.0|              0.0|              0.0|\n|     535|   1651261|      Portugal|     Cancelado|   2523|        Quarto Duplo|        Quarto Duplo|             website|2023-01-06 10:35:...|  2023-01-12|  2023-01-14|         2|       2|      4|       0|    0|        252.0|                            6|         5|                3|                     2|                      1|                   1| Travanca do Mondego|         Coimbra|       4|                12|             24|2023-05-18 23:55:00|         11|         0|          0|10.699999999999998|           14.8|            5.5|              0.0|              0.0|              0.0|\n|     445|   1444187|   Reino Unido|     Registado|   2139|       Terrace Room |       Terrace Room |                 bar|2022-02-28 20:03:...|  2022-03-06|  2022-03-12|         6|       2|      2|       0|    0|        900.0|                            6|         3|                2|                     2|                      0|                   0| Conceição de Tavira|       Albufeira|       4|                12|             36|2023-05-18 12:00:00|         15|         0|          0|13.414285714285715|           18.0|            7.3|             null|             null|             null|\n|     482|   1466794|        França|     Registado|   2286|      Apartamento T2|      Apartamento T2|      non-refundable|2022-04-04 21:27:...|  2022-08-03|  2022-08-08|         5|       5|      5|       0|    1|      1148.55|                          121|        43|                6|                     6|                      5|                   1|            Portimão|           Lagos|       4|                 3|             36|2023-05-18 23:59:00|        143|         0|          0| 21.36666666666667|           26.8|           16.8|             null|             null|             null|\n|     378|   1706060|        Canadá|    Modificada|   1738|Duplo ou Twin Sta...|Duplo ou Twin Sta...|      non-refundable|2023-03-26 17:45:...|  2023-06-01|  2023-06-06|         5|       2|      2|       0|    1|        400.0|                           67|         7|                2|                     2|                      1|                   1|             Batalha|         Batalha|       3|                12|             24|2023-05-18 23:30:00|         23|         0|          0|              null|           null|           null|             null|             null|             null|\n|     444|   1431937|Estados Unidos|     Cancelado|   2076|               Suite|               Suite|              normal|2022-02-06 21:03:...|  2022-04-15|  2022-04-16|         1|       2|      4|       4|    0|        320.0|                           68|         4|                4|                     2|                      3|                   1|              Nazaré|         Batalha|       4|                12|             24|2023-05-18 23:59:00|         77|         1|          0|              14.7|           20.0|           11.5|             null|             null|             null|\n|     556|   1476905|      Portugal|     Registado|   2847|Double Room w/ext...|Double Room w/ext...|             website|2022-04-19 07:39:...|  2022-06-05|  2022-06-06|         1|       2|      2|       1|    0|        101.0|                           47|         2|                3|                     3|                      1|                   1|             Covilhã|  Castelo Branco|       3|                10|              3|2023-05-18 23:00:00|         84|         0|          0|             20.85|           30.2|           11.3|              0.0|              0.0|              0.0|\nnonly showing top 20 rows\n\n\u001b[1m\u001b[34mFinalDataSet\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [hotel_ID: int, Reserve_ID: int ... 36 more fields]\n"
     }
    ]
   }
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}